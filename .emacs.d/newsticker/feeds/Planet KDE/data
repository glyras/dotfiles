;; -*- coding: utf-8 -*-
(("Planet KDE" "Planet KDE - http://planetKDE.org/" "http://planetKDE.org/" (19641 34302 336698) feed 0 nil nil ((title nil "Planet KDE") (link nil "http://planetKDE.org/") (language nil "en") (description nil "Planet KDE - http://planetKDE.org/") (atom:link ((href . "http://planetKDE.org/rss20.xml") (rel . "self") (type . "application/rss+xml"))) (item nil (guid ((isPermaLink . "false")) "http://der-dakon.net/blog/KDE/portugal-can-win") (title nil "Rolf Eike Beer (Dakon): Portugal can win") (pubDate nil "Sat, 16 Oct 2010 09:19:57 GMT") (link nil "http://der-dakon.net/blog/KDE/portugal-can-win.html") (description nil "<p>This night Albert <a href=\"http://websvn.kde.org/?view=revision&amp;revision=1186338\">committed</a> a patch I have written so all teams with the same number of translated messages now get the same rank on the web page. Currently we have 5 teams scoring gold for the stable translations. Portugese now is one of them while Greek has dropped to rank 24. I hope we get the top ten teams to all score gold until the release of 4.5.3, which means 64 messages worst case (Chinese Traditional). Come on guys, go for it!</p>")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-5432566687488141671.post-8886467140288109229") (title nil "Valorie Zimmerman (valorie): Post-Maverick Install Woes - no /home") (pubDate nil "Sat, 16 Oct 2010 08:58:49 GMT") (link nil "http://linuxgrandma.blogspot.com/2010/10/post-maverick-install-woes-no-home.html") (description nil "<p>Why oh why? I told the process Not To Touch my /home, which Thomas had so thoughtfully labelled. AND said to use it as /home. But cat fstab shows: <br /><pre>$ cat fstab<br /># /etc/fstab: static file system information.<br />#<br /># Use 'blkid -o value -s UUID' to print the universally unique identifier<br /># for a device; this may be used with UUID= as a more robust way to name<br /># devices that works even if disks are added and removed. See fstab(5).<br />#<br />#                <br />proc            /proc           proc    nodev,noexec,nosuid 0       0<br /># / was on /dev/sdb1 during installation<br />UUID=649ffd64-17b4-4a95-aebe-360413cc3203 /               ext4    errors=remount-ro 0       1<br /># swap was on /dev/sdb5 during installation<br />UUID=dfe16a55-80c3-42c8-937a-4341cb2886c8 none            swap    sw              0       0</pre><br />Where is /dev/sdb6, which was /home?<br /><br />I can't deal with this tonight. I can't feel too discouraged, after escaping from the botch-install hell of the last couple of days. Maverick looks and feels GREAT! It's just bizarre to have no settings, and no content whatsoever, not even my old backup. Amarok is lonesome with no music.<br /><br />Maco asks, in IRC, if the partition is still on the harddisk, which of course has been my question. <pre>sudo fdisk -l</pre>tells me:<br /><pre>Disk /dev/sda: 400.1 GB, 400088457216 bytes<br />255 heads, 63 sectors/track, 48641 cylinders<br />Units = cylinders of 16065 * 512 = 8225280 bytes<br />Sector size (logical/physical): 512 bytes / 512 bytes<br />I/O size (minimum/optimal): 512 bytes / 512 bytes<br />Disk identifier: 0x000c403c<br /><br />   Device Boot      Start         End      Blocks   Id  System<br />/dev/sda1   *           1        2432    19530752   83  Linux<br />/dev/sda2            2432       48642   371178497    5  Extended<br />/dev/sda5            2432        2918     3905536   82  Linux swap / Solaris<br />/dev/sda6            2919       48642   367271936   83  Linux<br /><br />Disk /dev/sdb: 7958 MB, 7958691840 bytes<br />245 heads, 62 sectors/track, 1023 cylinders<br />Units = cylinders of 15190 * 512 = 7777280 bytes<br />Sector size (logical/physical): 512 bytes / 512 bytes<br />I/O size (minimum/optimal): 512 bytes / 512 bytes<br />Disk identifier: 0x000ee8a7<br /><br />   Device Boot      Start         End      Blocks   Id  System<br />/dev/sdb1   *           1        1023     7769654    c  W95 FAT32 (LBA)<br />Partition 1 has different physical/logical endings:<br />     phys=(1023, 244, 62) logical=(1022, 244, 62)</pre><br />At this point, <pre>sudo blkid /dev/sda6</pre>to get the UUID for /dev/sda6, which says: <pre>/dev/sda6: LABEL=\"home\" UUID=\"1e3555c0-f248-446e-a9a7-6a42ab95eced\" TYPE=\"ext4\"</pre>Yay! It's still there on the disk, still with it's nice label. Thanks, Thomas!<br /><br />Now it's time to edit fstab, and add the line: <pre>UUID=1e3555c0-f248-446e-a9a7-6a42ab95eced /home               ext4    errors=remount-ro 0       1</pre><br />I did that by using Kate, which is somewhat unorthodox, but it's what I like. <pre>sudo kate</pre>then append the line above, save as fstab. Finally, I moved my present $HOME in case I need some of the settings or files from the last few days. <pre>sudo mv $HOME /oldhome</pre>and then restart. Let's see if it works!<br /><br />===========<br /><br />I want to report success! My /home is all happy, and my /oldhome dotfiles mostly copied back over. This time around, Chromium built OK, and I'm actually editing this blog in it now. Hallelujah, Maverick rocks! If I can build Amarok from source again, I'll be in heaven.<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/5432566687488141671-8886467140288109229?l=linuxgrandma.blogspot.com\" width=\"1\" /></div>")) (item nil) (item nil) (item nil (guid ((isPermaLink . "false")) "http://blogs.fsfe.org/adridg/?p=1007") (title nil "Adriaan de Groot (adridg): Coming out for Pink") (pubDate nil "Fri, 15 Oct 2010 18:42:10 GMT") (link nil "http://blogs.fsfe.org/adridg/?p=1007") (description nil "<p><span style=\"color: pink;\">Thanks to lots of comments on my previous blog post about color schemes</span>, I&#8217;ve made things Moar Pink. If you&#8217;re not yet ready to <a href=\"http://icanhascheezburger.com/2009/09/03/funny-pictures-ugly-to-eliminate/\">destroy that color</a>, here&#8217;s the start of the (pink) art.</p>
<p><img height=\"500\" src=\"http://blogs.fsfe.org/adridg/files/2010/10/pink2.png\" width=\"800\" /></p>
<p>Icons have been pinkified &#8212; where you can see that some are resistant like the battery and SELinux &#8212; a little more harmony has been created between the colors. Notice that the icons do become a little monochrome like this (or is it bichrome?) because the color nuances are smashed flat with a pink hammer. I&#8217;ve also added a custom Konqueror stylesheet to keep things pink when visited websites don&#8217;t have anything set. There&#8217;s still some uncomfortable blue in links (also in Blogilo) and message counts (KMail). And of course KMail still has the blue swoosh while switching folders &#8212; I can&#8217;t see that that is configurable anywhere.</p>
<p>Olaf points out that there was work done on system-color-settings compatible color schemes for some applications. That&#8217;s definitely something to keep in mind.</p>
<p>Now, this exercise isn&#8217;t <strong>just</strong> about being horrifyingly pink. I came up with a few usage scenarios where easy-to-do global appearance updates are interesting:</p>
<ul>
<li>Distribution branding. I know, most ditro&#8217;s do this by hand already. But having a good checklist of where to look and what to modify would make it easier on them. Plus, you could then publish, say, the Fedora look and make it easy to install onto any KDE desktop installation.</li>
<li>&quot;Hey, your desktop is cool, can I have that?&quot;</li>
<li>Quick user switching.</li>
<li>Activity customization.</li>
<li>Environment-aware computing. When you move your laptop outside, the color scheme changes and everything becomes higher-contrast and more sharply defined. Like the n900&#8217;s keyboard lights up in the dark, but now for wallpapers and color schemes.</li>
<li>Pretending that your video cable is damaged so that one color drops out.</li>
</ul>
<p> I <strong>so</strong> need to start a TechBase article on colorizing and global appearance customization.</p>")) (item nil) (item nil (guid ((isPermaLink . "false")) "http://www.notmart.org/index.php/Software/A_Declaration_of_Plasma_Love") (title nil "Marco Martin (notmart): A Declaration of Plasma Love") (pubDate nil "Fri, 15 Oct 2010 17:06:16 GMT") (link nil "http://www.notmart.org/index.php/Software/A_Declaration_of_Plasma_Love") (description nil "<p><img alt=\"Declarative RSS reader\" src=\"http://www.notmart.org/misc/declarative_newsreader.png\" style=\"float: left; margin-right: 2em;\" /> The image on the left is a new (example) plasmoid that marks an important change... this is going to be a quite massive blog post, with pretty technical details about what I think is going to be a feature of an higly important strategic relevance on the road towards Plasma as a mature and powerful platform.</p>
<p>The <strong>Plasma declarative bindings have landed</strong> into kdebase! This means it will be possible  to use the new QML language part on Qt 4.7.</p>
<p>As Aaron <a href=\"http://aseigo.blogspot.com/2010/10/plasma-in-18-24-months.html\">noted</a> some days ago, QML in conjunction with now in heavy development technologies like QtComponents (and in the future Qt cene-graph) will play a key role in the creation of user interfaces in the future, and gives us a very important puzzle piece we were still sorta missing.</p>
<p>So we deceided to be (as usual ;) erly adopters of the technology and with the KDE Plasma workspace 4.6 the first pieces will be in place for the roadmap that will lead us basically to this path:</p>
<ul>
  <li>Separate the implementation of the logic from the user interface</li>
  <li>Avoid C++ (and well, any imperative language) as much as possible for the UI</li>
  <li>Be flexible, an application should be able to jump between different devices as easily as possible</li>
  <li>do applications that can chose the proper ui amond different choiced depending on the device used, the screen size, the input methods and what not</li>
  <li>With QtComponents, use what will be the native set of widgets/components for the given platform: on a MeeGo phone, use its own widgets, theme and UI paradigms, but a different interface somewhere else</li>
  <li>Performance, perforance, performance, enter <a href=\"http://labs.qt.nokia.com/2010/10/08/qt-scene-graph-round-2\">Qt scene graph</a></li>
</ul>

<p>So, what will have the KDE Plasma platform 4.6 of all of this?</p>

<h4>Use QML from C++ Plasma widgets</h4>
<p>The first pass (needed to do the following one) is to have a way to easily load a QML file into a normal C++ plasmoid. Now, loading a QML file into a QGraphicsScene (and making it well behave inside the QGraphicsLayout based Plasma widgets) is a quite simple operation, however it is a bit long and repetitive amount of boilerplate code... enter <a href=\"http://api.kde.org/4.x-api/kdelibs-apidocs/plasma/html/classPlasma_1_1DeclarativeWidget.html\">Plasma::DeclarativeWidget</a>.</p>
<p>This is a normal QGraphicsWidget just like the other Plasma widgets, all you have to do is to add it in the QGraphicsLayout of the applet, set the path of a QML file in it et voil&#224;, that's it, you will be able to use about any QML based ui in this way, even if as we will see, if you write a QML/JavaScript only plasmoid there is a richer API available.</p>

<h4>Plasma related goodies in QML</h4>
<p>QML has a system of exensions called <em>imports</em>: Plasma offers 3 of them, that will be usable by <em>any</em> KDE application that wants to do a bit of QML UI:</p>
<ul>
 <li><em>org.kde.plasma.graphicswidgets</em> : bindings for all our old widgets, in a QML file you just have to write something like PlasmaWidgets.PushButton{text:\"foo\"; onClicked:doSomething()} to have a working Plasma pushbutton for instance. Those will be gradually replaced with QtComponents as they become ready.</li>

 <li><em>org.kde.plasma.graphicslayouts</em> : bindings for qgraphicslinearlayout and 
qgraphicsgridlayout. In QML use their anchor based layouts where possible, but it's still nice to have qgraphicslayouts in there for the qgraphicswidgets based Plsma widgets</li>

 <li><em>org.kde.plasma.core</em> : some core functionality of Pasma, actually the most important things offered here. A DataSource class, to connect to dataengines in a declarative way, alongside classes for the Plasma Theme and our SVG painting and manipulation routines.</li>
</ul>

<h4>Pure QML Plasma widgets</h4>
<p>This is where it gets interesting. Since some releases of the KDE Plasma platform, is possible to write plasmoids using just JavaScript.</p>
<p>And not only Plasma Widgets, but DataEngines, Services and Runners too.</p>
<p>We are very happy of those bindings, because they bring a great ease of use in a sandboxed environment, while retaining the possibility to <a href=\"http://techbase.kde.org/Development/Tutorials/Plasma/JavaScript/API#Extensions\">extend</a> them to do more system level operations.</p>
<p>Something that is really important as well is the possibility to <a href=\"http://techbase.kde.org/Development/Tutorials/Plasma/JavaScript/API#Addons_.28API_V3.29\">add extra functionality</a> to them, in a plugin-based fashion, so it's possible to dynamically add/remove functionality, or update the extra addons plugins.</p>
<p>A place where it's used is the Pastebin Dataengine/Service, where each pastebin-like site has its own addon, simple to add and update.</p>
<p>Another place is in the Plasma Mediacenter project. we have a JavaScript based dataengine used to query various media-related sites (like, YouTube, flickr, you name it). Each backend is a different addon, adding or updating the support for a new site is very simple (and will be possible to do so with Get hot new stuff)</p>

<p>So all of this is very nice, the only part that we weren't so happy was the definition of the user interface of the Plasma widget itself. While significantly easier than C++, it was still an imperative based approach, with manual layout manipulation in the code, like:</p>

<pre>
  layout = new LinearLayout(plasmoid);
  layout.orientation = QtVertical;

  label = new Label();
  layout.addItem(label);
</pre>

<p>That for instnce makes impossible to have a graphical designer for the layout, like the good old Qt Designer for QWidget based user interfaces.</p>
<p>QML solves the problem, since is a declarative based language to define user interfaces that even comes with a nice graphical designer in the <a href=\"http://labs.qt.nokia.com/2010/10/07/qt-creator-2-1-0beta/\">latest version</a> of the QtCreator IDE, besides making significantly easier to do completely animated user interfaces.</p>
<p>Given the amount of nice features we had in our JavaScript bindings, it was really \"mandatory\" to not lose any of this, what we really want is the full power of our current JS bindings, with easy access to dataengines, services, exensions, packages, addons and what not; all of this while using the new way to define user interfaces.</p>
<p>This is exactly what landed in trunk (kdebase/runtime) yesterday: a variant of the Plasma JS bindings that shares 90% of the code with its \"imperative\" brother, so let's see an example of a plasmoid written with this new beast.</p>

<h4>Read some news</h4>
<p>This example plasmoid is a simple RSS feed reader, right now only a prototype but when will be progressed enough could be a good candidate for the progressive replacement of the components of the default Plasma Desktop towards QML and QtComponents.</p>
<p>First, let's see how it's behaving: videos are always fun ;)</p>



<p><a href=\"http://blip.tv/file/get/Notmart-KDEQtQUICKRSSNewsreader452.ogv\">OGG version</a></p>

<p>As you can see, while it's still missing some touches to be a new default, it's already quite more powerful and pretty compared to the curret C++ one, while it has a fraction of the code.</p>
<p>Now, that the candy is done, let's go to the scary part: the <a href=\"http://www.notmart.org/misc/declarativenewsreader.qml\">code</a>, but as ou can see it's not as scary as it usually is ;)</p>
<p>there are some interesting things in that code that need to be outlined:</p>
<p>Import of the Plasma related modules:</p>
<pre>
  import Qt 4.7
  import org.kde.plasma.graphicswidgets 0.1 as PlasmaWidgets
  import org.kde.plasma.core 0.1 as PlasmaCore
  import org.kde.plasma.graphicslayouts 4.7 as GraphicsLayouts
</pre>

<p>As soon as the loading is completed, as in JS bindings, you can register JS functions defined in the QML component itself as \"listeners\" for events, in this case the change of the configuration file: note that you have a global object called \"plasmoid\" just as in the JS bindings, with exactly the same API.</p>
<pre>
    Component.onCompleted: {
        plasmoid.addEventListener('ConfigChanged', configChanged);
    }

    function configChanged()
    {
        var url = plasmoid.readConfig(\"feeds\")
        print(\"Configuration changed: \" + url);
        dataSource.source = url
    }
</pre>

<p>Connecting to a DataEngine is very easy:</p>
<pre>
    PlasmaCore.DataSource {
        id: dataSource
        engine: \"rss\"
        interval: 50000
    }
</pre>

<p>If the dataengine results provide a list of items, in this case the list of recent posts of the RSS feed, is really easy to visualize them in a ListView.</p>

<pre>
ListView {
    id: list
    anchors.fill: listContainer
    signal itemClicked;
    spacing: 5;
    snapMode: ListView.SnapToItem

    clip: true
    /*dataSource.data contains the result of the dataengine,
      dataSource.data['items'] the list of the posts of the RSS feed*/
    model: dataSource.data['items']
    delegate: simpleText
}
</pre>

<p>Then we want to visualize individual items of the list: enter <em>delegates</em> (here just a little part for clarity).</p>

<pre>
resources: [
    Component {
        id: simpleText

   [snip]

            Text {
                color: theme.textColor
                textFormat: Text.RichText
                //model.modelData.title is the title of the post
                //represented by the delegate instance
                text: model.modelData.title
            }

   [snip]
</pre>

<p>This was a not exactly trivial example, but as you can see the code is still not so long and quite clear and understandable. in subversion there are quite a lot of examples that cover the usage of services, addons, extesions and what not.</p>

<h4>In conclusion...</h4>
<p>All of this is quite a milestone for Plasma, since will allow us to develop new features (and good looking ones!) in a very small amount of time and in a safer way than a pure C++ based approach.</p>
<p>Needless to say, all of this is still quite experimental, and prior to the release of the KDE platform 4.6 any part of it can still change quite a lot.</p>
<p>So in the end to recap, what QML and QtComponents can offer to Plasma? A very easy to use, build and <em>interchangeable</em> user interface.</p>
<p>But, (and here is what i'm interested more ;) what Plasma has to offer to QML?</p>
<ul>
  <li>A very easy way to package and deploy simple QML based applications</li>
  <li>A bridge to use a good portion of the KDE platform API from them</li>
  <li>A coherent workspace environment to load and display said tiny applications (Plasma Desktop, Netbook, Mobile, or the \"standalone application\" loader Plasma-Windowed)</li>
  <li>An easy way to distribute, search, upload and download them (Get Hot New Stuff)</li>
  <li>API wise, powerful and coherent plugin based systems to query data from local or remote sources, with the ability to use C++, Javascript or any other language we have bindings for (DataEngines, Services, Addons, Extensions)</li>
  <li>An uniform (and pretty) way to style any graphical element with a powerful (but still pretty efficient) theme engine completely based upon SVG (this part will be stressed even more with the introduction of QtComponents)</li>
</ul>")) (item nil (guid ((isPermaLink . "false")) "http://kdepi.wordpress.com/?p=206") (title nil "Aracele Torres (araceletorres): KDE Forum Brazil – Northeast Edition") (pubDate nil "Fri, 15 Oct 2010 16:53:00 GMT") (link nil "http://kdepi.wordpress.com/2010/10/15/kde-forum-brazil-northeast-edition/") (description nil "<p>Hi all!</p>
<p style=\"text-align: justify;\">On 5 and 6 November there will be the <a href=\"http://ensl.org.br/2010/iii-forum-kde-brasil-edicao-nordeste/\" target=\"_blank\">KDE Forum Brazil &#8211; Northeast Edition</a> in Natal, Rio Grande do Norte. The KDE  Forum Brazil &#8211; Northeast Edition is the latest achievement of the &#8220;KDE  Forum Brazil&#8221; in the International Free Software Forum (FISL), but this  time as a satellite event of the <a href=\"http://ensl.org.br/2010/apresentacao/\" target=\"_blank\">Northeast Meeting of Free  Software</a>. The aim is to present lectures  on the topics currently being discussed in KDE and provide practical  experiences in the form of mini-courses on the main technologies used  in day-to-day contribution to the project.</p>
<p style=\"text-align: justify;\">The importance of Northeast Meeting of Free Software is to descentralize the free software events in Brazil, which occur with more frequency in the south/southeast of the country. Brazil is a continental proportion country, thus, some displacements are equivalent to travels across many european countries, in terms of distance and time.</p>
<p style=\"text-align: justify;\">So, the Northeast Meeting of Free Software agregates the brazilian community&#160; closest to the littoral, backland e tropical regions of the country. We are more hot than the south people. <img alt=\":-)\" class=\"wp-smiley\" src=\"http://s2.wp.com/wp-includes/images/smilies/icon_smile.gif\" /> </p>
<p>The event schedule will be:</p>
<h4><strong>Day 05/11</strong></h4>
<table>
<tbody>
<tr>
<th>Hour</th>
<th>Talk</th>
<th>Speaker</th>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">08h45</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Opening</td>
<td bgcolor=\"#edf4f9\" valign=\"top\"></td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\">09h</td>
<td bgcolor=\"#ffffff\" valign=\"top\">KDE: Wear the shirt!</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Amanda Castro</td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">10h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">KDE in your language &#8230;</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Aracele Torres</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\"></td>
<td bgcolor=\"#ffffff\" valign=\"top\"></td>
<td bgcolor=\"#ffffff\" valign=\"top\"></td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">13h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Developing for KDE</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Sandro Andrade</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\">14h</td>
<td bgcolor=\"#ffffff\" valign=\"top\">KDE in Google Summer of Code</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Paulo R&#244;mulo</td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">15h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">KDE Lovelace</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Amanda Castro e Aracele Torres</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\">16h</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Qt/KDE on Mobiles</td>
<td bgcolor=\"#ffffff\" valign=\"top\">INdT</td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">17h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">(Re) Discover KDE</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">H&#233;lio Chissini de Castro</td>
</tr>
</tbody>
</table>
<h4><strong>Day 06/11</strong></h4>
<table>
<tbody>
<tr>
<th>Hour</th>
<th>Talk</th>
<th>Speaker</th>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">09h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Mini-course: Basic Qt</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Sandro Andrade</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\">10h</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Mini-course: Basic Qt</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Sandro Andrade</td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">11h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Mini-course: Basic Qt</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Sandro Andrade</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\"></td>
<td bgcolor=\"#ffffff\" valign=\"top\"></td>
<td bgcolor=\"#ffffff\" valign=\"top\"></td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">13h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Mini-course: Develop your Plasmoid JavaScript in 20 Minutes</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Sandro Andrade</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\">14h</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Mini-course: Talking to your programs via D-Bus</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Lamarque Souza</td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">15h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Mini-course: Talking to your programs via D-Bus</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Lamarque Souza</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\">16h</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Mini-course: Talking to your programs via D-Bus</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Lamarque Souza</td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">17h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Closing and Raffle Giveaways</td>
</tr>
</tbody>
</table>
<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/kdepi.wordpress.com/206/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/kdepi.wordpress.com/206/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/kdepi.wordpress.com/206/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/kdepi.wordpress.com/206/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/kdepi.wordpress.com/206/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/kdepi.wordpress.com/206/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/kdepi.wordpress.com/206/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=kdepi.wordpress.com&amp;blog=13513203&amp;post=206&amp;subd=kdepi&amp;ref=&amp;feed=1\" width=\"1\" />")) (item nil (guid ((isPermaLink . "false")) "http://www.kdedevelopers.org/4341 at http://www.kdedevelopers.org") (title nil "Will Stephenson: openSUSE Conference KDE Team Party") (pubDate nil "Fri, 15 Oct 2010 14:12:52 GMT") (link nil "http://www.kdedevelopers.org/node/4341") (description nil "<p>Next week is openSUSE Conference week!  I'm using both my <a href=\"http://lizards.opensuse.org/author/wstephenson/\">openSUSE</a> and KDE blogs to remind everyone that we're having <a href=\"http://en.opensuse.org/openSUSE:Conference_Kde_Social\">a pre-conference meetup</a> at 6pm for the KDE team before the real conference begins at Barf&#252;&#223;er in the Nuernberg old town.  Remember a morning of keynotes is only fun if you have a thumping hangover from microbrewed beer (and if you're a keynote speaker, from local schapps too)!  If you are attending the conference or if you are just a friend of KDE in the area, please join in.  </p>
<p><a href=\"http://www.flickr.com/photos/wstephenson/271479660/\" title=\"KDE Hysteria! by will.stephenson, on Flickr\"><img align=\"center\" alt=\"pa130024.jpg\" height=\"225\" src=\"http://farm1.static.flickr.com/106/271479660_0e405d089f.jpg\" width=\"300\" /></a></p>
<p>If you <a href=\"http://en.opensuse.org/openSUSE:Conference_Kde_Social\">add your name to the wiki</a> I'll have an idea how big a table we need, I've provisionally got space for 20.</p>
<p>Will</p>")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-12366865.post-5882275609166970427") (title nil "Jos Poortvliet: Last piece of strategy before the conference") (pubDate nil "Fri, 15 Oct 2010 11:28:30 GMT") (link nil "http://nowwhatthe.blogspot.com/2010/10/last-piece-of-strategy-before.html") (description nil "<p>Hi all!<br /><br />The strategy discussion in openSUSE is a difficult one. I wrote in the <a href=\"http://news.opensuse.org/2010/10/15/finalizing-who-we-are/\">latest announcement</a> this: <blockquote>So if you've held back, have not had a look at this yet - now or never! Provide your input on the draft on <a href=\"https://lite.co-ment.com/text/lNPCgzeGHdV/view/\">co-ment</a> and help shape our description of what being a Geeko means to us all. Yes, this will hopefully describe ourselves - where we stand, but also add a bit of pepper and salt and show our ambitions. Our strategy document has to be inclusive - but not too long. It has to show some ambition - but must also be realistic.</blockquote>This is not easy. We're a hugely diversified community with all sorts of users and contributors. We do NOT aim to change that - we're openSUSE after all. But we also have to make choices and have a profile potential users and contributors can recognize themselves in. Take 'beginners'. What does that mean? Are we talking about people who haven't used computers before? openSUSE should be fine for them - if they are looking to learn, play with it a bit. Someone who only needs a computer to check mail will probably need help, however, to get it up and running. They are not interested in reading on a forum about how to install multimedia codecs. So we target the person who will help him or her installing it and setting it up! Which again doesn't exclude a community team working on a super-simple openSUSE with everything a beginner needs - our infrastructure supports them. But we have to pick our battles, and openSUSE is traditionally a distribution which is powerful and flexible - we don't want to sacrifice functionality in our default offering. We want a graphics professional to be able to have all the powertools at his or her fingertips; we want a sysadmin to have an easy-to-administer system; we want a teacher to have a wide choice of interesting learning tools; we want a pro-audio user to easily install a low-latency kernel. openSUSE should not be harder than it has to be - but you may notice the power under your fingertips.<br /><br />Anyway. Lots of talk, the resulting new paragraph in the description of our target users is dramatically shorter than the old one:<br /><blockquote>openSUSE users are looking for an easy and comfortable computing experience which does not limit  their freedom of choice, offering sane defaults and easy configuration.</blockquote><br /><br />I think I like it, but the 'old' one (with updates) is also up on co-ment - let me know which one you like more. I even have a bunch of iterations in a piratepad <a href=\"http://piratepad.net/SaznzxopP0\">here</a>, feel free to look at the evolution. Altough this is only from today, yesterday I worked until 1 with Thomas Thym (thanks!). Today I had help from Klaas Freitag, Will stephenson and Henne Vogelsang for helping with this single sentence... I could not have done it alone! To paraphrase Thomas from last night: a team is more than the sum of the individuals. <br /><br />Love, Jos<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/12366865-5882275609166970427?l=nowwhatthe.blogspot.com\" width=\"1\" /></div>")) (item nil (guid ((isPermaLink . "false")) "http://www.digikam.org/541 at http://www.digikam.org/drupal") (title nil "Dimitri Popov: Using digiKam with MySQL") (pubDate nil "Fri, 15 Oct 2010 09:12:54 GMT") (link nil "http://www.digikam.org/drupal/node/541") (description nil "<p>By default, digiKam uses SQLite as its back-end for storing important metadata and thumbnails. But the photo management application also provides support for the popular MySQL database engine, and it comes with a database migration tool that can help you to move your data from SQLite to MySQL. <a href=\"http://scribblesandsnaps.wordpress.com/2010/10/15/using-digikam-with-mysql/\">Continue to read</a></p>")) (item nil) (item nil (guid ((isPermaLink . "false")) "http://blogs.fsfe.org/adridg/?p=1002") (title nil "Adriaan de Groot (adridg): It’s Colorized") (pubDate nil "Fri, 15 Oct 2010 08:48:10 GMT") (link nil "http://blogs.fsfe.org/adridg/?p=1002") (description nil "<p>Alas, <a href=\"http://blogs.fsfe.org/gladhorn/2010/06/08/fluffy-how-pink-can-we-get/\">Frederik&#8217;s master plan</a> has not seen a whole lot of progress. I wanted to go down that path a little as well &#8212; that has everything to do with sitting next to Lydia for a day of not-always-exciting meetings. She challenged me to make my desktop as horrifyingly pink as possible. That would be useful if I had to plug in my laptop to give a presentation: the color scheme would shock everyone awake.</p>
<p>So, clear challenge. Now how <strong>do</strong> you make your desktop as pink as possible. KDE is terrifically configurable, but that doesn&#8217;t mean it&#8217;s <strong>simple</strong> to configure it. Here are my notes in KDE 4.4.5 (Fedora 13). To some extent it&#8217;s intended to show where additional polishing might be applied to make KDE more consistent. And overall it will show that for an overall appearance manager we need something more &#8212; or something else &#8212; than we have right now.</p>
<p><strong>Wallpaper:</strong> right click the background of the desktop, pick <em>Desktop Activity Settings</em>. That&#8217;s the only configuration item there. It opens a <em>Desktop Settings - Plasma Workspace</em> dialog. Pick <em>Wallpaper</em>. Click <em>Get New Wallpapers</em>. There&#8217;s a search bar in the resulting dialog. I tried searching for unicorns first, but the right search term is &quot;<a href=\"http://opendesktop.org/content/show.php?content=35736\">Sugarcoma Bunny</a>&quot;. Click <em>install</em> and then select that wallpaper, click <em>OK</em>. The dialog goes away and the first step (over one million pixels) in pinkness has been made.</p>
<p><strong>Colors:</strong> start <em>System Settings</em>, pick the <em>Appearance</em> module. The title now changes to <em>Style</em> (because that&#8217;s the selected item on the left). Go down one item, to <em>Colors</em>. Pick the tab <em>Scheme</em>. Click <em>Get New Schemes</em>. (This Hot New Stuff is really darn useful). Once again there&#8217;s a search bar, use &quot;pink&quot;. You could pick either Ruphy&#8217;s &quot;So pink that it hurts my teeth&quot; or Fregl&#8217;s &quot;Fluffy.&quot; I think the &quot;hurts my teeth&quot; theme is a little better, but it still needs a little tweaking.</p>
<p>This is where futzing with color schemes gets a little complicated. There is a tremendous number of settings to deal with, and I&#8217;m not really sure what all of them do. (Here&#8217;s a bit of <a href=\"http://lip.sourceforge.net/colorpanel.html\">history related to color display</a> in the scheme list).</p>
<p>Switch to the <em>Colors</em> tab (in the <em>Colors</em> item). From the drop-down box, select <em>Window</em>. Click the button next to <em>Normal Background</em>. Pick a better color. I used #FBBCFF. OK the color dialog, then click apply. For reference, we&#8217;re in S<em>ystem Settings - Appearance - Colors - Colors - Window</em>. Five selection levels deep. You might want to <em>Save Scheme</em> to keep these custom settings around, too.</p>
<p><strong>Icons:</strong> there doesn&#8217;t seem to be a very pink icon set. I skipped this bit for now.</p>
<p><strong>Windows:</strong> if you stick with the Oxygen window decoration, there are some additional colors to set. The window shadows are colored as well, and in a pink desktop, you should have pink shadows. I changed the windowdrop-down shadow to use #FBBCFF; the active window glow uses #FF37C7 and outer color #FFC0FF. </p>
<p><strong>Other appearance items:</strong> to be truly pervasively pink, we would need a pink splash screen and emoticon set as well. Switch to the <em>Splash Screen</em> item. Click <em>Get New Themes</em>. For some reason this dialog is different from the ones used earlier. It&#8217;s titled <em>Get Hot New Stuff</em> and labeled internally with System<em> Settings Add-On Installer</em>. There&#8217;s probably some string not being passed to a constructor there to make the labels more meaningful. Note to self: check same dialogs in KDE 4.5.2, then file a bug report if necessary. Searching for &quot;pink&quot;, &quot;bunny&quot; and &quot;fluffy&quot; didn&#8217;t yield anything, so we&#8217;ll have to leave the splash for now; same for emoticons. </p>
<p>[[ By now the desktop is pretty darn pink. But let's start two applications to see how far the colors go. ]]</p>
<p><strong>Konsole:</strong> start <em>Konsole</em>, go to <em>Settings -&gt; Edit Current Profile</em>. Select the <em>Appearance</em> tab. Notice the extremely cool way color schemes slide in, but there&#8217;s no quick way to import a color scheme. The <em>New</em> button gives you basically a bunch of color selectors; there&#8217;s no Hot New Stuff here, nor a quick way to import settings. It&#8217;s not clear to me how to export the settings either &#8212; I&#8217;ll file a wishlist item there.</p>
<p>It&#8217;s straightforward to set up light and dark pink (or purple) as foreground and background colors, but the other available colors are a bit problematic. I use irssi in screen a lot, and the blue and yellow that it uses was a bit jarring. Since I don&#8217;t use any other colors in konsole, I just picked a bunch of settings to colorize things in a nice way for my specific use. <strong>KDE 4.5 note:</strong> seems that the menus have changed a little, and you need to go through the settings dialog.</p>
<p><strong>Kate:</strong> the other application I use a lot is Kate, and it uses its own color schemes. Go to <em>Settings-&gt;Configure Kate</em> and then under <em>Editor Component / Fonts &amp; Colors</em> you can mess with the colors. Again, no clear way to export a scheme or use Hot New Stuff to get new ones. Here again there&#8217;s a huge number of colors to set up (which might explain why there&#8217;s only two color schemes by default). I took a quick route to setting up a pink scheme and changed only the four text background colors: normal, selected, current and bookmark = ( #FFBBFD, #FF7DCB, #F8E0F4, #FF39F9). The current line is perhaps a bit greyish, but that does make it easy to spot. I haven&#8217;t touched any of the syntax highlighting.</p>
<p><strong>Other UI elements:</strong> text input and some other backgrounds still aren&#8217;t pinkish, but white. I may have missed something in the color scheme control module. Similarly alternating colors in lists aren&#8217;t pink and pink,  but still while and blueish.</p>
<p><strong>Plasma Theme:</strong> many Plasma themes are dark-ish. For this color scheme, you really want the desktop background to shine through. I tried the Glassified theme but struggled to get it to be transparent. I suspect XRender problems on this laptop. In any case, to change this: <em>System Settings -&gt; Appearance -&gt; Style</em>. Select tab &quot;Workspace&quot;. Here you can pick themes. The <strong>obvious</strong> theme would be the original Fluffy Bunny, but it has gone missing again. I ended up with  the Atelier theme &#8212; click <em>Get New Themes</em>, then search for that name. Install, apply, done.</p>
<p><img align=\"left\" src=\"http://blogs.fsfe.org/adridg/files/2010/10/pink11.png\" style=\"margin: 1ex 1em;\" /> After all this configuration, the desktop looks like the screenshot here. There&#8217;s still some disconcerting bits of white there &#8212; the open documents list in Kate in particular. But let&#8217;s take a step back and summarize where changes needed to be made to achieve the goal of &quot;make it pink&quot;.</p>
<p>Wallpaper, system color scheme, icon set, emoticons, window deco settings and colors, konsole color scheme, kate color scheme, plasma theme. Less than half of these support Hot New Stuff. They are in several different locations, different KCM&#8217;s, require manual configuration in applications.</p>
<p>Now suppose that one of my new friends from Ljubljana were to come over and ask if they can make their desktop look like mine (o horrors!). It strikes me that it would be useful to have a new <strong>collection</strong> (or meta-HNS) setting that is called &quot;Overall Appearance&quot; or something like that that would apply a theme, wallpaper, color scheme, etc. etc. in one go &#8212; including Konsole and Kate&#8217;s default schemes. Then the idea of &quot;share my desktop look&quot; can come to fruition. Or have I just missed something obvious to do that already?</p>")) (item nil (guid ((isPermaLink . "false")) "http://www.kdedevelopers.org/4340 at http://www.kdedevelopers.org") (title nil "Richard Dale: SPARQL queries in QML with QSparql") (pubDate nil "Thu, 14 Oct 2010 20:11:55 GMT") (link nil "http://www.kdedevelopers.org/node/4340") (description nil "<p>We've been working on <a href=\"http://maemo.gitorious.org/maemo-af/qsparql\">QSparql</a> for a few months now, and I feel it is starting to be something that could be used by a wider audience. It is a simple QSql-like library for accessing various RDF stores such as KDE's Nepomuk data in Virtuoso, SPARQL endpoints on the web via HTTP, and Gnome or MeeGo Nepomuk data in Tracker stores. It differs from Soprano in that it is much smaller and lower level, and it is asynchronous and uses Qt slot callbacks by default, whereas Soprano is usually a synchronous style api.</p>
<p>SPARQL is a complex query language, although if you are already familiar with SQL, it shouldn't be too hard to learn. However, a lot of the documentation is written by academics and they tend to make RDF and SPARQL sound more complicated than they actually are. So there is certainly a learning curve involved, but there are a lot of advantages in being familiar with SPARQL. In the same way that, although you can avoid learning SQL by using visual query builders, you will get to a certain point, where not knowing SQL will begin to hold you back. QSparql makes no attempt to hide SPARQL, it just handles the queries as simple strings.</p>
<p>A nice feature that was added to QSparql recently, was a QML model that allows you to make SPARQL queries and display the results entirely in QML. I thought I would write a blog about how it works as it is interesting in itself for playing with SPARQL, and it also might inspire people to try something similar with DBus or SQL queries. I got the idea from a nice project called 'elisa_qt' which does some very impressive animated things with QML. They were just using SPARQL in QML to access Tracker store Nepomuk data, which I expanded and generalized.</p>
<p>Here is an example of what the SparqlResultsList model looks like:</p>
<pre><div class=\"codeblock\"><code>import Qt 4.7<br />import QSparql 1.0<br /><br />ListView {<br />&nbsp;&nbsp;&nbsp; width: 1000; height: 600<br /><br />&nbsp;&nbsp;&nbsp; model: SparqlResultsList {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; options: SparqlConnectionOptions {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; driverName: &quot;QSPARQL_ENDPOINT&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hostName: &quot;dbpedia.org&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; query: &quot;SELECT $predicate $value WHERE { &lt;http://dbpedia.org/resource/The_Beatles&gt; $predicate $thing . }&quot;<br />&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp; delegate: Text { text: &quot;Data: &quot; + predicate + &quot;, &quot; + value }<br />}</code></div></pre><p>
The actual query means \"search in the dbpedia.org RDF store for a pattern matching 'The Beatles' and obtain all the attribute names ($predicate) and corresponding attribute values ($value)\". QSparql has several different drivers and the one we are using here is 'QSPARQL_ENDPOINT' which allows you to make queries to databases on the web. For each row in the results returned the 'delegate:' is called and you can use the variable names from the query to compose some text to show the user the results ('predicate' and 'value' variables here). I hope the QML is largely self explanatory.</p>
<p>In C++ terms the model is written as a QAbstractListModel, and you can see the code for the model in <a href=\"http://maemo.gitorious.org/maemo-af/qsparql/blobs/master/src/sparql/models/qsparqlresultslist_p.h\">qsparqlresultslist_p.h</a> and <a href=\"http://maemo.gitorious.org/maemo-af/qsparql/blobs/master/src/sparql/models/qsparqlresultslist.cpp\">qsparqlresultslist.cpp</a> in Gitorious</p>
<pre><div class=\"codeblock\"><code>class QSparqlResultsList : public QAbstractListModel<br />{<br />&nbsp;&nbsp;&nbsp; Q_OBJECT<br />&nbsp;&nbsp;&nbsp; Q_PROPERTY(QSparqlConnectionOptionsWrapper * options READ options WRITE setOptions)<br />&nbsp;&nbsp;&nbsp; Q_PROPERTY(QString query READ query WRITE setQuery)<br />&nbsp;&nbsp;&nbsp; ...</code></div></pre><p>
The are two Q_PROPERTIES, one to set the query text and another one to set the connection options to use, such as which driver, port or web path. To use Virtuoso you would set the options property like this to use a driver name of 'QVIRTUOSO':</p>
<pre><div class=\"codeblock\"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; options: SparqlConnectionOptions {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; driverName: &quot;QVIRTUOSO&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; databaseName: &quot;DRIVER=/usr/lib/odbc/virtodbc_r.so&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></div></pre><p>
The clever bit is how the SPARQL query variables become javascript variables that you can use in the model's 'delegate:' property to show the results. This is the code:</p>
<pre><div class=\"codeblock\"><code>void QSparqlResultsList::queryFinished()<br />{<br />&nbsp;&nbsp;&nbsp; QHash&lt;int, QByteArray&gt; roleNames;<br />&nbsp;&nbsp;&nbsp; roleNames = QAbstractItemModel::roleNames();<br /><br />&nbsp;&nbsp;&nbsp; if (m_result-&gt;first()) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; QSparqlResultRow resultRow = m_result-&gt;current();<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create two sets of declarative variables from the variable names used<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // in the select statement<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // &#039;foo&#039; is just a literal like 1234, but &#039;$foo&#039; is &quot;1234&quot;^^xsd:integer<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // &#039;bar&#039; is a string &#039;http://www.w3.org/2002/07/owl#sameAs&#039;, but &#039;$bar&#039;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // is a uri &lt;http://www.w3.org/2002/07/owl#sameAs&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; resultRow.count(); i++) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; roleNames.insert((Qt::UserRole + 1) + i, resultRow.binding(i).name().toLatin1());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; resultRow.count(); i++) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; roleNames.insert((Qt::UserRole + 1) + i + resultRow.count(), QByteArray(&quot;$&quot;) + resultRow.binding(i).name().toLatin1());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setRoleNames(roleNames);<br />&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp; reset();<br />}</code></div></pre><p>
You add the names you want to use in the delegate to the QAbstractItemModel::roleNames() hash table, and give each one of them an integer value. The code above obtains the first result row returned by the query and extracts the variable names from that. In the SPARQL model there are actually two sets of variable names, where a plain 'predicate' or 'value' is just the text of the query result, whereas '$predicate' and '$value' have the RDF datatype added if they are literals, or they will be enclosed in angle brackets if they are Uris. The '$foo' form is useful if you want to build up a follow on query based on the results of an intial query. For instance, you might obtain an album name from your local Nepomuk store, and then want to make a second web based query to DBpedia using the same album name.</p>
<p>Having set up the role names, you need to implement a data() method to return the values to the code using the model:</p>
<pre><div class=\"codeblock\"><code>QVariant QSparqlResultsList::data(const QModelIndex &amp;index, int role) const<br />{<br />&nbsp;&nbsp;&nbsp; if (!index.isValid())<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return QVariant();<br /><br />&nbsp;&nbsp;&nbsp; m_result-&gt;setPos(index.row());<br />&nbsp;&nbsp;&nbsp; QSparqlResultRow row = m_result-&gt;current();<br />&nbsp;&nbsp;&nbsp; int i = role - (Qt::UserRole + 1);<br /><br />&nbsp;&nbsp;&nbsp; if (i &gt;= row.count())<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return row.binding(i - row.count()).toString();<br />&nbsp;&nbsp;&nbsp; else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return row.value(i);<br />}</code></div></pre><p>
To actually tell QML about the C++ types in the model you need to have a top level plugin class which looks like this:</p>
<pre><div class=\"codeblock\"><code>class SparqlResultsListPlugin : public QDeclarativeExtensionPlugin<br />{<br />public:<br />&nbsp;&nbsp;&nbsp; void registerTypes(const char *uri)<br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Q_ASSERT(uri == QLatin1String(&quot;QSparql&quot;));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; qmlRegisterType&lt;QSparqlResultsList&gt;(uri, 0, 1, &quot;SparqlResultsList&quot;);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; qmlRegisterType&lt;QSparqlConnectionOptionsWrapper&gt;(uri, 0, 1, &quot;SparqlConnectionOptions&quot;);<br />&nbsp;&nbsp;&nbsp; }<br />};<br /><br />Q_EXPORT_PLUGIN2(sparqlresultslist, SparqlResultsListPlugin);</code></div></pre><p>
You need to install the plugin into a path like /usr/imports/QSparql, along with a file called 'qmldir' containing the name of the plugin:</p>
<pre><div class=\"codeblock\"><code>plugin sparqlresultslist</code></div></pre><p>
Then the QML runtime should be able to find it, assuming that '/usr/imports' is on its list of declarative paths.</p>
<p>So please go ahead and try out QSparql and tell us what you think. There isn't a public mailing list yet unfortunately, and so you may need to mail me personally for now (or comment on this blog of course).</p>")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-17722541.post-9109786711939988530") (title nil "Ariya Hidayat: sencha touch hackathon") (pubDate nil "Thu, 14 Oct 2010 18:39:53 GMT") (link nil "http://ariya.blogspot.com/2010/10/sencha-touch-hackathon.html") (description nil "<p><img border=\"0\" src=\"http://lh3.ggpht.com/_Oijhf1ZPv-4/TGJKVQA3TXI/AAAAAAAABrM/gkaRF85wbAY/s800/sencha_logo.png\" /></p> 

<p>Are you in the Bay Area? Don't miss our <a href=\"http://www.sencha.com/blog/2010/10/13/sencha-touch-dev-contest-hackathon/\">Sencha Touch Hackathon</a> this Saturday (Oct 16) in our <a href=\"http://maps.google.com/maps?f=q&amp;source=s_q&amp;hl=en&amp;geocode=&amp;q=525+University+Ave,+Palo+Alto,+CA+94301&amp;sll=37.448896,-122.159338&amp;sspn=0.008211,0.006899&amp;ie=UTF8&amp;hq=&amp;hnear=525+University+Ave,+Palo+Alto,+Santa+Clara,+California+94301&amp;t=h&amp;z=17&amp;iwloc=A\">Palo Alto Office</a>, 1pm to 5pm. There will be food and drinks as well.</p>

<p>Drop by and upgrade your Sencha Touch kungfu!<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/17722541-9109786711939988530?l=ariya.blogspot.com\" width=\"1\" /></div>")) (item nil (guid ((isPermaLink . "false")) "http://www.omat.nl/?p=817") (title nil "Tom Albers: Help KDE, we need servers!") (pubDate nil "Thu, 14 Oct 2010 18:35:31 GMT") (link nil "http://www.omat.nl/2010/10/14/help-kde-we-need-servers/") (description nil "<p>As known, the Git transition is happening. More and more projects are moving to git.kde.org. All the infrastructure is in place and working fine. But we have a small feature request still open. </p>
<p>To convert a project from SVN to Git, you have to write conversion rules. To write these rules and test the conversion you need to have the complete SVN repository on your local computer. Even if you only would like a small contained project like RSIBreak to switch to git, you need to rsync the whole repository. </p>
<p>The size of that repository is currently <strong>65GB</strong>, this is a real problem for a lot of our contributors. They can not download this repository with their ADSL connection. If you have a 2mbps internet connection which you can use 100% and calculate 0% overhead, this will take you 70 hours, 31 minutes and 46 seconds. That&#8217;s basically unacceptable and blocking the transition to Git.</p>
<p>So, our plan is to provide a server on which all our registered developers can login, which is completely setup to write the rules and has the SVN repository downloaded and kept up to date. This way all the developers can log in to that server and start working on the rules instantly.</p>
<p>But currently we don&#8217;t have a server which we can use for such an isolated purpose. Ideally we would like a (perhaps virtual) machine with something like 100GB free space with some fast access times to the disk, as that 65GB will be searched through frequently. Also a good processor makes things more enjoyable. We are hoping data centers, commercial virtual server providers or some friendly distributions are prepared to donate some resources to us.</p>
<p>If you have hardware available for us, please drop by #kde-sysadmin on freenode, or sent me a mail (toma at kde ). Ideally we would like to have two or three servers available for this project and we only need it for a year or so. Please help us, help KDE!</p>
<p class=\"facebook\"><a href=\"http://www.facebook.com/share.php?u=http://www.omat.nl/2010/10/14/help-kde-we-need-servers/\" target=\"_blank\"><img alt=\"Share on Facebook\" src=\"http://www.omat.nl/wp-content/plugins/add-to-facebook-plugin/facebook_share_icon.gif\" title=\"Share on Facebook\" /></a></p> <p>Feel free to Flattr this post at <a href=\"http://www.omat.nl/\" target=\"_blank\" title=\"Flattr\">www.omat.nl</a>, if you like it.</p> <p><a href=\"http://www.omat.nl/\" target=\"_blank\" title=\"Flattr\"><img alt=\"flattr this!\" src=\"http://www.omat.nl/wp-content/plugins/flattrss/button-compact-static-100x17.png\" /></a></p>")) (item nil (guid ((isPermaLink . "false")) "http://marcmutz.wordpress.com/?p=113") (title nil "Marc Mutz: Top 5 reasons you should love your ternary operator") (pubDate nil "Thu, 14 Oct 2010 17:44:12 GMT") (link nil "http://marcmutz.wordpress.com/2010/10/14/top-5-reasons-you-should-love-your-ternary-operator/") (description nil "<p>I feel the need to take up the cudgels on behalf of my old friend, the ternary operator <code>?:</code>.</p>
<p>As evidenced by <a href=\"http://stackoverflow.com/questions/160218/to-ternary-or-not-to-ternary\">this stackoverflow.com discussion</a>, many people seem to believe that choosing the ternary operator over <code>if</code>/<code>else</code> is purely a matter of personal style, and of readability. Well, it&#8217;s not.</p>
<p><span id=\"more-113\"></span></p>
<h3>It&#8217;s an expression</h3>
<p>The major difference between the ternary operator and <code>if</code>/<code>else</code> is that the former is an <em>expression</em>, whereas the latter is a <em>statement</em>. This means that you can use the ternary operator anywhere the compiler expects an expression. Here&#8217;s a handful of situations where <code>if</code>/<code>else</code> is <em>not</em> an option:</p>
<ul>
<li>When initialising subobjects in the <a href=\"http://en.wikipedia.org/wiki/Initialization_(programming)#Initializer_list\">initialiser list</a> of a constructor</li>
<li>When initialising const objects, including enumerators in <code>enum</code>s</li>
<li>When initialising references and other types that have no default constructor, or are not assignable</li>
</ul>
<p>I hasten to add that you can trivially rewrite every program to not use the ternary operator: Obviously, you can replace</p>
<pre class=\"brush: cpp;\">
   expr-A ? expr-B : expr-C
</pre>
<p>with a function that takes all lvalues used in <code>expr-A</code>, <code>expr-B</code>, and <code>expr-C</code> as parameters:</p>
<pre class=\"brush: cpp;\">
  fun( ...lvalues... ) {
    if ( expr-A ) return expr-B; else return expr-C;
  }
</pre>
<p>But this way, the conditional code definition is far removed from where it&#8217;s used (just the problem <a href=\"http://en.wikipedia.org/wiki/C++0x#Lambda_functions_and_expressions\">lambda functions</a> will solve in C++0x for algorithm customisation), which hurts readability.</p>
<h3>It can yield a compile-time constant</h3>
<p>The other problem with functions is that their return values are not compile-time constants:</p>
<pre class=\"brush: cpp;\">
int five() { return 5; }
char array[five()]; // error: 'five()' is not a compile-time constant!
</pre>
<p>True, <a href=\"http://en.wikipedia.org/wiki/C++0x#Generalized_constant_expressions\">C++0x will have <code>constexpr</code> functions</a>, but those cannot contain <code>if</code>/<code>else</code>, so you&#8217;re back to square one:</p>
<pre class=\"brush: cpp;\">
constexpr int oneOrTwo( bool one ) {
    if ( one )     // error: constexpr function body must be a single return statement!
        return 1;
    else
        return 2;
}
constexpr int oneOrThree( bool one ) {
    return one ? 1 : 3 ; // OK
}
</pre>
<p>In other words:</p>
<h3>Makes non-trivial C++0x <code>constexpr</code> functions possible in the first place</h3>
<p>For <code>const</code>-aficionados like yours truly, <code>constexpr</code> is a heaven-sent. For the first time, we don&#8217;t have to choose between a &#8220;proper&#8221; class&#8217; convenience (including constructors) and a <a href=\"http://en.wikipedia.org/wiki/Plain_old_data_structure\">POD</a>&#8216;s efficiency.</p>
<p>Take your normal <code>Rect</code> class as an example:</p>
<pre class=\"brush: cpp;\">
struct RectC { int x1, y1, x2, y2; };
class Rect03 {
    int m_x1, m_y1, m_x2, m_y2;
public:
    Rect03( int x1, int y1, int x2, int y2 )
          // normalise coordinates:
        : m_x1( x1 &lt; x2 ? x1 : x2 ), m_y1( y1 &lt; y2 ? y1 : y2 ),
          m_x2( x1 &lt; x2 ? x2 : x1 ), m_y2( y1 &lt; y2 ? y2 : y1 ) {}
// ...
};
class Rect0x {
    int m_x1, m_y1, m_x2, m_y2;
public:
    constexpr Rect0x( int x1, int y1, int x2, int y2 )
          // normalise coordinates:
        : m_x1( x1 &lt; x2 ? x1 : x2 ), m_y1( y1 &lt; y2 ? y1 : y2 ),
          m_x2( x1 &lt; x2 ? x2 : x1 ), m_y2( y1 &lt; y2 ? y2 : y1 ) {}
// ...
};

static const RectC r1[] = {
    { 0, 0, 12, 20 }, { 12, 20, 34, 39 },
}; // ok, really compile-time constant
static const Rect03 r2[] = {
    Rect03( 0, 0, 12, 20 ), Rect03( 12, 20, 34, 39 ),
}; // NOT a compile-time constant!
static const Rect0x r3[] = {
    Rect0x( 0, 0, 12, 20 ), Rect0x( 12, 20, 34, 39 ),
}; // ok, compile-time constant!
</pre>
<p>The memory layout of all the classes being <em>identical</em>, the <code>Rect03</code> (C++-03-style) suffers a performance penalty because the constructors cannot be run at compile time, so they must be run at runtime. There&#8217;s no reason a class with a constructor should suffer such a severe performance hit over one that doesn&#8217;t include a constructor, and <code>constexpr</code> fixes this.</p>
<p>But <code>constexpr</code> functions are severely restricted in what they can do. A <code>constexpr</code> constructor, e.g., must have an empty body (<code>{}</code>); other <code>constexpr</code> functions may only contain a single return statement. All expressions in <code>constexpr</code> functions must be <code>constexpr</code>s themselves, after argument substitution.</p>
<p>The ternary operator is your only chance of ever evaluating a condition in such a function.</p>
<p>Incidentally, <code>constexpr</code> non-constructor functions are <em>pure functions</em>: they only depend on their arguments and constant global state. They therefore have a lot in common with functional languages, and the ternary operator helps bring even more functional programming style to C++:</p>
<h3>Fosters functional-language-style code</h3>
<p>You might not agree with me, but I find functional code a lot easier to read in many cases than procedural code. The ternary operator allows you to write code whose structure mimics functional&#8217;s. Compare this Erlang code: </p>
<pre class=\"brush: erlang;\">
fac(0) -&gt; 1;
fac(1) -&gt; 1;
fac(N) -&gt; N * fac(N-1).
</pre>
<p>with this C++ code:</p>
<pre class=\"brush: cpp;\">
int fac( int N ) {
    return N == 0   ? 1 :
           N == 1   ? 1 :
           /* else */ N * fac(N-1) ;
}
</pre>
<p>and this procedural C++ code:</p>
<pre class=\"brush: cpp;\">
int fac( int N ) {
    if ( N == 0 )
        return 1;
    else if ( N == 1 )
        return 1;
    else
        return N * fac(N-1);
}
</pre>
<h3>Can contain <code>throw</code> expressions</h3>
<p>On thing you might not believe possible is this: The ternary operator can contain throw expressions. Either of the two legs of the ternary may contain a throw expression (but not both); the respective other leg then determines the type of the whole ternary expression.</p>
<p>Here&#8217;s an example from Kleopatra:</p>
<pre class=\"brush: cpp;\">
static QString make_top_label_conflict_text( bool sign, bool enc ) {
    return
        sign &amp;&amp; enc ? i18n(&quot;Kleopatra cannot unambiguously determine matching certificates &quot;
                           &quot;for all recipients/senders of the message.\\n&quot;
                           &quot;Please select the correct certificates for each recipient:&quot;) :
        sign        ? i18n(&quot;Kleopatra cannot unambiguously determine matching certificates &quot;
                           &quot;for the sender of the message.\\n&quot;
                           &quot;Please select the correct certificates for the sender:&quot;) :
        enc         ? i18n(&quot;Kleopatra cannot unambiguously determine matching certificates &quot;
                           &quot;for all recipients of the message.\\n&quot;
                           &quot;Please select the correct certificates for each recipient:&quot; ) :
        /* else */    kleo_assert_fail( sign || enc ) ;
}
</pre>
<p>(where <code>kleo_assert_fail(x)</code> is a macro which expands to <code>throw&nbsp;Kleo::Exception(&nbsp;...,&nbsp;#x&nbsp;)</code>).</p>
<p>So, to summarise: the ternary operator is C++&#8217;s way of producing a conditional <em>expression</em> (in other programming languages, <code>if</code>/<code>else</code> itself is an expression, but in C++, it&#8217;s &#8220;only&#8221; a statement). There are many places in C++ where statements are not allowed, only expressions, and that&#8217;s why the ternary operator is not just syntactic sugar, and choosing <code>?:</code> over <code>if</code>/<code>else</code> is <em>not</em> just a matter of personal style. The ternary operator is to conditionals what C++0x lambda expressions are to functions.</p>
<br />Filed under: <a href=\"http://marcmutz.wordpress.com/category/programming-languages/c/\">C++</a>, <a href=\"http://marcmutz.wordpress.com/category/programming-languages/c/c0x/\">C++0x</a>, <a href=\"http://marcmutz.wordpress.com/category/english/\">English</a>  <a href=\"http://feeds.wordpress.com/1.0/gocomments/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/marcmutz.wordpress.com/113/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/marcmutz.wordpress.com/113/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/marcmutz.wordpress.com/113/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/marcmutz.wordpress.com/113/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/marcmutz.wordpress.com/113/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/marcmutz.wordpress.com/113/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/marcmutz.wordpress.com/113/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=marcmutz.wordpress.com&amp;blog=14776649&amp;post=113&amp;subd=marcmutz&amp;ref=&amp;feed=1\" width=\"1\" />")) (item nil (guid ((isPermaLink . "false")) "http://www.asinen.org/?p=1156") (title nil "Stuart Jarvis: Fourteen Reasons to be KDE") (pubDate nil "Thu, 14 Oct 2010 15:58:16 GMT") (link nil "http://www.asinen.org/2010/10/fourteen-reasons-to-be-kde/") (description nil "<p>In case you&#8217;re sleeping under a rock today, KDE is celebrating its 14th birthday. I still see myself as a newbie round these parts, but I can already think of fourteen things I&#8217;ve experienced that made me and make me part of KDE.</p>
<ol>
<li>To be free to try</li>
<li>To be free to fail</li>
<li>To be given the support to succeed</li>
<li>To be welcomed</li>
<li>To be treated as an equal</li>
<li>To learn from the best</li>
<li>To be thanked</li>
<li>To help people beyond KDE, working for the same goals</li>
<li>To use old skills and gain new ones</li>
<li>To meet your neighbours from the other side of the world</li>
<li>To become a pragmatist</li>
<li>To remain an idealist</li>
<li>To get it done</li>
<li>To <em>Join</em> the Game, not only watch it</li>
</ol>
<p>Or, in short, to <strong>be Free</strong>. Whether that is a means, an end or an effect, for me it describes everything we do.</p>")) (item nil (guid ((isPermaLink . "false")) "http://lydgate.org/blogs/?p=220") (title nil "Anne Wilson (annew): How easily can you read UserBase?") (pubDate nil "Thu, 14 Oct 2010 15:05:29 GMT") (link nil "http://lydgate.org/blogs/?p=220") (description nil "<p>If you speak Ukranian or Danish, excellently. &#160;If you speak Chinese or Italian, quite a lot of pages. &#160;Brazilian Portuguese, German and Spanish are beginning to make real progress. &#160;If none of those are your language, there are very few pages translated. &#160;To see how your language is faring, go to the&#160;<a href=\"http://lydgate.org/blogs/?????http://userbase.kde.org/Special:LanguageStats\" title=\"Language Statistics\">Language Statistics page</a> and enter your <a href=\"http://www.loc.gov/standards/iso639-2/php/code_list.php\">ISO_639-2 code</a></p>
<p>We now have 79 members registered to translate on UserBase, though only a fraction of that number is working regularly on translations. &#160;For the top group, though, the figures are staggering. &#160;In the last week for instance:</p>
<ul>
<li>Yurchor has touched 788 pages, making 1455 changes</li>
<li>MarcusGama has touched 768 pages, with 1416 changes</li>
<li>Claus_chr has touched 764 pages with 1454 pages!</li>
</ul>
<p>Not everyone can manage so much time and speed, but that doesn&#8217;t stop some people. &#160;These people have also been very active</p>
<ul>
<li>Qiii2006 made 402 changes</li>
<li>Caig made 425</li>
<li>Sordon made 123 and</li>
<li>Nilli made 132.</li>
</ul>
<p>while others have made fewer but equally valued contributions.  This is the translation activity for the last 21 days:<br />
<img alt=\"Active Translators, 21 days\" class=\"alignnone\" height=\"200\" src=\"http://userbase.kde.org/index.php?title=Special:TranslationStats&amp;graphit=1&amp;preview=&amp;count=users&amp;scale=days&amp;days=21&amp;width=550&amp;height=200\" title=\"Active Translators\" width=\"550\" /></p>
<p>Maybe you have an hour or two with nothing pressing to do? &#160;You can easily get started. &#160;There&#8217;s plenty of help available in our <a href=\"http://userbase.kde.org/Tasks_and_Tools\" title=\"Tasks and Tools\">Tasks and Tools</a> page.</p>
<p>By now we have completed the transfer of most existing translated pages to the new system, but there are a few glitches. &#160;Where we don&#8217;t have a registered translator for a language, the only options are to lose the translation or to copy and paste it into the new sections. &#160;For some languages that&#8217;s a feasible option &#8211; you only need to know enough to recognise whether a paragraph is matching the English one in content, but what if the language is a non-latin-character one? &#160;I met one such this week. &#160;One page has only a single translation in the old system, but that translation is Arabic. &#160;I know by the structure that it matches most of what&#8217;s on the English page, but I&#8217;m sure that some bits are missing. &#160;I really need help from someone who can sort that out for me. &#160;It&#8217;s not a long page and I&#8217;d guess that someone with the right skills could do the whole thing in less than half an hour.</p>
<p>Other skills are needed too &#8211; php, css, database-query to name a few. &#160;We have people with all these skills, but too small a team puts too much pressure on a few people. &#160;What is really needed is a group for each task, maybe three or four, so that no-one is being pressured when he has other things to do. &#160;If you can help, please come to Freenode&#8217;s #kde-www and talk to us. &#160;You&#8217;ll get a warm welcome, I guarantee<a href=\"http://lydgate.org/blogs/wp-content/uploads/2010/10/Face-smile.png\"><img alt=\"Smile\" class=\"size-full wp-image-221\" height=\"22\" src=\"http://lydgate.org/blogs/wp-content/uploads/2010/10/Face-smile.png\" title=\"Face-smile\" width=\"22\" /></a></p>")) (item nil) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-5432566687488141671.post-3947170935338528467") (title nil "Valorie Zimmerman (valorie): GRUB2 and chroots, dammit!") (pubDate nil "Thu, 14 Oct 2010 09:52:49 GMT") (link nil "http://linuxgrandma.blogspot.com/2010/10/grub2-and-chroots-dammit.html") (description nil "<p>Worst outcome from an install so far. Upon automatic reboot, when all is reported success:<br /><br />error: the symbol `grub_xputs` not found<br />grub rescue:><br /><br />Terror struck my heart, and hopelessness, and googling. I found that not only was I not alone, but it is a result from a long-standing bug, which bothered me greatly as I was installing: <a href=\"https://bugs.launchpad.net/ubuntu/+source/grub2/+bug/496435/comments/20\">https://bugs.launchpad.net/ubuntu/+source/grub2/+bug/496435/comments/20</a>, specifically: \"Grub doesn't identify SATA drives in the same order as the BIOS.\" Not only was this extremely confusing to me as I was trying to decide what to do during the install, even though I thought I had prepared very well, but also, \"I had to boot from the live image and chroot\" as the bug commenter did. <br /><br />On the other hand,that worked well. See the process here: <a href=\"http://www.webupd8.org/2010/05/fix-symbol-grubputs-not-found-when.html\">http://www.webupd8.org/2010/05/fix-symbol-grubputs-not-found-when.html</a>. Guess what the post is called? <b>Fix Symbol 'grub_puts' Not Found When Migrating From Ubuntu Karmic To Lucid</b>.Imagine that. BUG IS STILL THERE. And it bit me, and that hurt. A side issue is that my /home isn't found, but I think I know the fix for that, and I'm sure it is partially my ignorance and inexperience at fault.<br /><br />There were other possible solutions suggested, which I didn't try. For starters, I could only have one computer plugged into the Internet at a time, which meant I was looking for solutions in one screen, and typing them in on the other. The less to type, the fewer chances of typing errors making the problem even worse. But here they are, if you are in terror as I was, and my solution didn't work, or has disappeared:<br /><br /><a href=\"http://www.linux.com/community/forums?func=view&amp;amp%3Bcatid=18&amp;amp%3Bid=4219\">http://www.linux.com/community/forums?func=view&amp;%3Bcatid=18&amp;%3Bid=4219</a> and <a href=\"http://ubuntuforums.org/showthread.php?t=1580752\">http://ubuntuforums.org/showthread.php?t=1580752</a><br /><br />====================<br /><br />Comment I got by email from Holger Herzog:<br /> <br />Hi Valorie,<br /><br />I read your blog entry - thanks much for that! - and I ran into further troubles caused by something that was not mentioned on _any_ of the web sites regarding this grub problem:<br /><br />I have boot fs and root fs on different partitions!<br /><br />Then I had to mount the _root_ fs partition as described in the tutorials and _additionally_, I had to mount the boot fs under \"boot\" under the mounted root fs:<br /><pre>mount /sdROOT /mnt/temp<br />mount -B /dev /mnt/temp/dev<br />mount -B /dev/pts /mnt/temp/dev/pts<br />mount -B /proc /mnt/temp/proc<br />mount -B /sys /mnt/temp/sys</pre><br />AND, additionally:<br /><pre>mount /sdBOOT /mnt/temp/boot</pre><br />Otherwise I got an empty \"grub>\" prompt with no kernels found by grub.<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/5432566687488141671-3947170935338528467?l=linuxgrandma.blogspot.com\" width=\"1\" /></div>")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-12366865.post-7750561927919984857") (title nil "Jos Poortvliet: marketing and talking points") (pubDate nil "Thu, 14 Oct 2010 09:24:26 GMT") (link nil "http://nowwhatthe.blogspot.com/2010/10/marketing-and-talking-points.html") (description nil "<p>Hi all!<br /><br />Next week - <a href=\"http://en.opensuse.org/Portal:Conference\">conference</a> :D<br />Looking forward to meeting many of you...<br /><br />But I blog about something else - I've spend a significant proportion of Monday on making screenshots... I saw an email on the GNOME marketing list mentioning how impressed they were by a <a href=\"http://dl.dropbox.com/u/312414/Presentation.tgz\">slideshow</a> used by the KDE team at the Utah Open Source Conference. This turned my mind back to an earlier discussion about screenshots. KDE.org has nice screenshots on pages like <a href=\"http://kde.org/workspaces/plasmadesktop/\">this one</a>, GNOME does not. So while creating <a href=\"http://en.opensuse.org/openSUSE:Slideshow\">screenshots for an openSUSE slideshow</a> I made a few with the stock GNOME artwork and send them their way...<br /><br /><b>Questions and answers</b><br /><br />Another thing I have worked on is our page with \"Talking Points\" for our ambassadors. The goal of these pages is to provide our ambassadors, who go to tradeshows and fairs to talk about openSUSE, with arguments and answers to questions. Of course I don't have the knowledge to answer all these questions, nor do I know what questions our ambassadors get asked.<br /><br />Yesterday I have re-arranged all the questions that have been added over the last weeks into a few neath pages where they can be answered. I also worked on some answers - but I need your help! Go through it, see if you can (help) answer them, or of course if you know more good questions. The wiki page is <a href=\"http://en.opensuse.org/openSUSE:Talking_points\">here</a>. Yes, some of these questions can be hard to answer but there are surely answers that are much simpler - so even if you think you don't know that much, go in, see if you can help our ambassadors out a bit!<br /><br />hugs,<br />Jos<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/12366865-7750561927919984857?l=nowwhatthe.blogspot.com\" width=\"1\" /></div>")) (item nil (guid ((isPermaLink . "false")) "http://www.kdedevelopers.org/4339 at http://www.kdedevelopers.org") (title nil "Bastian Holst (bholst): OpenCycleMap server changed - don't forget to update") (pubDate nil "Thu, 14 Oct 2010 09:23:25 GMT") (link nil "http://www.kdedevelopers.org/node/4339") (description nil "<p><a><img src=\"http://www.kdedevelopers.org/files/images/marble_opencyclemap_update1.preview.png\" /></a><br />
As you probably know, you can download a lot of additional Marble maps with the &#8220;Get hot new stuff&#8221; framework. The reason for this entry is that OpenCycleMap is now using a different server for their map storage. For all users of the OpenCycleMap in Marble it means that they will have to update their map configuration if they want to see updated maps.</p>
<p>Fortunately updating maps is pretty easy in Marble thanks to the &#8220;Get hot new stuff&#8221; framework. Just click on &#8220;File-&gt;Download Maps...&#8221; and look for OpenCycleMap. It should have a little button &#8220;Update&#8221; next to it. A click on it updates your files automatically.</p>
<p>If you want to update your files manually or if you use the Qt-only version of Marble, just download the new file from <a href=\"http://edu.kde.org/marble/maps.php\" target=\"_BLANK\">the map download page</a>.</p>")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-17722541.post-4254995443414662187") (title nil "Ariya Hidayat: yet another command-line JavaScript beautifier (based on V8)") (pubDate nil "Thu, 14 Oct 2010 05:50:17 GMT") (link nil "http://ariya.blogspot.com/2010/10/yet-another-command-line-javascript.html") (description nil "<p>While we're still on <a href=\"http://ariya.blogspot.com/2010/10/on-javascript-engines.html\">the topic of JavaScript</a>, I took the afternoon break to create a command-line runner for <a href=\"http://jsbeautifier.org/\">jsbeautifier.org</a> . In case you miss it, I did the similar thing <a href=\"http://ariya.blogspot.com/2010/09/offline-command-line-beautifier-for.html\">using Qt Script module</a>. This time however, the command-line tool uses and exploits <a href=\"http://v8.googlecode.com\">Google V8</a> instead.</p>

<p>If you update your clone of <a href=\"http://github.com/einars/js-beautify\">js-beautify repository</a>, check out the fresh v8 subdirectory. I also mirror the code in the usual <a href=\"http://gitorious.org/ofi-labs/X2\">X2 repository</a>, under the <a href=\"http://gitorious.org/ofi-labs/x2/trees/master/javascript/jsbeautify8\">javascript/jsbeautify8</a> subdirectory. Also, grok the included README.txt first.</p>

<p>This is probably the last thing the world needs now, but hey, it was a fun break.</p><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/17722541-4254995443414662187?l=ariya.blogspot.com\" width=\"1\" /></div>")) (item nil (guid ((isPermaLink . "false")) "http://steveire.wordpress.com/?p=843") (title nil "Stephen Kelly (steveire): Grantlee version 0.1.7 now available") (pubDate nil "Wed, 13 Oct 2010 22:12:48 GMT") (link nil "http://steveire.wordpress.com/2010/10/13/grantlee-version-0-1-7-now-available/") (description nil "<p>The <a href=\"http://www.grantlee.org\">Grantlee</a> community is pleased to announce the release of <a href=\"http://downloads.grantlee.org\">Grantlee version 0.1.7</a> (<a href=\"http://www.loegria.net/grantlee/\">Mirror</a>). I had intended to make this release a few days ago, but the last few days have not gone 100% according to plan.</p>
<p>This release introduces the significant feature of <a href=\"http://steveire.wordpress.com/2010/09/29/grantlee-pairs-up-with-the-other-template-system/\">generic types</a>, but it also has many other smaller improvements. Even that was not quite right, and needed some compile fixes for STL includes on FreeBSD contributed by Raphael Kubo da Costa. Thanks for the patch! Incidentally, I had just pushed a tag and put tarballs on the download server when I noticed Raphaels contribution (apparently gitorious doesn&#8217;t email you about it. How SMRT).  That means that every Grantlee release has had a contribution from someone who had not contributed before. Not bad.</p>
<p>The ever helpful <a href=\"http://blogs.fsfe.org/adridg/\">[ade]</a> notified me that the license text in source code header files is not exactly consistent with the COPYING file. The header text used the text &#8216;Library General Public License&#8217; instead of &#8216;Lesser General Public License&#8217;. Additionally, the license version in the headers was identified as LGPL v2 (or later) instead of LGPL v2.1 (or later), which is what COPYING claims. In practice, nobody ever distributed Grantlee under the terms of the LGPL v2. Because of the license of Qt (LGPL 2.1), the &#8216;or later&#8217; clause always kicked in, and it was distributed under a license compatible with the bundle it was distributed in (LGPL 2.1). At any rate, both issues with the license text are now fixed.</p>
<p>Several small issues with the documentation have now also been fixed. RenderContext was missing a doxygen command <tt>@headerfile</tt> to show the correct include path in the generated documentation (#include&nbsp;&lt;grantlee/rendercontext.h&gt; instead of just &lt;rendercontext.h&gt;). The RenderContext class itself now has fully documented public API, as does CachingLoaderDecorator. A slight lie in the documentation was also fixed in that it claimed dynamic properties of QObject were supported in Templates, but that didn&#8217;t work. The fix of course was to add a implementation and test for that feature.</p>
<p>I&#8217;ve also now made documentation generation fully automatic and part of the same release script that creates source tarballs. Now after running the unit tests the script creates Qt Assistant documentation and a web friendly documentation tarball with a link to the Qt Assistant file. The Grantlee documentation now has local links to stl documentation too so that if you have it <a href=\"http://steveire.wordpress.com/2010/10/08/stl-documentation-for-qt-assistant/\">loaded in your assistant</a>, the links will open directly in assistant. The web version opens links to the GNU generated stl documentation on the web using <a href=\"http://steveire.wordpress.com/2010/04/12/grantlee-gems-creating-documentation-for-qt-assistant/\">familiar scripts</a>.</p>
<div class=\"wp-caption aligncenter\" id=\"attachment_851\" style=\"width: 460px;\"><a href=\"http://steveire.files.wordpress.com/2010/10/granltee-docs-stl.png\"><img alt=\"\" class=\"size-full wp-image-851\" height=\"362\" src=\"http://steveire.files.wordpress.com/2010/10/granltee-docs-stl.png?w=450&#038;h=362\" title=\"granltee-docs-stl\" width=\"450\" /></a><p class=\"wp-caption-text\">Opening STL documentation in assistant linked from Grantlee</p></div>
<p>The next big challenge in Grantlee is i18n, and it is definitely a tricky issue.</p>
<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/steveire.wordpress.com/843/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/steveire.wordpress.com/843/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/steveire.wordpress.com/843/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/steveire.wordpress.com/843/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/steveire.wordpress.com/843/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/steveire.wordpress.com/843/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/steveire.wordpress.com/843/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=steveire.wordpress.com&amp;blog=7316192&amp;post=843&amp;subd=steveire&amp;ref=&amp;feed=1\" width=\"1\" />")) (item nil) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-7523589.post-804997409271166023") (title nil "Albert Astals Cid (TSDgeos): Interviewed in KDEBlog") (pubDate nil "Wed, 13 Oct 2010 20:03:22 GMT") (link nil "http://tsdgeos.blogspot.com/2010/10/interviewed-in-kdeblog.html") (description nil "<p><a href=\"http://www.kdeblog.com/\">KDE Blog</a> has published a <a href=\"http://www.kdeblog.com/entrevistas-albert-astals-cid-i.html\">long interview</a> <a href=\"http://www.kdeblog.com/entrevistas-albert-astals-cid-ii.html\">in three</a> <a href=\"http://www.kdeblog.com/entrevistas-albert-astals-cid-y-iii.html\">pages</a> about my involvement in KDE, KDE Espa&#241;a et al. The interview is in Spanish, so bad luck if you don't understand it (though you might want to try some translation service :D)<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/7523589-804997409271166023?l=tsdgeos.blogspot.com\" width=\"1\" /></div>")) (item nil) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-17722541.post-8964181569060936191") (title nil "Ariya Hidayat: on JavaScript engines") (pubDate nil "Wed, 13 Oct 2010 16:39:05 GMT") (link nil "http://ariya.blogspot.com/2010/10/on-javascript-engines.html") (description nil "<p>If you are using a modern browser, likely you already have the (arguably) most widely deployed scripting environment: <a href=\"http://en.wikipedia.org/wiki/JavaScript_engine\">JavaScript engine</a> (or ECMAScript, if you insist). There are many things you can do with it (just look at tons of cool web apps out there). However, since it is contained in the browser, there are also things the embedded JavaScript engine can not do for you.</p>

<p>If you are using KDE, you also have two excellent JavaScript engines: <a href=\"http://api.kde.org/4.x-api/kdelibs-apidocs/kjs/html/\">KJS</a> and <a href=\"http://doc.qt.nokia.com/4.7/qtscript.html\">Qt Script</a>. You can embed either of them (i.e. <a href=\"http://api.kde.org/4.x-api/kdelibs-apidocs/kjsembed/html/\">KJSEmbed</a>) and make your application scriptable. In a not-so-strange twist, they both relate (distantly) to each other via JavaScriptCore, WebKit's default JavaScript engine, because 
long time ago Apple <a href=\"http://web.archive.org/web/20070310215550/www.opendarwin.org/pipermail/kde-darwin/2002-June/000034.html\">forked KJS</a> and used it as the base for JavaScriptCore, and Qt Script (for version 4.6 and 4.7) also <a href=\"http://labs.qt.nokia.com/2009/06/16/using-javascriptcore-as-the-qtscript-back-end/\">uses JavaScriptCore</a> as the back-end.</p>

<p>If you are interested in learning, using, and/or dissecting other open-source JavaScript engines, have a look at <a href=\"http://www.sencha.com/blog/2010/10/12/javascript-engines-how-to-compile-them/\">JavaScript Engines: How to Compile Them</a> I wrote for our Sencha blog, which covers Mozilla's SpiderMonkey, WebKit's JavaScriptCore, and Google V8. The instructions should work on the supported platforms, including ARM, in case (just like me) you want to have and carry around every JavaScript engines in this planet on your Maemo-powered Nokia N900. That is fun.<p>

<p>As the closing, just remember, &quot;Ask not what the JavaScript engine can do for you &#8212; ask what you can do for the JavaScript engine&quot;.</p><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/17722541-8964181569060936191?l=ariya.blogspot.com\" width=\"1\" /></div>")) (item nil))) ("Rolf Eike Beer (Dakon): Portugal can win" "<p>This night Albert <a href=\"http://websvn.kde.org/?view=revision&amp;revision=1186338\">committed</a> a patch I have written so all teams with the same number of translated messages now get the same rank on the web page. Currently we have 5 teams scoring gold for the stable translations. Portugese now is one of them while Greek has dropped to rank 24. I hope we get the top ten teams to all score gold until the release of 4.5.3, which means 64 messages worst case (Chinese Traditional). Come on guys, go for it!</p>" "http://der-dakon.net/blog/KDE/portugal-can-win.html" (19641 28221) new 1 nil nil ((guid ((isPermaLink . "false")) "http://der-dakon.net/blog/KDE/portugal-can-win") (title nil "Rolf Eike Beer (Dakon): Portugal can win") (pubDate nil "Sat, 16 Oct 2010 09:19:57 GMT") (link nil "http://der-dakon.net/blog/KDE/portugal-can-win.html") (description nil "<p>This night Albert <a href=\"http://websvn.kde.org/?view=revision&amp;revision=1186338\">committed</a> a patch I have written so all teams with the same number of translated messages now get the same rank on the web page. Currently we have 5 teams scoring gold for the stable translations. Portugese now is one of them while Greek has dropped to rank 24. I hope we get the top ten teams to all score gold until the release of 4.5.3, which means 64 messages worst case (Chinese Traditional). Come on guys, go for it!</p>"))) ("Valorie Zimmerman (valorie): Post-Maverick Install Woes - no /home" "<p>Why oh why? I told the process Not To Touch my /home, which Thomas had so thoughtfully labelled. AND said to use it as /home. But cat fstab shows: <br /><pre>$ cat fstab<br /># /etc/fstab: static file system information.<br />#<br /># Use 'blkid -o value -s UUID' to print the universally unique identifier<br /># for a device; this may be used with UUID= as a more robust way to name<br /># devices that works even if disks are added and removed. See fstab(5).<br />#<br />#                <br />proc            /proc           proc    nodev,noexec,nosuid 0       0<br /># / was on /dev/sdb1 during installation<br />UUID=649ffd64-17b4-4a95-aebe-360413cc3203 /               ext4    errors=remount-ro 0       1<br /># swap was on /dev/sdb5 during installation<br />UUID=dfe16a55-80c3-42c8-937a-4341cb2886c8 none            swap    sw              0       0</pre><br />Where is /dev/sdb6, which was /home?<br /><br />I can't deal with this tonight. I can't feel too discouraged, after escaping from the botch-install hell of the last couple of days. Maverick looks and feels GREAT! It's just bizarre to have no settings, and no content whatsoever, not even my old backup. Amarok is lonesome with no music.<br /><br />Maco asks, in IRC, if the partition is still on the harddisk, which of course has been my question. <pre>sudo fdisk -l</pre>tells me:<br /><pre>Disk /dev/sda: 400.1 GB, 400088457216 bytes<br />255 heads, 63 sectors/track, 48641 cylinders<br />Units = cylinders of 16065 * 512 = 8225280 bytes<br />Sector size (logical/physical): 512 bytes / 512 bytes<br />I/O size (minimum/optimal): 512 bytes / 512 bytes<br />Disk identifier: 0x000c403c<br /><br />   Device Boot      Start         End      Blocks   Id  System<br />/dev/sda1   *           1        2432    19530752   83  Linux<br />/dev/sda2            2432       48642   371178497    5  Extended<br />/dev/sda5            2432        2918     3905536   82  Linux swap / Solaris<br />/dev/sda6            2919       48642   367271936   83  Linux<br /><br />Disk /dev/sdb: 7958 MB, 7958691840 bytes<br />245 heads, 62 sectors/track, 1023 cylinders<br />Units = cylinders of 15190 * 512 = 7777280 bytes<br />Sector size (logical/physical): 512 bytes / 512 bytes<br />I/O size (minimum/optimal): 512 bytes / 512 bytes<br />Disk identifier: 0x000ee8a7<br /><br />   Device Boot      Start         End      Blocks   Id  System<br />/dev/sdb1   *           1        1023     7769654    c  W95 FAT32 (LBA)<br />Partition 1 has different physical/logical endings:<br />     phys=(1023, 244, 62) logical=(1022, 244, 62)</pre><br />At this point, <pre>sudo blkid /dev/sda6</pre>to get the UUID for /dev/sda6, which says: <pre>/dev/sda6: LABEL=\"home\" UUID=\"1e3555c0-f248-446e-a9a7-6a42ab95eced\" TYPE=\"ext4\"</pre>Yay! It's still there on the disk, still with it's nice label. Thanks, Thomas!<br /><br />Now it's time to edit fstab, and add the line: <pre>UUID=1e3555c0-f248-446e-a9a7-6a42ab95eced /home               ext4    errors=remount-ro 0       1</pre><br />I did that by using Kate, which is somewhat unorthodox, but it's what I like. <pre>sudo kate</pre>then append the line above, save as fstab. Finally, I moved my present $HOME in case I need some of the settings or files from the last few days. <pre>sudo mv $HOME /oldhome</pre>and then restart. Let's see if it works!<br /><br />===========<br /><br />I want to report success! My /home is all happy, and my /oldhome dotfiles mostly copied back over. This time around, Chromium built OK, and I'm actually editing this blog in it now. Hallelujah, Maverick rocks! If I can build Amarok from source again, I'll be in heaven.<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/5432566687488141671-8886467140288109229?l=linuxgrandma.blogspot.com\" width=\"1\" /></div>" "http://linuxgrandma.blogspot.com/2010/10/post-maverick-install-woes-no-home.html" (19641 26953) new 2 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-5432566687488141671.post-8886467140288109229") (title nil "Valorie Zimmerman (valorie): Post-Maverick Install Woes - no /home") (pubDate nil "Sat, 16 Oct 2010 08:58:49 GMT") (link nil "http://linuxgrandma.blogspot.com/2010/10/post-maverick-install-woes-no-home.html") (description nil "<p>Why oh why? I told the process Not To Touch my /home, which Thomas had so thoughtfully labelled. AND said to use it as /home. But cat fstab shows: <br /><pre>$ cat fstab<br /># /etc/fstab: static file system information.<br />#<br /># Use 'blkid -o value -s UUID' to print the universally unique identifier<br /># for a device; this may be used with UUID= as a more robust way to name<br /># devices that works even if disks are added and removed. See fstab(5).<br />#<br />#                <br />proc            /proc           proc    nodev,noexec,nosuid 0       0<br /># / was on /dev/sdb1 during installation<br />UUID=649ffd64-17b4-4a95-aebe-360413cc3203 /               ext4    errors=remount-ro 0       1<br /># swap was on /dev/sdb5 during installation<br />UUID=dfe16a55-80c3-42c8-937a-4341cb2886c8 none            swap    sw              0       0</pre><br />Where is /dev/sdb6, which was /home?<br /><br />I can't deal with this tonight. I can't feel too discouraged, after escaping from the botch-install hell of the last couple of days. Maverick looks and feels GREAT! It's just bizarre to have no settings, and no content whatsoever, not even my old backup. Amarok is lonesome with no music.<br /><br />Maco asks, in IRC, if the partition is still on the harddisk, which of course has been my question. <pre>sudo fdisk -l</pre>tells me:<br /><pre>Disk /dev/sda: 400.1 GB, 400088457216 bytes<br />255 heads, 63 sectors/track, 48641 cylinders<br />Units = cylinders of 16065 * 512 = 8225280 bytes<br />Sector size (logical/physical): 512 bytes / 512 bytes<br />I/O size (minimum/optimal): 512 bytes / 512 bytes<br />Disk identifier: 0x000c403c<br /><br />   Device Boot      Start         End      Blocks   Id  System<br />/dev/sda1   *           1        2432    19530752   83  Linux<br />/dev/sda2            2432       48642   371178497    5  Extended<br />/dev/sda5            2432        2918     3905536   82  Linux swap / Solaris<br />/dev/sda6            2919       48642   367271936   83  Linux<br /><br />Disk /dev/sdb: 7958 MB, 7958691840 bytes<br />245 heads, 62 sectors/track, 1023 cylinders<br />Units = cylinders of 15190 * 512 = 7777280 bytes<br />Sector size (logical/physical): 512 bytes / 512 bytes<br />I/O size (minimum/optimal): 512 bytes / 512 bytes<br />Disk identifier: 0x000ee8a7<br /><br />   Device Boot      Start         End      Blocks   Id  System<br />/dev/sdb1   *           1        1023     7769654    c  W95 FAT32 (LBA)<br />Partition 1 has different physical/logical endings:<br />     phys=(1023, 244, 62) logical=(1022, 244, 62)</pre><br />At this point, <pre>sudo blkid /dev/sda6</pre>to get the UUID for /dev/sda6, which says: <pre>/dev/sda6: LABEL=\"home\" UUID=\"1e3555c0-f248-446e-a9a7-6a42ab95eced\" TYPE=\"ext4\"</pre>Yay! It's still there on the disk, still with it's nice label. Thanks, Thomas!<br /><br />Now it's time to edit fstab, and add the line: <pre>UUID=1e3555c0-f248-446e-a9a7-6a42ab95eced /home               ext4    errors=remount-ro 0       1</pre><br />I did that by using Kate, which is somewhat unorthodox, but it's what I like. <pre>sudo kate</pre>then append the line above, save as fstab. Finally, I moved my present $HOME in case I need some of the settings or files from the last few days. <pre>sudo mv $HOME /oldhome</pre>and then restart. Let's see if it works!<br /><br />===========<br /><br />I want to report success! My /home is all happy, and my /oldhome dotfiles mostly copied back over. This time around, Chromium built OK, and I'm actually editing this blog in it now. Hallelujah, Maverick rocks! If I can build Amarok from source again, I'll be in heaven.<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/5432566687488141671-8886467140288109229?l=linuxgrandma.blogspot.com\" width=\"1\" /></div>"))) ("[untitled]" nil "" (19641 26953) old 30 nil nil nil) ("Adriaan de Groot (adridg): Coming out for Pink" "<p><span style=\"color: pink;\">Thanks to lots of comments on my previous blog post about color schemes</span>, I’ve made things Moar Pink. If you’re not yet ready to <a href=\"http://icanhascheezburger.com/2009/09/03/funny-pictures-ugly-to-eliminate/\">destroy that color</a>, here’s the start of the (pink) art.</p>
<p><img height=\"500\" src=\"http://blogs.fsfe.org/adridg/files/2010/10/pink2.png\" width=\"800\" /></p>
<p>Icons have been pinkified — where you can see that some are resistant like the battery and SELinux — a little more harmony has been created between the colors. Notice that the icons do become a little monochrome like this (or is it bichrome?) because the color nuances are smashed flat with a pink hammer. I’ve also added a custom Konqueror stylesheet to keep things pink when visited websites don’t have anything set. There’s still some uncomfortable blue in links (also in Blogilo) and message counts (KMail). And of course KMail still has the blue swoosh while switching folders — I can’t see that that is configurable anywhere.</p>
<p>Olaf points out that there was work done on system-color-settings compatible color schemes for some applications. That’s definitely something to keep in mind.</p>
<p>Now, this exercise isn’t <strong>just</strong> about being horrifyingly pink. I came up with a few usage scenarios where easy-to-do global appearance updates are interesting:</p>
<ul>
<li>Distribution branding. I know, most ditro’s do this by hand already. But having a good checklist of where to look and what to modify would make it easier on them. Plus, you could then publish, say, the Fedora look and make it easy to install onto any KDE desktop installation.</li>
<li>&quot;Hey, your desktop is cool, can I have that?&quot;</li>
<li>Quick user switching.</li>
<li>Activity customization.</li>
<li>Environment-aware computing. When you move your laptop outside, the color scheme changes and everything becomes higher-contrast and more sharply defined. Like the n900’s keyboard lights up in the dark, but now for wallpapers and color schemes.</li>
<li>Pretending that your video cable is damaged so that one color drops out.</li>
</ul>
<p> I <strong>so</strong> need to start a TechBase article on colorizing and global appearance customization.</p>" "http://blogs.fsfe.org/adridg/?p=1007" (19640 41090) new 5 nil nil ((guid ((isPermaLink . "false")) "http://blogs.fsfe.org/adridg/?p=1007") (title nil "Adriaan de Groot (adridg): Coming out for Pink") (pubDate nil "Fri, 15 Oct 2010 18:42:10 GMT") (link nil "http://blogs.fsfe.org/adridg/?p=1007") (description nil "<p><span style=\"color: pink;\">Thanks to lots of comments on my previous blog post about color schemes</span>, I&#8217;ve made things Moar Pink. If you&#8217;re not yet ready to <a href=\"http://icanhascheezburger.com/2009/09/03/funny-pictures-ugly-to-eliminate/\">destroy that color</a>, here&#8217;s the start of the (pink) art.</p>
<p><img height=\"500\" src=\"http://blogs.fsfe.org/adridg/files/2010/10/pink2.png\" width=\"800\" /></p>
<p>Icons have been pinkified &#8212; where you can see that some are resistant like the battery and SELinux &#8212; a little more harmony has been created between the colors. Notice that the icons do become a little monochrome like this (or is it bichrome?) because the color nuances are smashed flat with a pink hammer. I&#8217;ve also added a custom Konqueror stylesheet to keep things pink when visited websites don&#8217;t have anything set. There&#8217;s still some uncomfortable blue in links (also in Blogilo) and message counts (KMail). And of course KMail still has the blue swoosh while switching folders &#8212; I can&#8217;t see that that is configurable anywhere.</p>
<p>Olaf points out that there was work done on system-color-settings compatible color schemes for some applications. That&#8217;s definitely something to keep in mind.</p>
<p>Now, this exercise isn&#8217;t <strong>just</strong> about being horrifyingly pink. I came up with a few usage scenarios where easy-to-do global appearance updates are interesting:</p>
<ul>
<li>Distribution branding. I know, most ditro&#8217;s do this by hand already. But having a good checklist of where to look and what to modify would make it easier on them. Plus, you could then publish, say, the Fedora look and make it easy to install onto any KDE desktop installation.</li>
<li>&quot;Hey, your desktop is cool, can I have that?&quot;</li>
<li>Quick user switching.</li>
<li>Activity customization.</li>
<li>Environment-aware computing. When you move your laptop outside, the color scheme changes and everything becomes higher-contrast and more sharply defined. Like the n900&#8217;s keyboard lights up in the dark, but now for wallpapers and color schemes.</li>
<li>Pretending that your video cable is damaged so that one color drops out.</li>
</ul>
<p> I <strong>so</strong> need to start a TechBase article on colorizing and global appearance customization.</p>"))) ("Marco Martin (notmart): A Declaration of Plasma Love" "<p><img alt=\"Declarative RSS reader\" src=\"http://www.notmart.org/misc/declarative_newsreader.png\" style=\"float: left; margin-right: 2em;\" /> The image on the left is a new (example) plasmoid that marks an important change... this is going to be a quite massive blog post, with pretty technical details about what I think is going to be a feature of an higly important strategic relevance on the road towards Plasma as a mature and powerful platform.</p>
<p>The <strong>Plasma declarative bindings have landed</strong> into kdebase! This means it will be possible  to use the new QML language part on Qt 4.7.</p>
<p>As Aaron <a href=\"http://aseigo.blogspot.com/2010/10/plasma-in-18-24-months.html\">noted</a> some days ago, QML in conjunction with now in heavy development technologies like QtComponents (and in the future Qt cene-graph) will play a key role in the creation of user interfaces in the future, and gives us a very important puzzle piece we were still sorta missing.</p>
<p>So we deceided to be (as usual ;) erly adopters of the technology and with the KDE Plasma workspace 4.6 the first pieces will be in place for the roadmap that will lead us basically to this path:</p>
<ul>
<li>Separate the implementation of the logic from the user interface</li>
<li>Avoid C++ (and well, any imperative language) as much as possible for the UI</li>
<li>Be flexible, an application should be able to jump between different devices as easily as possible</li>
<li>do applications that can chose the proper ui amond different choiced depending on the device used, the screen size, the input methods and what not</li>
<li>With QtComponents, use what will be the native set of widgets/components for the given platform: on a MeeGo phone, use its own widgets, theme and UI paradigms, but a different interface somewhere else</li>
<li>Performance, perforance, performance, enter <a href=\"http://labs.qt.nokia.com/2010/10/08/qt-scene-graph-round-2\">Qt scene graph</a></li>
</ul>
<p>So, what will have the KDE Plasma platform 4.6 of all of this?</p>
<h4>Use QML from C++ Plasma widgets</h4>
<p>The first pass (needed to do the following one) is to have a way to easily load a QML file into a normal C++ plasmoid. Now, loading a QML file into a QGraphicsScene (and making it well behave inside the QGraphicsLayout based Plasma widgets) is a quite simple operation, however it is a bit long and repetitive amount of boilerplate code... enter <a href=\"http://api.kde.org/4.x-api/kdelibs-apidocs/plasma/html/classPlasma_1_1DeclarativeWidget.html\">Plasma::DeclarativeWidget</a>.</p>
<p>This is a normal QGraphicsWidget just like the other Plasma widgets, all you have to do is to add it in the QGraphicsLayout of the applet, set the path of a QML file in it et voilà, that's it, you will be able to use about any QML based ui in this way, even if as we will see, if you write a QML/JavaScript only plasmoid there is a richer API available.</p>
<h4>Plasma related goodies in QML</h4>
<p>QML has a system of exensions called <em>imports</em>: Plasma offers 3 of them, that will be usable by <em>any</em> KDE application that wants to do a bit of QML UI:</p>
<ul>
<li><em>org.kde.plasma.graphicswidgets</em> : bindings for all our old widgets, in a QML file you just have to write something like PlasmaWidgets.PushButton{text:\"foo\"; onClicked:doSomething()} to have a working Plasma pushbutton for instance. Those will be gradually replaced with QtComponents as they become ready.</li>
<li><em>org.kde.plasma.graphicslayouts</em> : bindings for qgraphicslinearlayout and
qgraphicsgridlayout. In QML use their anchor based layouts where possible, but it's still nice to have qgraphicslayouts in there for the qgraphicswidgets based Plsma widgets</li>
<li><em>org.kde.plasma.core</em> : some core functionality of Pasma, actually the most important things offered here. A DataSource class, to connect to dataengines in a declarative way, alongside classes for the Plasma Theme and our SVG painting and manipulation routines.</li>
</ul>
<h4>Pure QML Plasma widgets</h4>
<p>This is where it gets interesting. Since some releases of the KDE Plasma platform, is possible to write plasmoids using just JavaScript.</p>
<p>And not only Plasma Widgets, but DataEngines, Services and Runners too.</p>
<p>We are very happy of those bindings, because they bring a great ease of use in a sandboxed environment, while retaining the possibility to <a href=\"http://techbase.kde.org/Development/Tutorials/Plasma/JavaScript/API#Extensions\">extend</a> them to do more system level operations.</p>
<p>Something that is really important as well is the possibility to <a href=\"http://techbase.kde.org/Development/Tutorials/Plasma/JavaScript/API#Addons_.28API_V3.29\">add extra functionality</a> to them, in a plugin-based fashion, so it's possible to dynamically add/remove functionality, or update the extra addons plugins.</p>
<p>A place where it's used is the Pastebin Dataengine/Service, where each pastebin-like site has its own addon, simple to add and update.</p>
<p>Another place is in the Plasma Mediacenter project. we have a JavaScript based dataengine used to query various media-related sites (like, YouTube, flickr, you name it). Each backend is a different addon, adding or updating the support for a new site is very simple (and will be possible to do so with Get hot new stuff)</p>
<p>So all of this is very nice, the only part that we weren't so happy was the definition of the user interface of the Plasma widget itself. While significantly easier than C++, it was still an imperative based approach, with manual layout manipulation in the code, like:</p>
<pre>
layout = new LinearLayout(plasmoid);
layout.orientation = QtVertical;
label = new Label();
layout.addItem(label);
</pre>
<p>That for instnce makes impossible to have a graphical designer for the layout, like the good old Qt Designer for QWidget based user interfaces.</p>
<p>QML solves the problem, since is a declarative based language to define user interfaces that even comes with a nice graphical designer in the <a href=\"http://labs.qt.nokia.com/2010/10/07/qt-creator-2-1-0beta/\">latest version</a> of the QtCreator IDE, besides making significantly easier to do completely animated user interfaces.</p>
<p>Given the amount of nice features we had in our JavaScript bindings, it was really \"mandatory\" to not lose any of this, what we really want is the full power of our current JS bindings, with easy access to dataengines, services, exensions, packages, addons and what not; all of this while using the new way to define user interfaces.</p>
<p>This is exactly what landed in trunk (kdebase/runtime) yesterday: a variant of the Plasma JS bindings that shares 90% of the code with its \"imperative\" brother, so let's see an example of a plasmoid written with this new beast.</p>
<h4>Read some news</h4>
<p>This example plasmoid is a simple RSS feed reader, right now only a prototype but when will be progressed enough could be a good candidate for the progressive replacement of the components of the default Plasma Desktop towards QML and QtComponents.</p>
<p>First, let's see how it's behaving: videos are always fun ;)</p>
<p><a href=\"http://blip.tv/file/get/Notmart-KDEQtQUICKRSSNewsreader452.ogv\">OGG version</a></p>
<p>As you can see, while it's still missing some touches to be a new default, it's already quite more powerful and pretty compared to the curret C++ one, while it has a fraction of the code.</p>
<p>Now, that the candy is done, let's go to the scary part: the <a href=\"http://www.notmart.org/misc/declarativenewsreader.qml\">code</a>, but as ou can see it's not as scary as it usually is ;)</p>
<p>there are some interesting things in that code that need to be outlined:</p>
<p>Import of the Plasma related modules:</p>
<pre>
import Qt 4.7
import org.kde.plasma.graphicswidgets 0.1 as PlasmaWidgets
import org.kde.plasma.core 0.1 as PlasmaCore
import org.kde.plasma.graphicslayouts 4.7 as GraphicsLayouts
</pre>
<p>As soon as the loading is completed, as in JS bindings, you can register JS functions defined in the QML component itself as \"listeners\" for events, in this case the change of the configuration file: note that you have a global object called \"plasmoid\" just as in the JS bindings, with exactly the same API.</p>
<pre>
Component.onCompleted: {
plasmoid.addEventListener('ConfigChanged', configChanged);
}
function configChanged()
{
var url = plasmoid.readConfig(\"feeds\")
print(\"Configuration changed: \" + url);
dataSource.source = url
}
</pre>
<p>Connecting to a DataEngine is very easy:</p>
<pre>
PlasmaCore.DataSource {
id: dataSource
engine: \"rss\"
interval: 50000
}
</pre>
<p>If the dataengine results provide a list of items, in this case the list of recent posts of the RSS feed, is really easy to visualize them in a ListView.</p>
<pre>
ListView {
id: list
anchors.fill: listContainer
signal itemClicked;
spacing: 5;
snapMode: ListView.SnapToItem
clip: true
/*dataSource.data contains the result of the dataengine,
dataSource.data['items'] the list of the posts of the RSS feed*/
model: dataSource.data['items']
delegate: simpleText
}
</pre>
<p>Then we want to visualize individual items of the list: enter <em>delegates</em> (here just a little part for clarity).</p>
<pre>
resources: [
Component {
id: simpleText
[snip]
Text {
color: theme.textColor
textFormat: Text.RichText
//model.modelData.title is the title of the post
//represented by the delegate instance
text: model.modelData.title
}
[snip]
</pre>
<p>This was a not exactly trivial example, but as you can see the code is still not so long and quite clear and understandable. in subversion there are quite a lot of examples that cover the usage of services, addons, extesions and what not.</p>
<h4>In conclusion...</h4>
<p>All of this is quite a milestone for Plasma, since will allow us to develop new features (and good looking ones!) in a very small amount of time and in a safer way than a pure C++ based approach.</p>
<p>Needless to say, all of this is still quite experimental, and prior to the release of the KDE platform 4.6 any part of it can still change quite a lot.</p>
<p>So in the end to recap, what QML and QtComponents can offer to Plasma? A very easy to use, build and <em>interchangeable</em> user interface.</p>
<p>But, (and here is what i'm interested more ;) what Plasma has to offer to QML?</p>
<ul>
<li>A very easy way to package and deploy simple QML based applications</li>
<li>A bridge to use a good portion of the KDE platform API from them</li>
<li>A coherent workspace environment to load and display said tiny applications (Plasma Desktop, Netbook, Mobile, or the \"standalone application\" loader Plasma-Windowed)</li>
<li>An easy way to distribute, search, upload and download them (Get Hot New Stuff)</li>
<li>API wise, powerful and coherent plugin based systems to query data from local or remote sources, with the ability to use C++, Javascript or any other language we have bindings for (DataEngines, Services, Addons, Extensions)</li>
<li>An uniform (and pretty) way to style any graphical element with a powerful (but still pretty efficient) theme engine completely based upon SVG (this part will be stressed even more with the introduction of QtComponents)</li>
</ul>" "http://www.notmart.org/index.php/Software/A_Declaration_of_Plasma_Love" (19640 35336) new 7 nil nil ((guid ((isPermaLink . "false")) "http://www.notmart.org/index.php/Software/A_Declaration_of_Plasma_Love") (title nil "Marco Martin (notmart): A Declaration of Plasma Love") (pubDate nil "Fri, 15 Oct 2010 17:06:16 GMT") (link nil "http://www.notmart.org/index.php/Software/A_Declaration_of_Plasma_Love") (description nil "<p><img alt=\"Declarative RSS reader\" src=\"http://www.notmart.org/misc/declarative_newsreader.png\" style=\"float: left; margin-right: 2em;\" /> The image on the left is a new (example) plasmoid that marks an important change... this is going to be a quite massive blog post, with pretty technical details about what I think is going to be a feature of an higly important strategic relevance on the road towards Plasma as a mature and powerful platform.</p>
<p>The <strong>Plasma declarative bindings have landed</strong> into kdebase! This means it will be possible  to use the new QML language part on Qt 4.7.</p>
<p>As Aaron <a href=\"http://aseigo.blogspot.com/2010/10/plasma-in-18-24-months.html\">noted</a> some days ago, QML in conjunction with now in heavy development technologies like QtComponents (and in the future Qt cene-graph) will play a key role in the creation of user interfaces in the future, and gives us a very important puzzle piece we were still sorta missing.</p>
<p>So we deceided to be (as usual ;) erly adopters of the technology and with the KDE Plasma workspace 4.6 the first pieces will be in place for the roadmap that will lead us basically to this path:</p>
<ul>
  <li>Separate the implementation of the logic from the user interface</li>
  <li>Avoid C++ (and well, any imperative language) as much as possible for the UI</li>
  <li>Be flexible, an application should be able to jump between different devices as easily as possible</li>
  <li>do applications that can chose the proper ui amond different choiced depending on the device used, the screen size, the input methods and what not</li>
  <li>With QtComponents, use what will be the native set of widgets/components for the given platform: on a MeeGo phone, use its own widgets, theme and UI paradigms, but a different interface somewhere else</li>
  <li>Performance, perforance, performance, enter <a href=\"http://labs.qt.nokia.com/2010/10/08/qt-scene-graph-round-2\">Qt scene graph</a></li>
</ul>

<p>So, what will have the KDE Plasma platform 4.6 of all of this?</p>

<h4>Use QML from C++ Plasma widgets</h4>
<p>The first pass (needed to do the following one) is to have a way to easily load a QML file into a normal C++ plasmoid. Now, loading a QML file into a QGraphicsScene (and making it well behave inside the QGraphicsLayout based Plasma widgets) is a quite simple operation, however it is a bit long and repetitive amount of boilerplate code... enter <a href=\"http://api.kde.org/4.x-api/kdelibs-apidocs/plasma/html/classPlasma_1_1DeclarativeWidget.html\">Plasma::DeclarativeWidget</a>.</p>
<p>This is a normal QGraphicsWidget just like the other Plasma widgets, all you have to do is to add it in the QGraphicsLayout of the applet, set the path of a QML file in it et voil&#224;, that's it, you will be able to use about any QML based ui in this way, even if as we will see, if you write a QML/JavaScript only plasmoid there is a richer API available.</p>

<h4>Plasma related goodies in QML</h4>
<p>QML has a system of exensions called <em>imports</em>: Plasma offers 3 of them, that will be usable by <em>any</em> KDE application that wants to do a bit of QML UI:</p>
<ul>
 <li><em>org.kde.plasma.graphicswidgets</em> : bindings for all our old widgets, in a QML file you just have to write something like PlasmaWidgets.PushButton{text:\"foo\"; onClicked:doSomething()} to have a working Plasma pushbutton for instance. Those will be gradually replaced with QtComponents as they become ready.</li>

 <li><em>org.kde.plasma.graphicslayouts</em> : bindings for qgraphicslinearlayout and 
qgraphicsgridlayout. In QML use their anchor based layouts where possible, but it's still nice to have qgraphicslayouts in there for the qgraphicswidgets based Plsma widgets</li>

 <li><em>org.kde.plasma.core</em> : some core functionality of Pasma, actually the most important things offered here. A DataSource class, to connect to dataengines in a declarative way, alongside classes for the Plasma Theme and our SVG painting and manipulation routines.</li>
</ul>

<h4>Pure QML Plasma widgets</h4>
<p>This is where it gets interesting. Since some releases of the KDE Plasma platform, is possible to write plasmoids using just JavaScript.</p>
<p>And not only Plasma Widgets, but DataEngines, Services and Runners too.</p>
<p>We are very happy of those bindings, because they bring a great ease of use in a sandboxed environment, while retaining the possibility to <a href=\"http://techbase.kde.org/Development/Tutorials/Plasma/JavaScript/API#Extensions\">extend</a> them to do more system level operations.</p>
<p>Something that is really important as well is the possibility to <a href=\"http://techbase.kde.org/Development/Tutorials/Plasma/JavaScript/API#Addons_.28API_V3.29\">add extra functionality</a> to them, in a plugin-based fashion, so it's possible to dynamically add/remove functionality, or update the extra addons plugins.</p>
<p>A place where it's used is the Pastebin Dataengine/Service, where each pastebin-like site has its own addon, simple to add and update.</p>
<p>Another place is in the Plasma Mediacenter project. we have a JavaScript based dataengine used to query various media-related sites (like, YouTube, flickr, you name it). Each backend is a different addon, adding or updating the support for a new site is very simple (and will be possible to do so with Get hot new stuff)</p>

<p>So all of this is very nice, the only part that we weren't so happy was the definition of the user interface of the Plasma widget itself. While significantly easier than C++, it was still an imperative based approach, with manual layout manipulation in the code, like:</p>

<pre>
  layout = new LinearLayout(plasmoid);
  layout.orientation = QtVertical;

  label = new Label();
  layout.addItem(label);
</pre>

<p>That for instnce makes impossible to have a graphical designer for the layout, like the good old Qt Designer for QWidget based user interfaces.</p>
<p>QML solves the problem, since is a declarative based language to define user interfaces that even comes with a nice graphical designer in the <a href=\"http://labs.qt.nokia.com/2010/10/07/qt-creator-2-1-0beta/\">latest version</a> of the QtCreator IDE, besides making significantly easier to do completely animated user interfaces.</p>
<p>Given the amount of nice features we had in our JavaScript bindings, it was really \"mandatory\" to not lose any of this, what we really want is the full power of our current JS bindings, with easy access to dataengines, services, exensions, packages, addons and what not; all of this while using the new way to define user interfaces.</p>
<p>This is exactly what landed in trunk (kdebase/runtime) yesterday: a variant of the Plasma JS bindings that shares 90% of the code with its \"imperative\" brother, so let's see an example of a plasmoid written with this new beast.</p>

<h4>Read some news</h4>
<p>This example plasmoid is a simple RSS feed reader, right now only a prototype but when will be progressed enough could be a good candidate for the progressive replacement of the components of the default Plasma Desktop towards QML and QtComponents.</p>
<p>First, let's see how it's behaving: videos are always fun ;)</p>



<p><a href=\"http://blip.tv/file/get/Notmart-KDEQtQUICKRSSNewsreader452.ogv\">OGG version</a></p>

<p>As you can see, while it's still missing some touches to be a new default, it's already quite more powerful and pretty compared to the curret C++ one, while it has a fraction of the code.</p>
<p>Now, that the candy is done, let's go to the scary part: the <a href=\"http://www.notmart.org/misc/declarativenewsreader.qml\">code</a>, but as ou can see it's not as scary as it usually is ;)</p>
<p>there are some interesting things in that code that need to be outlined:</p>
<p>Import of the Plasma related modules:</p>
<pre>
  import Qt 4.7
  import org.kde.plasma.graphicswidgets 0.1 as PlasmaWidgets
  import org.kde.plasma.core 0.1 as PlasmaCore
  import org.kde.plasma.graphicslayouts 4.7 as GraphicsLayouts
</pre>

<p>As soon as the loading is completed, as in JS bindings, you can register JS functions defined in the QML component itself as \"listeners\" for events, in this case the change of the configuration file: note that you have a global object called \"plasmoid\" just as in the JS bindings, with exactly the same API.</p>
<pre>
    Component.onCompleted: {
        plasmoid.addEventListener('ConfigChanged', configChanged);
    }

    function configChanged()
    {
        var url = plasmoid.readConfig(\"feeds\")
        print(\"Configuration changed: \" + url);
        dataSource.source = url
    }
</pre>

<p>Connecting to a DataEngine is very easy:</p>
<pre>
    PlasmaCore.DataSource {
        id: dataSource
        engine: \"rss\"
        interval: 50000
    }
</pre>

<p>If the dataengine results provide a list of items, in this case the list of recent posts of the RSS feed, is really easy to visualize them in a ListView.</p>

<pre>
ListView {
    id: list
    anchors.fill: listContainer
    signal itemClicked;
    spacing: 5;
    snapMode: ListView.SnapToItem

    clip: true
    /*dataSource.data contains the result of the dataengine,
      dataSource.data['items'] the list of the posts of the RSS feed*/
    model: dataSource.data['items']
    delegate: simpleText
}
</pre>

<p>Then we want to visualize individual items of the list: enter <em>delegates</em> (here just a little part for clarity).</p>

<pre>
resources: [
    Component {
        id: simpleText

   [snip]

            Text {
                color: theme.textColor
                textFormat: Text.RichText
                //model.modelData.title is the title of the post
                //represented by the delegate instance
                text: model.modelData.title
            }

   [snip]
</pre>

<p>This was a not exactly trivial example, but as you can see the code is still not so long and quite clear and understandable. in subversion there are quite a lot of examples that cover the usage of services, addons, extesions and what not.</p>

<h4>In conclusion...</h4>
<p>All of this is quite a milestone for Plasma, since will allow us to develop new features (and good looking ones!) in a very small amount of time and in a safer way than a pure C++ based approach.</p>
<p>Needless to say, all of this is still quite experimental, and prior to the release of the KDE platform 4.6 any part of it can still change quite a lot.</p>
<p>So in the end to recap, what QML and QtComponents can offer to Plasma? A very easy to use, build and <em>interchangeable</em> user interface.</p>
<p>But, (and here is what i'm interested more ;) what Plasma has to offer to QML?</p>
<ul>
  <li>A very easy way to package and deploy simple QML based applications</li>
  <li>A bridge to use a good portion of the KDE platform API from them</li>
  <li>A coherent workspace environment to load and display said tiny applications (Plasma Desktop, Netbook, Mobile, or the \"standalone application\" loader Plasma-Windowed)</li>
  <li>An easy way to distribute, search, upload and download them (Get Hot New Stuff)</li>
  <li>API wise, powerful and coherent plugin based systems to query data from local or remote sources, with the ability to use C++, Javascript or any other language we have bindings for (DataEngines, Services, Addons, Extensions)</li>
  <li>An uniform (and pretty) way to style any graphical element with a powerful (but still pretty efficient) theme engine completely based upon SVG (this part will be stressed even more with the introduction of QtComponents)</li>
</ul>"))) ("Aracele Torres (araceletorres): KDE Forum Brazil – Northeast Edition" "<p>Hi all!</p>
<p style=\"text-align: justify;\">On 5 and 6 November there will be the <a href=\"http://ensl.org.br/2010/iii-forum-kde-brasil-edicao-nordeste/\" target=\"_blank\">KDE Forum Brazil – Northeast Edition</a> in Natal, Rio Grande do Norte. The KDE  Forum Brazil – Northeast Edition is the latest achievement of the “KDE  Forum Brazil” in the International Free Software Forum (FISL), but this  time as a satellite event of the <a href=\"http://ensl.org.br/2010/apresentacao/\" target=\"_blank\">Northeast Meeting of Free  Software</a>. The aim is to present lectures  on the topics currently being discussed in KDE and provide practical  experiences in the form of mini-courses on the main technologies used  in day-to-day contribution to the project.</p>
<p style=\"text-align: justify;\">The importance of Northeast Meeting of Free Software is to descentralize the free software events in Brazil, which occur with more frequency in the south/southeast of the country. Brazil is a continental proportion country, thus, some displacements are equivalent to travels across many european countries, in terms of distance and time.</p>
<p style=\"text-align: justify;\">So, the Northeast Meeting of Free Software agregates the brazilian community  closest to the littoral, backland e tropical regions of the country. We are more hot than the south people. <img alt=\":-)\" class=\"wp-smiley\" src=\"http://s2.wp.com/wp-includes/images/smilies/icon_smile.gif\" /> </p>
<p>The event schedule will be:</p>
<h4><strong>Day 05/11</strong></h4>
<table>
<tbody>
<tr>
<th>Hour</th>
<th>Talk</th>
<th>Speaker</th>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">08h45</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Opening</td>
<td bgcolor=\"#edf4f9\" valign=\"top\"></td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\">09h</td>
<td bgcolor=\"#ffffff\" valign=\"top\">KDE: Wear the shirt!</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Amanda Castro</td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">10h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">KDE in your language …</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Aracele Torres</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\"></td>
<td bgcolor=\"#ffffff\" valign=\"top\"></td>
<td bgcolor=\"#ffffff\" valign=\"top\"></td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">13h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Developing for KDE</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Sandro Andrade</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\">14h</td>
<td bgcolor=\"#ffffff\" valign=\"top\">KDE in Google Summer of Code</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Paulo Rômulo</td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">15h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">KDE Lovelace</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Amanda Castro e Aracele Torres</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\">16h</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Qt/KDE on Mobiles</td>
<td bgcolor=\"#ffffff\" valign=\"top\">INdT</td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">17h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">(Re) Discover KDE</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Hélio Chissini de Castro</td>
</tr>
</tbody>
</table>
<h4><strong>Day 06/11</strong></h4>
<table>
<tbody>
<tr>
<th>Hour</th>
<th>Talk</th>
<th>Speaker</th>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">09h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Mini-course: Basic Qt</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Sandro Andrade</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\">10h</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Mini-course: Basic Qt</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Sandro Andrade</td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">11h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Mini-course: Basic Qt</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Sandro Andrade</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\"></td>
<td bgcolor=\"#ffffff\" valign=\"top\"></td>
<td bgcolor=\"#ffffff\" valign=\"top\"></td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">13h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Mini-course: Develop your Plasmoid JavaScript in 20 Minutes</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Sandro Andrade</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\">14h</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Mini-course: Talking to your programs via D-Bus</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Lamarque Souza</td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">15h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Mini-course: Talking to your programs via D-Bus</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Lamarque Souza</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\">16h</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Mini-course: Talking to your programs via D-Bus</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Lamarque Souza</td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">17h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Closing and Raffle Giveaways</td>
</tr>
</tbody>
</table>
<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/kdepi.wordpress.com/206/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/kdepi.wordpress.com/206/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/kdepi.wordpress.com/206/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/kdepi.wordpress.com/206/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/kdepi.wordpress.com/206/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/kdepi.wordpress.com/206/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/kdepi.wordpress.com/206/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=kdepi.wordpress.com&amp;blog=13513203&amp;post=206&amp;subd=kdepi&amp;ref=&amp;feed=1\" width=\"1\" />" "http://kdepi.wordpress.com/2010/10/15/kde-forum-brazil-northeast-edition/" (19640 34540) new 8 nil nil ((guid ((isPermaLink . "false")) "http://kdepi.wordpress.com/?p=206") (title nil "Aracele Torres (araceletorres): KDE Forum Brazil – Northeast Edition") (pubDate nil "Fri, 15 Oct 2010 16:53:00 GMT") (link nil "http://kdepi.wordpress.com/2010/10/15/kde-forum-brazil-northeast-edition/") (description nil "<p>Hi all!</p>
<p style=\"text-align: justify;\">On 5 and 6 November there will be the <a href=\"http://ensl.org.br/2010/iii-forum-kde-brasil-edicao-nordeste/\" target=\"_blank\">KDE Forum Brazil &#8211; Northeast Edition</a> in Natal, Rio Grande do Norte. The KDE  Forum Brazil &#8211; Northeast Edition is the latest achievement of the &#8220;KDE  Forum Brazil&#8221; in the International Free Software Forum (FISL), but this  time as a satellite event of the <a href=\"http://ensl.org.br/2010/apresentacao/\" target=\"_blank\">Northeast Meeting of Free  Software</a>. The aim is to present lectures  on the topics currently being discussed in KDE and provide practical  experiences in the form of mini-courses on the main technologies used  in day-to-day contribution to the project.</p>
<p style=\"text-align: justify;\">The importance of Northeast Meeting of Free Software is to descentralize the free software events in Brazil, which occur with more frequency in the south/southeast of the country. Brazil is a continental proportion country, thus, some displacements are equivalent to travels across many european countries, in terms of distance and time.</p>
<p style=\"text-align: justify;\">So, the Northeast Meeting of Free Software agregates the brazilian community&#160; closest to the littoral, backland e tropical regions of the country. We are more hot than the south people. <img alt=\":-)\" class=\"wp-smiley\" src=\"http://s2.wp.com/wp-includes/images/smilies/icon_smile.gif\" /> </p>
<p>The event schedule will be:</p>
<h4><strong>Day 05/11</strong></h4>
<table>
<tbody>
<tr>
<th>Hour</th>
<th>Talk</th>
<th>Speaker</th>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">08h45</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Opening</td>
<td bgcolor=\"#edf4f9\" valign=\"top\"></td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\">09h</td>
<td bgcolor=\"#ffffff\" valign=\"top\">KDE: Wear the shirt!</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Amanda Castro</td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">10h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">KDE in your language &#8230;</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Aracele Torres</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\"></td>
<td bgcolor=\"#ffffff\" valign=\"top\"></td>
<td bgcolor=\"#ffffff\" valign=\"top\"></td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">13h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Developing for KDE</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Sandro Andrade</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\">14h</td>
<td bgcolor=\"#ffffff\" valign=\"top\">KDE in Google Summer of Code</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Paulo R&#244;mulo</td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">15h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">KDE Lovelace</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Amanda Castro e Aracele Torres</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\">16h</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Qt/KDE on Mobiles</td>
<td bgcolor=\"#ffffff\" valign=\"top\">INdT</td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">17h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">(Re) Discover KDE</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">H&#233;lio Chissini de Castro</td>
</tr>
</tbody>
</table>
<h4><strong>Day 06/11</strong></h4>
<table>
<tbody>
<tr>
<th>Hour</th>
<th>Talk</th>
<th>Speaker</th>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">09h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Mini-course: Basic Qt</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Sandro Andrade</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\">10h</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Mini-course: Basic Qt</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Sandro Andrade</td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">11h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Mini-course: Basic Qt</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Sandro Andrade</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\"></td>
<td bgcolor=\"#ffffff\" valign=\"top\"></td>
<td bgcolor=\"#ffffff\" valign=\"top\"></td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">13h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Mini-course: Develop your Plasmoid JavaScript in 20 Minutes</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Sandro Andrade</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\">14h</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Mini-course: Talking to your programs via D-Bus</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Lamarque Souza</td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">15h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Mini-course: Talking to your programs via D-Bus</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Lamarque Souza</td>
</tr>
<tr>
<td bgcolor=\"#ffffff\" valign=\"top\">16h</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Mini-course: Talking to your programs via D-Bus</td>
<td bgcolor=\"#ffffff\" valign=\"top\">Lamarque Souza</td>
</tr>
<tr>
<td bgcolor=\"#edf4f9\" valign=\"top\">17h</td>
<td bgcolor=\"#edf4f9\" valign=\"top\">Closing and Raffle Giveaways</td>
</tr>
</tbody>
</table>
<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/kdepi.wordpress.com/206/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/kdepi.wordpress.com/206/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/kdepi.wordpress.com/206/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/kdepi.wordpress.com/206/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/kdepi.wordpress.com/206/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/kdepi.wordpress.com/206/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/kdepi.wordpress.com/206/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/kdepi.wordpress.com/206/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=kdepi.wordpress.com&amp;blog=13513203&amp;post=206&amp;subd=kdepi&amp;ref=&amp;feed=1\" width=\"1\" />"))) ("Will Stephenson: openSUSE Conference KDE Team Party" "<p>Next week is openSUSE Conference week!  I'm using both my <a href=\"http://lizards.opensuse.org/author/wstephenson/\">openSUSE</a> and KDE blogs to remind everyone that we're having <a href=\"http://en.opensuse.org/openSUSE:Conference_Kde_Social\">a pre-conference meetup</a> at 6pm for the KDE team before the real conference begins at Barfüßer in the Nuernberg old town.  Remember a morning of keynotes is only fun if you have a thumping hangover from microbrewed beer (and if you're a keynote speaker, from local schapps too)!  If you are attending the conference or if you are just a friend of KDE in the area, please join in.  </p>
<p><a href=\"http://www.flickr.com/photos/wstephenson/271479660/\" title=\"KDE Hysteria! by will.stephenson, on Flickr\"><img align=\"center\" alt=\"pa130024.jpg\" height=\"225\" src=\"http://farm1.static.flickr.com/106/271479660_0e405d089f.jpg\" width=\"300\" /></a></p>
<p>If you <a href=\"http://en.opensuse.org/openSUSE:Conference_Kde_Social\">add your name to the wiki</a> I'll have an idea how big a table we need, I've provisionally got space for 20.</p>
<p>Will</p>" "http://www.kdedevelopers.org/node/4341" (19640 24932) new 9 nil nil ((guid ((isPermaLink . "false")) "http://www.kdedevelopers.org/4341 at http://www.kdedevelopers.org") (title nil "Will Stephenson: openSUSE Conference KDE Team Party") (pubDate nil "Fri, 15 Oct 2010 14:12:52 GMT") (link nil "http://www.kdedevelopers.org/node/4341") (description nil "<p>Next week is openSUSE Conference week!  I'm using both my <a href=\"http://lizards.opensuse.org/author/wstephenson/\">openSUSE</a> and KDE blogs to remind everyone that we're having <a href=\"http://en.opensuse.org/openSUSE:Conference_Kde_Social\">a pre-conference meetup</a> at 6pm for the KDE team before the real conference begins at Barf&#252;&#223;er in the Nuernberg old town.  Remember a morning of keynotes is only fun if you have a thumping hangover from microbrewed beer (and if you're a keynote speaker, from local schapps too)!  If you are attending the conference or if you are just a friend of KDE in the area, please join in.  </p>
<p><a href=\"http://www.flickr.com/photos/wstephenson/271479660/\" title=\"KDE Hysteria! by will.stephenson, on Flickr\"><img align=\"center\" alt=\"pa130024.jpg\" height=\"225\" src=\"http://farm1.static.flickr.com/106/271479660_0e405d089f.jpg\" width=\"300\" /></a></p>
<p>If you <a href=\"http://en.opensuse.org/openSUSE:Conference_Kde_Social\">add your name to the wiki</a> I'll have an idea how big a table we need, I've provisionally got space for 20.</p>
<p>Will</p>"))) ("Jos Poortvliet: Last piece of strategy before the conference" "<p>Hi all!<br /><br />The strategy discussion in openSUSE is a difficult one. I wrote in the <a href=\"http://news.opensuse.org/2010/10/15/finalizing-who-we-are/\">latest announcement</a> this: <blockquote>So if you've held back, have not had a look at this yet - now or never! Provide your input on the draft on <a href=\"https://lite.co-ment.com/text/lNPCgzeGHdV/view/\">co-ment</a> and help shape our description of what being a Geeko means to us all. Yes, this will hopefully describe ourselves - where we stand, but also add a bit of pepper and salt and show our ambitions. Our strategy document has to be inclusive - but not too long. It has to show some ambition - but must also be realistic.</blockquote>This is not easy. We're a hugely diversified community with all sorts of users and contributors. We do NOT aim to change that - we're openSUSE after all. But we also have to make choices and have a profile potential users and contributors can recognize themselves in. Take 'beginners'. What does that mean? Are we talking about people who haven't used computers before? openSUSE should be fine for them - if they are looking to learn, play with it a bit. Someone who only needs a computer to check mail will probably need help, however, to get it up and running. They are not interested in reading on a forum about how to install multimedia codecs. So we target the person who will help him or her installing it and setting it up! Which again doesn't exclude a community team working on a super-simple openSUSE with everything a beginner needs - our infrastructure supports them. But we have to pick our battles, and openSUSE is traditionally a distribution which is powerful and flexible - we don't want to sacrifice functionality in our default offering. We want a graphics professional to be able to have all the powertools at his or her fingertips; we want a sysadmin to have an easy-to-administer system; we want a teacher to have a wide choice of interesting learning tools; we want a pro-audio user to easily install a low-latency kernel. openSUSE should not be harder than it has to be - but you may notice the power under your fingertips.<br /><br />Anyway. Lots of talk, the resulting new paragraph in the description of our target users is dramatically shorter than the old one:<br /><blockquote>openSUSE users are looking for an easy and comfortable computing experience which does not limit  their freedom of choice, offering sane defaults and easy configuration.</blockquote><br /><br />I think I like it, but the 'old' one (with updates) is also up on co-ment - let me know which one you like more. I even have a bunch of iterations in a piratepad <a href=\"http://piratepad.net/SaznzxopP0\">here</a>, feel free to look at the evolution. Altough this is only from today, yesterday I worked until 1 with Thomas Thym (thanks!). Today I had help from Klaas Freitag, Will stephenson and Henne Vogelsang for helping with this single sentence... I could not have done it alone! To paraphrase Thomas from last night: a team is more than the sum of the individuals. <br /><br />Love, Jos<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/12366865-5882275609166970427?l=nowwhatthe.blogspot.com\" width=\"1\" /></div>" "http://nowwhatthe.blogspot.com/2010/10/last-piece-of-strategy-before.html" (19640 15070) new 10 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-12366865.post-5882275609166970427") (title nil "Jos Poortvliet: Last piece of strategy before the conference") (pubDate nil "Fri, 15 Oct 2010 11:28:30 GMT") (link nil "http://nowwhatthe.blogspot.com/2010/10/last-piece-of-strategy-before.html") (description nil "<p>Hi all!<br /><br />The strategy discussion in openSUSE is a difficult one. I wrote in the <a href=\"http://news.opensuse.org/2010/10/15/finalizing-who-we-are/\">latest announcement</a> this: <blockquote>So if you've held back, have not had a look at this yet - now or never! Provide your input on the draft on <a href=\"https://lite.co-ment.com/text/lNPCgzeGHdV/view/\">co-ment</a> and help shape our description of what being a Geeko means to us all. Yes, this will hopefully describe ourselves - where we stand, but also add a bit of pepper and salt and show our ambitions. Our strategy document has to be inclusive - but not too long. It has to show some ambition - but must also be realistic.</blockquote>This is not easy. We're a hugely diversified community with all sorts of users and contributors. We do NOT aim to change that - we're openSUSE after all. But we also have to make choices and have a profile potential users and contributors can recognize themselves in. Take 'beginners'. What does that mean? Are we talking about people who haven't used computers before? openSUSE should be fine for them - if they are looking to learn, play with it a bit. Someone who only needs a computer to check mail will probably need help, however, to get it up and running. They are not interested in reading on a forum about how to install multimedia codecs. So we target the person who will help him or her installing it and setting it up! Which again doesn't exclude a community team working on a super-simple openSUSE with everything a beginner needs - our infrastructure supports them. But we have to pick our battles, and openSUSE is traditionally a distribution which is powerful and flexible - we don't want to sacrifice functionality in our default offering. We want a graphics professional to be able to have all the powertools at his or her fingertips; we want a sysadmin to have an easy-to-administer system; we want a teacher to have a wide choice of interesting learning tools; we want a pro-audio user to easily install a low-latency kernel. openSUSE should not be harder than it has to be - but you may notice the power under your fingertips.<br /><br />Anyway. Lots of talk, the resulting new paragraph in the description of our target users is dramatically shorter than the old one:<br /><blockquote>openSUSE users are looking for an easy and comfortable computing experience which does not limit  their freedom of choice, offering sane defaults and easy configuration.</blockquote><br /><br />I think I like it, but the 'old' one (with updates) is also up on co-ment - let me know which one you like more. I even have a bunch of iterations in a piratepad <a href=\"http://piratepad.net/SaznzxopP0\">here</a>, feel free to look at the evolution. Altough this is only from today, yesterday I worked until 1 with Thomas Thym (thanks!). Today I had help from Klaas Freitag, Will stephenson and Henne Vogelsang for helping with this single sentence... I could not have done it alone! To paraphrase Thomas from last night: a team is more than the sum of the individuals. <br /><br />Love, Jos<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/12366865-5882275609166970427?l=nowwhatthe.blogspot.com\" width=\"1\" /></div>"))) ("Dimitri Popov: Using digiKam with MySQL" "<p>By default, digiKam uses SQLite as its back-end for storing important metadata and thumbnails. But the photo management application also provides support for the popular MySQL database engine, and it comes with a database migration tool that can help you to move your data from SQLite to MySQL. <a href=\"http://scribblesandsnaps.wordpress.com/2010/10/15/using-digikam-with-mysql/\">Continue to read</a></p>" "http://www.digikam.org/drupal/node/541" (19640 6934) new 11 nil nil ((guid ((isPermaLink . "false")) "http://www.digikam.org/541 at http://www.digikam.org/drupal") (title nil "Dimitri Popov: Using digiKam with MySQL") (pubDate nil "Fri, 15 Oct 2010 09:12:54 GMT") (link nil "http://www.digikam.org/drupal/node/541") (description nil "<p>By default, digiKam uses SQLite as its back-end for storing important metadata and thumbnails. But the photo management application also provides support for the popular MySQL database engine, and it comes with a database migration tool that can help you to move your data from SQLite to MySQL. <a href=\"http://scribblesandsnaps.wordpress.com/2010/10/15/using-digikam-with-mysql/\">Continue to read</a></p>"))) ("Adriaan de Groot (adridg): It’s Colorized" "<p>Alas, <a href=\"http://blogs.fsfe.org/gladhorn/2010/06/08/fluffy-how-pink-can-we-get/\">Frederik’s master plan</a> has not seen a whole lot of progress. I wanted to go down that path a little as well — that has everything to do with sitting next to Lydia for a day of not-always-exciting meetings. She challenged me to make my desktop as horrifyingly pink as possible. That would be useful if I had to plug in my laptop to give a presentation: the color scheme would shock everyone awake.</p>
<p>So, clear challenge. Now how <strong>do</strong> you make your desktop as pink as possible. KDE is terrifically configurable, but that doesn’t mean it’s <strong>simple</strong> to configure it. Here are my notes in KDE 4.4.5 (Fedora 13). To some extent it’s intended to show where additional polishing might be applied to make KDE more consistent. And overall it will show that for an overall appearance manager we need something more — or something else — than we have right now.</p>
<p><strong>Wallpaper:</strong> right click the background of the desktop, pick <em>Desktop Activity Settings</em>. That’s the only configuration item there. It opens a <em>Desktop Settings - Plasma Workspace</em> dialog. Pick <em>Wallpaper</em>. Click <em>Get New Wallpapers</em>. There’s a search bar in the resulting dialog. I tried searching for unicorns first, but the right search term is &quot;<a href=\"http://opendesktop.org/content/show.php?content=35736\">Sugarcoma Bunny</a>&quot;. Click <em>install</em> and then select that wallpaper, click <em>OK</em>. The dialog goes away and the first step (over one million pixels) in pinkness has been made.</p>
<p><strong>Colors:</strong> start <em>System Settings</em>, pick the <em>Appearance</em> module. The title now changes to <em>Style</em> (because that’s the selected item on the left). Go down one item, to <em>Colors</em>. Pick the tab <em>Scheme</em>. Click <em>Get New Schemes</em>. (This Hot New Stuff is really darn useful). Once again there’s a search bar, use &quot;pink&quot;. You could pick either Ruphy’s &quot;So pink that it hurts my teeth&quot; or Fregl’s &quot;Fluffy.&quot; I think the &quot;hurts my teeth&quot; theme is a little better, but it still needs a little tweaking.</p>
<p>This is where futzing with color schemes gets a little complicated. There is a tremendous number of settings to deal with, and I’m not really sure what all of them do. (Here’s a bit of <a href=\"http://lip.sourceforge.net/colorpanel.html\">history related to color display</a> in the scheme list).</p>
<p>Switch to the <em>Colors</em> tab (in the <em>Colors</em> item). From the drop-down box, select <em>Window</em>. Click the button next to <em>Normal Background</em>. Pick a better color. I used #FBBCFF. OK the color dialog, then click apply. For reference, we’re in S<em>ystem Settings - Appearance - Colors - Colors - Window</em>. Five selection levels deep. You might want to <em>Save Scheme</em> to keep these custom settings around, too.</p>
<p><strong>Icons:</strong> there doesn’t seem to be a very pink icon set. I skipped this bit for now.</p>
<p><strong>Windows:</strong> if you stick with the Oxygen window decoration, there are some additional colors to set. The window shadows are colored as well, and in a pink desktop, you should have pink shadows. I changed the windowdrop-down shadow to use #FBBCFF; the active window glow uses #FF37C7 and outer color #FFC0FF. </p>
<p><strong>Other appearance items:</strong> to be truly pervasively pink, we would need a pink splash screen and emoticon set as well. Switch to the <em>Splash Screen</em> item. Click <em>Get New Themes</em>. For some reason this dialog is different from the ones used earlier. It’s titled <em>Get Hot New Stuff</em> and labeled internally with System<em> Settings Add-On Installer</em>. There’s probably some string not being passed to a constructor there to make the labels more meaningful. Note to self: check same dialogs in KDE 4.5.2, then file a bug report if necessary. Searching for &quot;pink&quot;, &quot;bunny&quot; and &quot;fluffy&quot; didn’t yield anything, so we’ll have to leave the splash for now; same for emoticons. </p>
<p>[[ By now the desktop is pretty darn pink. But let's start two applications to see how far the colors go. ]]</p>
<p><strong>Konsole:</strong> start <em>Konsole</em>, go to <em>Settings -&gt; Edit Current Profile</em>. Select the <em>Appearance</em> tab. Notice the extremely cool way color schemes slide in, but there’s no quick way to import a color scheme. The <em>New</em> button gives you basically a bunch of color selectors; there’s no Hot New Stuff here, nor a quick way to import settings. It’s not clear to me how to export the settings either — I’ll file a wishlist item there.</p>
<p>It’s straightforward to set up light and dark pink (or purple) as foreground and background colors, but the other available colors are a bit problematic. I use irssi in screen a lot, and the blue and yellow that it uses was a bit jarring. Since I don’t use any other colors in konsole, I just picked a bunch of settings to colorize things in a nice way for my specific use. <strong>KDE 4.5 note:</strong> seems that the menus have changed a little, and you need to go through the settings dialog.</p>
<p><strong>Kate:</strong> the other application I use a lot is Kate, and it uses its own color schemes. Go to <em>Settings-&gt;Configure Kate</em> and then under <em>Editor Component / Fonts &amp; Colors</em> you can mess with the colors. Again, no clear way to export a scheme or use Hot New Stuff to get new ones. Here again there’s a huge number of colors to set up (which might explain why there’s only two color schemes by default). I took a quick route to setting up a pink scheme and changed only the four text background colors: normal, selected, current and bookmark = ( #FFBBFD, #FF7DCB, #F8E0F4, #FF39F9). The current line is perhaps a bit greyish, but that does make it easy to spot. I haven’t touched any of the syntax highlighting.</p>
<p><strong>Other UI elements:</strong> text input and some other backgrounds still aren’t pinkish, but white. I may have missed something in the color scheme control module. Similarly alternating colors in lists aren’t pink and pink,  but still while and blueish.</p>
<p><strong>Plasma Theme:</strong> many Plasma themes are dark-ish. For this color scheme, you really want the desktop background to shine through. I tried the Glassified theme but struggled to get it to be transparent. I suspect XRender problems on this laptop. In any case, to change this: <em>System Settings -&gt; Appearance -&gt; Style</em>. Select tab &quot;Workspace&quot;. Here you can pick themes. The <strong>obvious</strong> theme would be the original Fluffy Bunny, but it has gone missing again. I ended up with  the Atelier theme — click <em>Get New Themes</em>, then search for that name. Install, apply, done.</p>
<p><img align=\"left\" src=\"http://blogs.fsfe.org/adridg/files/2010/10/pink11.png\" style=\"margin: 1ex 1em;\" /> After all this configuration, the desktop looks like the screenshot here. There’s still some disconcerting bits of white there — the open documents list in Kate in particular. But let’s take a step back and summarize where changes needed to be made to achieve the goal of &quot;make it pink&quot;.</p>
<p>Wallpaper, system color scheme, icon set, emoticons, window deco settings and colors, konsole color scheme, kate color scheme, plasma theme. Less than half of these support Hot New Stuff. They are in several different locations, different KCM’s, require manual configuration in applications.</p>
<p>Now suppose that one of my new friends from Ljubljana were to come over and ask if they can make their desktop look like mine (o horrors!). It strikes me that it would be useful to have a new <strong>collection</strong> (or meta-HNS) setting that is called &quot;Overall Appearance&quot; or something like that that would apply a theme, wallpaper, color scheme, etc. etc. in one go — including Konsole and Kate’s default schemes. Then the idea of &quot;share my desktop look&quot; can come to fruition. Or have I just missed something obvious to do that already?</p>" "http://blogs.fsfe.org/adridg/?p=1002" (19640 5450) new 13 nil nil ((guid ((isPermaLink . "false")) "http://blogs.fsfe.org/adridg/?p=1002") (title nil "Adriaan de Groot (adridg): It’s Colorized") (pubDate nil "Fri, 15 Oct 2010 08:48:10 GMT") (link nil "http://blogs.fsfe.org/adridg/?p=1002") (description nil "<p>Alas, <a href=\"http://blogs.fsfe.org/gladhorn/2010/06/08/fluffy-how-pink-can-we-get/\">Frederik&#8217;s master plan</a> has not seen a whole lot of progress. I wanted to go down that path a little as well &#8212; that has everything to do with sitting next to Lydia for a day of not-always-exciting meetings. She challenged me to make my desktop as horrifyingly pink as possible. That would be useful if I had to plug in my laptop to give a presentation: the color scheme would shock everyone awake.</p>
<p>So, clear challenge. Now how <strong>do</strong> you make your desktop as pink as possible. KDE is terrifically configurable, but that doesn&#8217;t mean it&#8217;s <strong>simple</strong> to configure it. Here are my notes in KDE 4.4.5 (Fedora 13). To some extent it&#8217;s intended to show where additional polishing might be applied to make KDE more consistent. And overall it will show that for an overall appearance manager we need something more &#8212; or something else &#8212; than we have right now.</p>
<p><strong>Wallpaper:</strong> right click the background of the desktop, pick <em>Desktop Activity Settings</em>. That&#8217;s the only configuration item there. It opens a <em>Desktop Settings - Plasma Workspace</em> dialog. Pick <em>Wallpaper</em>. Click <em>Get New Wallpapers</em>. There&#8217;s a search bar in the resulting dialog. I tried searching for unicorns first, but the right search term is &quot;<a href=\"http://opendesktop.org/content/show.php?content=35736\">Sugarcoma Bunny</a>&quot;. Click <em>install</em> and then select that wallpaper, click <em>OK</em>. The dialog goes away and the first step (over one million pixels) in pinkness has been made.</p>
<p><strong>Colors:</strong> start <em>System Settings</em>, pick the <em>Appearance</em> module. The title now changes to <em>Style</em> (because that&#8217;s the selected item on the left). Go down one item, to <em>Colors</em>. Pick the tab <em>Scheme</em>. Click <em>Get New Schemes</em>. (This Hot New Stuff is really darn useful). Once again there&#8217;s a search bar, use &quot;pink&quot;. You could pick either Ruphy&#8217;s &quot;So pink that it hurts my teeth&quot; or Fregl&#8217;s &quot;Fluffy.&quot; I think the &quot;hurts my teeth&quot; theme is a little better, but it still needs a little tweaking.</p>
<p>This is where futzing with color schemes gets a little complicated. There is a tremendous number of settings to deal with, and I&#8217;m not really sure what all of them do. (Here&#8217;s a bit of <a href=\"http://lip.sourceforge.net/colorpanel.html\">history related to color display</a> in the scheme list).</p>
<p>Switch to the <em>Colors</em> tab (in the <em>Colors</em> item). From the drop-down box, select <em>Window</em>. Click the button next to <em>Normal Background</em>. Pick a better color. I used #FBBCFF. OK the color dialog, then click apply. For reference, we&#8217;re in S<em>ystem Settings - Appearance - Colors - Colors - Window</em>. Five selection levels deep. You might want to <em>Save Scheme</em> to keep these custom settings around, too.</p>
<p><strong>Icons:</strong> there doesn&#8217;t seem to be a very pink icon set. I skipped this bit for now.</p>
<p><strong>Windows:</strong> if you stick with the Oxygen window decoration, there are some additional colors to set. The window shadows are colored as well, and in a pink desktop, you should have pink shadows. I changed the windowdrop-down shadow to use #FBBCFF; the active window glow uses #FF37C7 and outer color #FFC0FF. </p>
<p><strong>Other appearance items:</strong> to be truly pervasively pink, we would need a pink splash screen and emoticon set as well. Switch to the <em>Splash Screen</em> item. Click <em>Get New Themes</em>. For some reason this dialog is different from the ones used earlier. It&#8217;s titled <em>Get Hot New Stuff</em> and labeled internally with System<em> Settings Add-On Installer</em>. There&#8217;s probably some string not being passed to a constructor there to make the labels more meaningful. Note to self: check same dialogs in KDE 4.5.2, then file a bug report if necessary. Searching for &quot;pink&quot;, &quot;bunny&quot; and &quot;fluffy&quot; didn&#8217;t yield anything, so we&#8217;ll have to leave the splash for now; same for emoticons. </p>
<p>[[ By now the desktop is pretty darn pink. But let's start two applications to see how far the colors go. ]]</p>
<p><strong>Konsole:</strong> start <em>Konsole</em>, go to <em>Settings -&gt; Edit Current Profile</em>. Select the <em>Appearance</em> tab. Notice the extremely cool way color schemes slide in, but there&#8217;s no quick way to import a color scheme. The <em>New</em> button gives you basically a bunch of color selectors; there&#8217;s no Hot New Stuff here, nor a quick way to import settings. It&#8217;s not clear to me how to export the settings either &#8212; I&#8217;ll file a wishlist item there.</p>
<p>It&#8217;s straightforward to set up light and dark pink (or purple) as foreground and background colors, but the other available colors are a bit problematic. I use irssi in screen a lot, and the blue and yellow that it uses was a bit jarring. Since I don&#8217;t use any other colors in konsole, I just picked a bunch of settings to colorize things in a nice way for my specific use. <strong>KDE 4.5 note:</strong> seems that the menus have changed a little, and you need to go through the settings dialog.</p>
<p><strong>Kate:</strong> the other application I use a lot is Kate, and it uses its own color schemes. Go to <em>Settings-&gt;Configure Kate</em> and then under <em>Editor Component / Fonts &amp; Colors</em> you can mess with the colors. Again, no clear way to export a scheme or use Hot New Stuff to get new ones. Here again there&#8217;s a huge number of colors to set up (which might explain why there&#8217;s only two color schemes by default). I took a quick route to setting up a pink scheme and changed only the four text background colors: normal, selected, current and bookmark = ( #FFBBFD, #FF7DCB, #F8E0F4, #FF39F9). The current line is perhaps a bit greyish, but that does make it easy to spot. I haven&#8217;t touched any of the syntax highlighting.</p>
<p><strong>Other UI elements:</strong> text input and some other backgrounds still aren&#8217;t pinkish, but white. I may have missed something in the color scheme control module. Similarly alternating colors in lists aren&#8217;t pink and pink,  but still while and blueish.</p>
<p><strong>Plasma Theme:</strong> many Plasma themes are dark-ish. For this color scheme, you really want the desktop background to shine through. I tried the Glassified theme but struggled to get it to be transparent. I suspect XRender problems on this laptop. In any case, to change this: <em>System Settings -&gt; Appearance -&gt; Style</em>. Select tab &quot;Workspace&quot;. Here you can pick themes. The <strong>obvious</strong> theme would be the original Fluffy Bunny, but it has gone missing again. I ended up with  the Atelier theme &#8212; click <em>Get New Themes</em>, then search for that name. Install, apply, done.</p>
<p><img align=\"left\" src=\"http://blogs.fsfe.org/adridg/files/2010/10/pink11.png\" style=\"margin: 1ex 1em;\" /> After all this configuration, the desktop looks like the screenshot here. There&#8217;s still some disconcerting bits of white there &#8212; the open documents list in Kate in particular. But let&#8217;s take a step back and summarize where changes needed to be made to achieve the goal of &quot;make it pink&quot;.</p>
<p>Wallpaper, system color scheme, icon set, emoticons, window deco settings and colors, konsole color scheme, kate color scheme, plasma theme. Less than half of these support Hot New Stuff. They are in several different locations, different KCM&#8217;s, require manual configuration in applications.</p>
<p>Now suppose that one of my new friends from Ljubljana were to come over and ask if they can make their desktop look like mine (o horrors!). It strikes me that it would be useful to have a new <strong>collection</strong> (or meta-HNS) setting that is called &quot;Overall Appearance&quot; or something like that that would apply a theme, wallpaper, color scheme, etc. etc. in one go &#8212; including Konsole and Kate&#8217;s default schemes. Then the idea of &quot;share my desktop look&quot; can come to fruition. Or have I just missed something obvious to do that already?</p>"))) ("Richard Dale: SPARQL queries in QML with QSparql" "<p>We've been working on <a href=\"http://maemo.gitorious.org/maemo-af/qsparql\">QSparql</a> for a few months now, and I feel it is starting to be something that could be used by a wider audience. It is a simple QSql-like library for accessing various RDF stores such as KDE's Nepomuk data in Virtuoso, SPARQL endpoints on the web via HTTP, and Gnome or MeeGo Nepomuk data in Tracker stores. It differs from Soprano in that it is much smaller and lower level, and it is asynchronous and uses Qt slot callbacks by default, whereas Soprano is usually a synchronous style api.</p>
<p>SPARQL is a complex query language, although if you are already familiar with SQL, it shouldn't be too hard to learn. However, a lot of the documentation is written by academics and they tend to make RDF and SPARQL sound more complicated than they actually are. So there is certainly a learning curve involved, but there are a lot of advantages in being familiar with SPARQL. In the same way that, although you can avoid learning SQL by using visual query builders, you will get to a certain point, where not knowing SQL will begin to hold you back. QSparql makes no attempt to hide SPARQL, it just handles the queries as simple strings.</p>
<p>A nice feature that was added to QSparql recently, was a QML model that allows you to make SPARQL queries and display the results entirely in QML. I thought I would write a blog about how it works as it is interesting in itself for playing with SPARQL, and it also might inspire people to try something similar with DBus or SQL queries. I got the idea from a nice project called 'elisa_qt' which does some very impressive animated things with QML. They were just using SPARQL in QML to access Tracker store Nepomuk data, which I expanded and generalized.</p>
<p>Here is an example of what the SparqlResultsList model looks like:</p>
<pre><div class=\"codeblock\"><code>import Qt 4.7<br />import QSparql 1.0<br /><br />ListView {<br />&nbsp;&nbsp;&nbsp; width: 1000; height: 600<br /><br />&nbsp;&nbsp;&nbsp; model: SparqlResultsList {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; options: SparqlConnectionOptions {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; driverName: &quot;QSPARQL_ENDPOINT&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hostName: &quot;dbpedia.org&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; query: &quot;SELECT $predicate $value WHERE { &lt;http://dbpedia.org/resource/The_Beatles&gt; $predicate $thing . }&quot;<br />&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp; delegate: Text { text: &quot;Data: &quot; + predicate + &quot;, &quot; + value }<br />}</code></div></pre><p>
The actual query means \"search in the dbpedia.org RDF store for a pattern matching 'The Beatles' and obtain all the attribute names ($predicate) and corresponding attribute values ($value)\". QSparql has several different drivers and the one we are using here is 'QSPARQL_ENDPOINT' which allows you to make queries to databases on the web. For each row in the results returned the 'delegate:' is called and you can use the variable names from the query to compose some text to show the user the results ('predicate' and 'value' variables here). I hope the QML is largely self explanatory.</p>
<p>In C++ terms the model is written as a QAbstractListModel, and you can see the code for the model in <a href=\"http://maemo.gitorious.org/maemo-af/qsparql/blobs/master/src/sparql/models/qsparqlresultslist_p.h\">qsparqlresultslist_p.h</a> and <a href=\"http://maemo.gitorious.org/maemo-af/qsparql/blobs/master/src/sparql/models/qsparqlresultslist.cpp\">qsparqlresultslist.cpp</a> in Gitorious</p>
<pre><div class=\"codeblock\"><code>class QSparqlResultsList : public QAbstractListModel<br />{<br />&nbsp;&nbsp;&nbsp; Q_OBJECT<br />&nbsp;&nbsp;&nbsp; Q_PROPERTY(QSparqlConnectionOptionsWrapper * options READ options WRITE setOptions)<br />&nbsp;&nbsp;&nbsp; Q_PROPERTY(QString query READ query WRITE setQuery)<br />&nbsp;&nbsp;&nbsp; ...</code></div></pre><p>
The are two Q_PROPERTIES, one to set the query text and another one to set the connection options to use, such as which driver, port or web path. To use Virtuoso you would set the options property like this to use a driver name of 'QVIRTUOSO':</p>
<pre><div class=\"codeblock\"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; options: SparqlConnectionOptions {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; driverName: &quot;QVIRTUOSO&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; databaseName: &quot;DRIVER=/usr/lib/odbc/virtodbc_r.so&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></div></pre><p>
The clever bit is how the SPARQL query variables become javascript variables that you can use in the model's 'delegate:' property to show the results. This is the code:</p>
<pre><div class=\"codeblock\"><code>void QSparqlResultsList::queryFinished()<br />{<br />&nbsp;&nbsp;&nbsp; QHash&lt;int, QByteArray&gt; roleNames;<br />&nbsp;&nbsp;&nbsp; roleNames = QAbstractItemModel::roleNames();<br /><br />&nbsp;&nbsp;&nbsp; if (m_result-&gt;first()) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; QSparqlResultRow resultRow = m_result-&gt;current();<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create two sets of declarative variables from the variable names used<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // in the select statement<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 'foo' is just a literal like 1234, but '$foo' is &quot;1234&quot;^^xsd:integer<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 'bar' is a string 'http://www.w3.org/2002/07/owl#sameAs', but '$bar'<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // is a uri &lt;http://www.w3.org/2002/07/owl#sameAs&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; resultRow.count(); i++) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; roleNames.insert((Qt::UserRole + 1) + i, resultRow.binding(i).name().toLatin1());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; resultRow.count(); i++) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; roleNames.insert((Qt::UserRole + 1) + i + resultRow.count(), QByteArray(&quot;$&quot;) + resultRow.binding(i).name().toLatin1());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setRoleNames(roleNames);<br />&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp; reset();<br />}</code></div></pre><p>
You add the names you want to use in the delegate to the QAbstractItemModel::roleNames() hash table, and give each one of them an integer value. The code above obtains the first result row returned by the query and extracts the variable names from that. In the SPARQL model there are actually two sets of variable names, where a plain 'predicate' or 'value' is just the text of the query result, whereas '$predicate' and '$value' have the RDF datatype added if they are literals, or they will be enclosed in angle brackets if they are Uris. The '$foo' form is useful if you want to build up a follow on query based on the results of an intial query. For instance, you might obtain an album name from your local Nepomuk store, and then want to make a second web based query to DBpedia using the same album name.</p>
<p>Having set up the role names, you need to implement a data() method to return the values to the code using the model:</p>
<pre><div class=\"codeblock\"><code>QVariant QSparqlResultsList::data(const QModelIndex &amp;index, int role) const<br />{<br />&nbsp;&nbsp;&nbsp; if (!index.isValid())<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return QVariant();<br /><br />&nbsp;&nbsp;&nbsp; m_result-&gt;setPos(index.row());<br />&nbsp;&nbsp;&nbsp; QSparqlResultRow row = m_result-&gt;current();<br />&nbsp;&nbsp;&nbsp; int i = role - (Qt::UserRole + 1);<br /><br />&nbsp;&nbsp;&nbsp; if (i &gt;= row.count())<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return row.binding(i - row.count()).toString();<br />&nbsp;&nbsp;&nbsp; else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return row.value(i);<br />}</code></div></pre><p>
To actually tell QML about the C++ types in the model you need to have a top level plugin class which looks like this:</p>
<pre><div class=\"codeblock\"><code>class SparqlResultsListPlugin : public QDeclarativeExtensionPlugin<br />{<br />public:<br />&nbsp;&nbsp;&nbsp; void registerTypes(const char *uri)<br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Q_ASSERT(uri == QLatin1String(&quot;QSparql&quot;));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; qmlRegisterType&lt;QSparqlResultsList&gt;(uri, 0, 1, &quot;SparqlResultsList&quot;);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; qmlRegisterType&lt;QSparqlConnectionOptionsWrapper&gt;(uri, 0, 1, &quot;SparqlConnectionOptions&quot;);<br />&nbsp;&nbsp;&nbsp; }<br />};<br /><br />Q_EXPORT_PLUGIN2(sparqlresultslist, SparqlResultsListPlugin);</code></div></pre><p>
You need to install the plugin into a path like /usr/imports/QSparql, along with a file called 'qmldir' containing the name of the plugin:</p>
<pre><div class=\"codeblock\"><code>plugin sparqlresultslist</code></div></pre><p>
Then the QML runtime should be able to find it, assuming that '/usr/imports' is on its list of declarative paths.</p>
<p>So please go ahead and try out QSparql and tell us what you think. There isn't a public mailing list yet unfortunately, and so you may need to mail me personally for now (or comment on this blog of course).</p>" "http://www.kdedevelopers.org/node/4340" (19639 25611) new 14 nil nil ((guid ((isPermaLink . "false")) "http://www.kdedevelopers.org/4340 at http://www.kdedevelopers.org") (title nil "Richard Dale: SPARQL queries in QML with QSparql") (pubDate nil "Thu, 14 Oct 2010 20:11:55 GMT") (link nil "http://www.kdedevelopers.org/node/4340") (description nil "<p>We've been working on <a href=\"http://maemo.gitorious.org/maemo-af/qsparql\">QSparql</a> for a few months now, and I feel it is starting to be something that could be used by a wider audience. It is a simple QSql-like library for accessing various RDF stores such as KDE's Nepomuk data in Virtuoso, SPARQL endpoints on the web via HTTP, and Gnome or MeeGo Nepomuk data in Tracker stores. It differs from Soprano in that it is much smaller and lower level, and it is asynchronous and uses Qt slot callbacks by default, whereas Soprano is usually a synchronous style api.</p>
<p>SPARQL is a complex query language, although if you are already familiar with SQL, it shouldn't be too hard to learn. However, a lot of the documentation is written by academics and they tend to make RDF and SPARQL sound more complicated than they actually are. So there is certainly a learning curve involved, but there are a lot of advantages in being familiar with SPARQL. In the same way that, although you can avoid learning SQL by using visual query builders, you will get to a certain point, where not knowing SQL will begin to hold you back. QSparql makes no attempt to hide SPARQL, it just handles the queries as simple strings.</p>
<p>A nice feature that was added to QSparql recently, was a QML model that allows you to make SPARQL queries and display the results entirely in QML. I thought I would write a blog about how it works as it is interesting in itself for playing with SPARQL, and it also might inspire people to try something similar with DBus or SQL queries. I got the idea from a nice project called 'elisa_qt' which does some very impressive animated things with QML. They were just using SPARQL in QML to access Tracker store Nepomuk data, which I expanded and generalized.</p>
<p>Here is an example of what the SparqlResultsList model looks like:</p>
<pre><div class=\"codeblock\"><code>import Qt 4.7<br />import QSparql 1.0<br /><br />ListView {<br />&nbsp;&nbsp;&nbsp; width: 1000; height: 600<br /><br />&nbsp;&nbsp;&nbsp; model: SparqlResultsList {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; options: SparqlConnectionOptions {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; driverName: &quot;QSPARQL_ENDPOINT&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hostName: &quot;dbpedia.org&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; query: &quot;SELECT $predicate $value WHERE { &lt;http://dbpedia.org/resource/The_Beatles&gt; $predicate $thing . }&quot;<br />&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp; delegate: Text { text: &quot;Data: &quot; + predicate + &quot;, &quot; + value }<br />}</code></div></pre><p>
The actual query means \"search in the dbpedia.org RDF store for a pattern matching 'The Beatles' and obtain all the attribute names ($predicate) and corresponding attribute values ($value)\". QSparql has several different drivers and the one we are using here is 'QSPARQL_ENDPOINT' which allows you to make queries to databases on the web. For each row in the results returned the 'delegate:' is called and you can use the variable names from the query to compose some text to show the user the results ('predicate' and 'value' variables here). I hope the QML is largely self explanatory.</p>
<p>In C++ terms the model is written as a QAbstractListModel, and you can see the code for the model in <a href=\"http://maemo.gitorious.org/maemo-af/qsparql/blobs/master/src/sparql/models/qsparqlresultslist_p.h\">qsparqlresultslist_p.h</a> and <a href=\"http://maemo.gitorious.org/maemo-af/qsparql/blobs/master/src/sparql/models/qsparqlresultslist.cpp\">qsparqlresultslist.cpp</a> in Gitorious</p>
<pre><div class=\"codeblock\"><code>class QSparqlResultsList : public QAbstractListModel<br />{<br />&nbsp;&nbsp;&nbsp; Q_OBJECT<br />&nbsp;&nbsp;&nbsp; Q_PROPERTY(QSparqlConnectionOptionsWrapper * options READ options WRITE setOptions)<br />&nbsp;&nbsp;&nbsp; Q_PROPERTY(QString query READ query WRITE setQuery)<br />&nbsp;&nbsp;&nbsp; ...</code></div></pre><p>
The are two Q_PROPERTIES, one to set the query text and another one to set the connection options to use, such as which driver, port or web path. To use Virtuoso you would set the options property like this to use a driver name of 'QVIRTUOSO':</p>
<pre><div class=\"codeblock\"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; options: SparqlConnectionOptions {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; driverName: &quot;QVIRTUOSO&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; databaseName: &quot;DRIVER=/usr/lib/odbc/virtodbc_r.so&quot;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></div></pre><p>
The clever bit is how the SPARQL query variables become javascript variables that you can use in the model's 'delegate:' property to show the results. This is the code:</p>
<pre><div class=\"codeblock\"><code>void QSparqlResultsList::queryFinished()<br />{<br />&nbsp;&nbsp;&nbsp; QHash&lt;int, QByteArray&gt; roleNames;<br />&nbsp;&nbsp;&nbsp; roleNames = QAbstractItemModel::roleNames();<br /><br />&nbsp;&nbsp;&nbsp; if (m_result-&gt;first()) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; QSparqlResultRow resultRow = m_result-&gt;current();<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create two sets of declarative variables from the variable names used<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // in the select statement<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // &#039;foo&#039; is just a literal like 1234, but &#039;$foo&#039; is &quot;1234&quot;^^xsd:integer<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // &#039;bar&#039; is a string &#039;http://www.w3.org/2002/07/owl#sameAs&#039;, but &#039;$bar&#039;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // is a uri &lt;http://www.w3.org/2002/07/owl#sameAs&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; resultRow.count(); i++) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; roleNames.insert((Qt::UserRole + 1) + i, resultRow.binding(i).name().toLatin1());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; resultRow.count(); i++) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; roleNames.insert((Qt::UserRole + 1) + i + resultRow.count(), QByteArray(&quot;$&quot;) + resultRow.binding(i).name().toLatin1());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setRoleNames(roleNames);<br />&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp; reset();<br />}</code></div></pre><p>
You add the names you want to use in the delegate to the QAbstractItemModel::roleNames() hash table, and give each one of them an integer value. The code above obtains the first result row returned by the query and extracts the variable names from that. In the SPARQL model there are actually two sets of variable names, where a plain 'predicate' or 'value' is just the text of the query result, whereas '$predicate' and '$value' have the RDF datatype added if they are literals, or they will be enclosed in angle brackets if they are Uris. The '$foo' form is useful if you want to build up a follow on query based on the results of an intial query. For instance, you might obtain an album name from your local Nepomuk store, and then want to make a second web based query to DBpedia using the same album name.</p>
<p>Having set up the role names, you need to implement a data() method to return the values to the code using the model:</p>
<pre><div class=\"codeblock\"><code>QVariant QSparqlResultsList::data(const QModelIndex &amp;index, int role) const<br />{<br />&nbsp;&nbsp;&nbsp; if (!index.isValid())<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return QVariant();<br /><br />&nbsp;&nbsp;&nbsp; m_result-&gt;setPos(index.row());<br />&nbsp;&nbsp;&nbsp; QSparqlResultRow row = m_result-&gt;current();<br />&nbsp;&nbsp;&nbsp; int i = role - (Qt::UserRole + 1);<br /><br />&nbsp;&nbsp;&nbsp; if (i &gt;= row.count())<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return row.binding(i - row.count()).toString();<br />&nbsp;&nbsp;&nbsp; else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return row.value(i);<br />}</code></div></pre><p>
To actually tell QML about the C++ types in the model you need to have a top level plugin class which looks like this:</p>
<pre><div class=\"codeblock\"><code>class SparqlResultsListPlugin : public QDeclarativeExtensionPlugin<br />{<br />public:<br />&nbsp;&nbsp;&nbsp; void registerTypes(const char *uri)<br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Q_ASSERT(uri == QLatin1String(&quot;QSparql&quot;));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; qmlRegisterType&lt;QSparqlResultsList&gt;(uri, 0, 1, &quot;SparqlResultsList&quot;);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; qmlRegisterType&lt;QSparqlConnectionOptionsWrapper&gt;(uri, 0, 1, &quot;SparqlConnectionOptions&quot;);<br />&nbsp;&nbsp;&nbsp; }<br />};<br /><br />Q_EXPORT_PLUGIN2(sparqlresultslist, SparqlResultsListPlugin);</code></div></pre><p>
You need to install the plugin into a path like /usr/imports/QSparql, along with a file called 'qmldir' containing the name of the plugin:</p>
<pre><div class=\"codeblock\"><code>plugin sparqlresultslist</code></div></pre><p>
Then the QML runtime should be able to find it, assuming that '/usr/imports' is on its list of declarative paths.</p>
<p>So please go ahead and try out QSparql and tell us what you think. There isn't a public mailing list yet unfortunately, and so you may need to mail me personally for now (or comment on this blog of course).</p>"))) ("Ariya Hidayat: sencha touch hackathon" "<p><img border=\"0\" src=\"http://lh3.ggpht.com/_Oijhf1ZPv-4/TGJKVQA3TXI/AAAAAAAABrM/gkaRF85wbAY/s800/sencha_logo.png\" /></p>
<p>Are you in the Bay Area? Don't miss our <a href=\"http://www.sencha.com/blog/2010/10/13/sencha-touch-dev-contest-hackathon/\">Sencha Touch Hackathon</a> this Saturday (Oct 16) in our <a href=\"http://maps.google.com/maps?f=q&amp;source=s_q&amp;hl=en&amp;geocode=&amp;q=525+University+Ave,+Palo+Alto,+CA+94301&amp;sll=37.448896,-122.159338&amp;sspn=0.008211,0.006899&amp;ie=UTF8&amp;hq=&amp;hnear=525+University+Ave,+Palo+Alto,+Santa+Clara,+California+94301&amp;t=h&amp;z=17&amp;iwloc=A\">Palo Alto Office</a>, 1pm to 5pm. There will be food and drinks as well.</p>
<p>Drop by and upgrade your Sencha Touch kungfu!<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/17722541-9109786711939988530?l=ariya.blogspot.com\" width=\"1\" /></div>" "http://ariya.blogspot.com/2010/10/sencha-touch-hackathon.html" (19639 20089) new 15 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-17722541.post-9109786711939988530") (title nil "Ariya Hidayat: sencha touch hackathon") (pubDate nil "Thu, 14 Oct 2010 18:39:53 GMT") (link nil "http://ariya.blogspot.com/2010/10/sencha-touch-hackathon.html") (description nil "<p><img border=\"0\" src=\"http://lh3.ggpht.com/_Oijhf1ZPv-4/TGJKVQA3TXI/AAAAAAAABrM/gkaRF85wbAY/s800/sencha_logo.png\" /></p> 

<p>Are you in the Bay Area? Don't miss our <a href=\"http://www.sencha.com/blog/2010/10/13/sencha-touch-dev-contest-hackathon/\">Sencha Touch Hackathon</a> this Saturday (Oct 16) in our <a href=\"http://maps.google.com/maps?f=q&amp;source=s_q&amp;hl=en&amp;geocode=&amp;q=525+University+Ave,+Palo+Alto,+CA+94301&amp;sll=37.448896,-122.159338&amp;sspn=0.008211,0.006899&amp;ie=UTF8&amp;hq=&amp;hnear=525+University+Ave,+Palo+Alto,+Santa+Clara,+California+94301&amp;t=h&amp;z=17&amp;iwloc=A\">Palo Alto Office</a>, 1pm to 5pm. There will be food and drinks as well.</p>

<p>Drop by and upgrade your Sencha Touch kungfu!<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/17722541-9109786711939988530?l=ariya.blogspot.com\" width=\"1\" /></div>"))) ("Tom Albers: Help KDE, we need servers!" "<p>As known, the Git transition is happening. More and more projects are moving to git.kde.org. All the infrastructure is in place and working fine. But we have a small feature request still open. </p>
<p>To convert a project from SVN to Git, you have to write conversion rules. To write these rules and test the conversion you need to have the complete SVN repository on your local computer. Even if you only would like a small contained project like RSIBreak to switch to git, you need to rsync the whole repository. </p>
<p>The size of that repository is currently <strong>65GB</strong>, this is a real problem for a lot of our contributors. They can not download this repository with their ADSL connection. If you have a 2mbps internet connection which you can use 100% and calculate 0% overhead, this will take you 70 hours, 31 minutes and 46 seconds. That’s basically unacceptable and blocking the transition to Git.</p>
<p>So, our plan is to provide a server on which all our registered developers can login, which is completely setup to write the rules and has the SVN repository downloaded and kept up to date. This way all the developers can log in to that server and start working on the rules instantly.</p>
<p>But currently we don’t have a server which we can use for such an isolated purpose. Ideally we would like a (perhaps virtual) machine with something like 100GB free space with some fast access times to the disk, as that 65GB will be searched through frequently. Also a good processor makes things more enjoyable. We are hoping data centers, commercial virtual server providers or some friendly distributions are prepared to donate some resources to us.</p>
<p>If you have hardware available for us, please drop by #kde-sysadmin on freenode, or sent me a mail (toma at kde ). Ideally we would like to have two or three servers available for this project and we only need it for a year or so. Please help us, help KDE!</p>
<p class=\"facebook\"><a href=\"http://www.facebook.com/share.php?u=http://www.omat.nl/2010/10/14/help-kde-we-need-servers/\" target=\"_blank\"><img alt=\"Share on Facebook\" src=\"http://www.omat.nl/wp-content/plugins/add-to-facebook-plugin/facebook_share_icon.gif\" title=\"Share on Facebook\" /></a></p> <p>Feel free to Flattr this post at <a href=\"http://www.omat.nl/\" target=\"_blank\" title=\"Flattr\">www.omat.nl</a>, if you like it.</p> <p><a href=\"http://www.omat.nl/\" target=\"_blank\" title=\"Flattr\"><img alt=\"flattr this!\" src=\"http://www.omat.nl/wp-content/plugins/flattrss/button-compact-static-100x17.png\" /></a></p>" "http://www.omat.nl/2010/10/14/help-kde-we-need-servers/" (19639 19827) new 16 nil nil ((guid ((isPermaLink . "false")) "http://www.omat.nl/?p=817") (title nil "Tom Albers: Help KDE, we need servers!") (pubDate nil "Thu, 14 Oct 2010 18:35:31 GMT") (link nil "http://www.omat.nl/2010/10/14/help-kde-we-need-servers/") (description nil "<p>As known, the Git transition is happening. More and more projects are moving to git.kde.org. All the infrastructure is in place and working fine. But we have a small feature request still open. </p>
<p>To convert a project from SVN to Git, you have to write conversion rules. To write these rules and test the conversion you need to have the complete SVN repository on your local computer. Even if you only would like a small contained project like RSIBreak to switch to git, you need to rsync the whole repository. </p>
<p>The size of that repository is currently <strong>65GB</strong>, this is a real problem for a lot of our contributors. They can not download this repository with their ADSL connection. If you have a 2mbps internet connection which you can use 100% and calculate 0% overhead, this will take you 70 hours, 31 minutes and 46 seconds. That&#8217;s basically unacceptable and blocking the transition to Git.</p>
<p>So, our plan is to provide a server on which all our registered developers can login, which is completely setup to write the rules and has the SVN repository downloaded and kept up to date. This way all the developers can log in to that server and start working on the rules instantly.</p>
<p>But currently we don&#8217;t have a server which we can use for such an isolated purpose. Ideally we would like a (perhaps virtual) machine with something like 100GB free space with some fast access times to the disk, as that 65GB will be searched through frequently. Also a good processor makes things more enjoyable. We are hoping data centers, commercial virtual server providers or some friendly distributions are prepared to donate some resources to us.</p>
<p>If you have hardware available for us, please drop by #kde-sysadmin on freenode, or sent me a mail (toma at kde ). Ideally we would like to have two or three servers available for this project and we only need it for a year or so. Please help us, help KDE!</p>
<p class=\"facebook\"><a href=\"http://www.facebook.com/share.php?u=http://www.omat.nl/2010/10/14/help-kde-we-need-servers/\" target=\"_blank\"><img alt=\"Share on Facebook\" src=\"http://www.omat.nl/wp-content/plugins/add-to-facebook-plugin/facebook_share_icon.gif\" title=\"Share on Facebook\" /></a></p> <p>Feel free to Flattr this post at <a href=\"http://www.omat.nl/\" target=\"_blank\" title=\"Flattr\">www.omat.nl</a>, if you like it.</p> <p><a href=\"http://www.omat.nl/\" target=\"_blank\" title=\"Flattr\"><img alt=\"flattr this!\" src=\"http://www.omat.nl/wp-content/plugins/flattrss/button-compact-static-100x17.png\" /></a></p>"))) ("Marc Mutz: Top 5 reasons you should love your ternary operator" "<p>I feel the need to take up the cudgels on behalf of my old friend, the ternary operator <code>?:</code>.</p>
<p>As evidenced by <a href=\"http://stackoverflow.com/questions/160218/to-ternary-or-not-to-ternary\">this stackoverflow.com discussion</a>, many people seem to believe that choosing the ternary operator over <code>if</code>/<code>else</code> is purely a matter of personal style, and of readability. Well, it’s not.</p>
<p><span id=\"more-113\"></span></p>
<h3>It’s an expression</h3>
<p>The major difference between the ternary operator and <code>if</code>/<code>else</code> is that the former is an <em>expression</em>, whereas the latter is a <em>statement</em>. This means that you can use the ternary operator anywhere the compiler expects an expression. Here’s a handful of situations where <code>if</code>/<code>else</code> is <em>not</em> an option:</p>
<ul>
<li>When initialising subobjects in the <a href=\"http://en.wikipedia.org/wiki/Initialization_(programming)#Initializer_list\">initialiser list</a> of a constructor</li>
<li>When initialising const objects, including enumerators in <code>enum</code>s</li>
<li>When initialising references and other types that have no default constructor, or are not assignable</li>
</ul>
<p>I hasten to add that you can trivially rewrite every program to not use the ternary operator: Obviously, you can replace</p>
<pre class=\"brush: cpp;\">
expr-A ? expr-B : expr-C
</pre>
<p>with a function that takes all lvalues used in <code>expr-A</code>, <code>expr-B</code>, and <code>expr-C</code> as parameters:</p>
<pre class=\"brush: cpp;\">
fun( ...lvalues... ) {
if ( expr-A ) return expr-B; else return expr-C;
}
</pre>
<p>But this way, the conditional code definition is far removed from where it’s used (just the problem <a href=\"http://en.wikipedia.org/wiki/C++0x#Lambda_functions_and_expressions\">lambda functions</a> will solve in C++0x for algorithm customisation), which hurts readability.</p>
<h3>It can yield a compile-time constant</h3>
<p>The other problem with functions is that their return values are not compile-time constants:</p>
<pre class=\"brush: cpp;\">
int five() { return 5; }
char array[five()]; // error: 'five()' is not a compile-time constant!
</pre>
<p>True, <a href=\"http://en.wikipedia.org/wiki/C++0x#Generalized_constant_expressions\">C++0x will have <code>constexpr</code> functions</a>, but those cannot contain <code>if</code>/<code>else</code>, so you’re back to square one:</p>
<pre class=\"brush: cpp;\">
constexpr int oneOrTwo( bool one ) {
if ( one )     // error: constexpr function body must be a single return statement!
return 1;
else
return 2;
}
constexpr int oneOrThree( bool one ) {
return one ? 1 : 3 ; // OK
}
</pre>
<p>In other words:</p>
<h3>Makes non-trivial C++0x <code>constexpr</code> functions possible in the first place</h3>
<p>For <code>const</code>-aficionados like yours truly, <code>constexpr</code> is a heaven-sent. For the first time, we don’t have to choose between a “proper” class’ convenience (including constructors) and a <a href=\"http://en.wikipedia.org/wiki/Plain_old_data_structure\">POD</a>‘s efficiency.</p>
<p>Take your normal <code>Rect</code> class as an example:</p>
<pre class=\"brush: cpp;\">
struct RectC { int x1, y1, x2, y2; };
class Rect03 {
int m_x1, m_y1, m_x2, m_y2;
public:
Rect03( int x1, int y1, int x2, int y2 )
// normalise coordinates:
: m_x1( x1 &lt; x2 ? x1 : x2 ), m_y1( y1 &lt; y2 ? y1 : y2 ),
m_x2( x1 &lt; x2 ? x2 : x1 ), m_y2( y1 &lt; y2 ? y2 : y1 ) {}
// ...
};
class Rect0x {
int m_x1, m_y1, m_x2, m_y2;
public:
constexpr Rect0x( int x1, int y1, int x2, int y2 )
// normalise coordinates:
: m_x1( x1 &lt; x2 ? x1 : x2 ), m_y1( y1 &lt; y2 ? y1 : y2 ),
m_x2( x1 &lt; x2 ? x2 : x1 ), m_y2( y1 &lt; y2 ? y2 : y1 ) {}
// ...
};
static const RectC r1[] = {
{ 0, 0, 12, 20 }, { 12, 20, 34, 39 },
}; // ok, really compile-time constant
static const Rect03 r2[] = {
Rect03( 0, 0, 12, 20 ), Rect03( 12, 20, 34, 39 ),
}; // NOT a compile-time constant!
static const Rect0x r3[] = {
Rect0x( 0, 0, 12, 20 ), Rect0x( 12, 20, 34, 39 ),
}; // ok, compile-time constant!
</pre>
<p>The memory layout of all the classes being <em>identical</em>, the <code>Rect03</code> (C++-03-style) suffers a performance penalty because the constructors cannot be run at compile time, so they must be run at runtime. There’s no reason a class with a constructor should suffer such a severe performance hit over one that doesn’t include a constructor, and <code>constexpr</code> fixes this.</p>
<p>But <code>constexpr</code> functions are severely restricted in what they can do. A <code>constexpr</code> constructor, e.g., must have an empty body (<code>{}</code>); other <code>constexpr</code> functions may only contain a single return statement. All expressions in <code>constexpr</code> functions must be <code>constexpr</code>s themselves, after argument substitution.</p>
<p>The ternary operator is your only chance of ever evaluating a condition in such a function.</p>
<p>Incidentally, <code>constexpr</code> non-constructor functions are <em>pure functions</em>: they only depend on their arguments and constant global state. They therefore have a lot in common with functional languages, and the ternary operator helps bring even more functional programming style to C++:</p>
<h3>Fosters functional-language-style code</h3>
<p>You might not agree with me, but I find functional code a lot easier to read in many cases than procedural code. The ternary operator allows you to write code whose structure mimics functional’s. Compare this Erlang code: </p>
<pre class=\"brush: erlang;\">
fac(0) -&gt; 1;
fac(1) -&gt; 1;
fac(N) -&gt; N * fac(N-1).
</pre>
<p>with this C++ code:</p>
<pre class=\"brush: cpp;\">
int fac( int N ) {
return N == 0   ? 1 :
N == 1   ? 1 :
/* else */ N * fac(N-1) ;
}
</pre>
<p>and this procedural C++ code:</p>
<pre class=\"brush: cpp;\">
int fac( int N ) {
if ( N == 0 )
return 1;
else if ( N == 1 )
return 1;
else
return N * fac(N-1);
}
</pre>
<h3>Can contain <code>throw</code> expressions</h3>
<p>On thing you might not believe possible is this: The ternary operator can contain throw expressions. Either of the two legs of the ternary may contain a throw expression (but not both); the respective other leg then determines the type of the whole ternary expression.</p>
<p>Here’s an example from Kleopatra:</p>
<pre class=\"brush: cpp;\">
static QString make_top_label_conflict_text( bool sign, bool enc ) {
return
sign &amp;&amp; enc ? i18n(&quot;Kleopatra cannot unambiguously determine matching certificates &quot;
&quot;for all recipients/senders of the message.\\n&quot;
&quot;Please select the correct certificates for each recipient:&quot;) :
sign        ? i18n(&quot;Kleopatra cannot unambiguously determine matching certificates &quot;
&quot;for the sender of the message.\\n&quot;
&quot;Please select the correct certificates for the sender:&quot;) :
enc         ? i18n(&quot;Kleopatra cannot unambiguously determine matching certificates &quot;
&quot;for all recipients of the message.\\n&quot;
&quot;Please select the correct certificates for each recipient:&quot; ) :
/* else */    kleo_assert_fail( sign || enc ) ;
}
</pre>
<p>(where <code>kleo_assert_fail(x)</code> is a macro which expands to <code>throw&nbsp;Kleo::Exception(&nbsp;...,&nbsp;#x&nbsp;)</code>).</p>
<p>So, to summarise: the ternary operator is C++’s way of producing a conditional <em>expression</em> (in other programming languages, <code>if</code>/<code>else</code> itself is an expression, but in C++, it’s “only” a statement). There are many places in C++ where statements are not allowed, only expressions, and that’s why the ternary operator is not just syntactic sugar, and choosing <code>?:</code> over <code>if</code>/<code>else</code> is <em>not</em> just a matter of personal style. The ternary operator is to conditionals what C++0x lambda expressions are to functions.</p>
<br />Filed under: <a href=\"http://marcmutz.wordpress.com/category/programming-languages/c/\">C++</a>, <a href=\"http://marcmutz.wordpress.com/category/programming-languages/c/c0x/\">C++0x</a>, <a href=\"http://marcmutz.wordpress.com/category/english/\">English</a>  <a href=\"http://feeds.wordpress.com/1.0/gocomments/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/marcmutz.wordpress.com/113/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/marcmutz.wordpress.com/113/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/marcmutz.wordpress.com/113/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/marcmutz.wordpress.com/113/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/marcmutz.wordpress.com/113/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/marcmutz.wordpress.com/113/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/marcmutz.wordpress.com/113/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=marcmutz.wordpress.com&amp;blog=14776649&amp;post=113&amp;subd=marcmutz&amp;ref=&amp;feed=1\" width=\"1\" />" "http://marcmutz.wordpress.com/2010/10/14/top-5-reasons-you-should-love-your-ternary-operator/" (19639 16748) new 17 nil nil ((guid ((isPermaLink . "false")) "http://marcmutz.wordpress.com/?p=113") (title nil "Marc Mutz: Top 5 reasons you should love your ternary operator") (pubDate nil "Thu, 14 Oct 2010 17:44:12 GMT") (link nil "http://marcmutz.wordpress.com/2010/10/14/top-5-reasons-you-should-love-your-ternary-operator/") (description nil "<p>I feel the need to take up the cudgels on behalf of my old friend, the ternary operator <code>?:</code>.</p>
<p>As evidenced by <a href=\"http://stackoverflow.com/questions/160218/to-ternary-or-not-to-ternary\">this stackoverflow.com discussion</a>, many people seem to believe that choosing the ternary operator over <code>if</code>/<code>else</code> is purely a matter of personal style, and of readability. Well, it&#8217;s not.</p>
<p><span id=\"more-113\"></span></p>
<h3>It&#8217;s an expression</h3>
<p>The major difference between the ternary operator and <code>if</code>/<code>else</code> is that the former is an <em>expression</em>, whereas the latter is a <em>statement</em>. This means that you can use the ternary operator anywhere the compiler expects an expression. Here&#8217;s a handful of situations where <code>if</code>/<code>else</code> is <em>not</em> an option:</p>
<ul>
<li>When initialising subobjects in the <a href=\"http://en.wikipedia.org/wiki/Initialization_(programming)#Initializer_list\">initialiser list</a> of a constructor</li>
<li>When initialising const objects, including enumerators in <code>enum</code>s</li>
<li>When initialising references and other types that have no default constructor, or are not assignable</li>
</ul>
<p>I hasten to add that you can trivially rewrite every program to not use the ternary operator: Obviously, you can replace</p>
<pre class=\"brush: cpp;\">
   expr-A ? expr-B : expr-C
</pre>
<p>with a function that takes all lvalues used in <code>expr-A</code>, <code>expr-B</code>, and <code>expr-C</code> as parameters:</p>
<pre class=\"brush: cpp;\">
  fun( ...lvalues... ) {
    if ( expr-A ) return expr-B; else return expr-C;
  }
</pre>
<p>But this way, the conditional code definition is far removed from where it&#8217;s used (just the problem <a href=\"http://en.wikipedia.org/wiki/C++0x#Lambda_functions_and_expressions\">lambda functions</a> will solve in C++0x for algorithm customisation), which hurts readability.</p>
<h3>It can yield a compile-time constant</h3>
<p>The other problem with functions is that their return values are not compile-time constants:</p>
<pre class=\"brush: cpp;\">
int five() { return 5; }
char array[five()]; // error: 'five()' is not a compile-time constant!
</pre>
<p>True, <a href=\"http://en.wikipedia.org/wiki/C++0x#Generalized_constant_expressions\">C++0x will have <code>constexpr</code> functions</a>, but those cannot contain <code>if</code>/<code>else</code>, so you&#8217;re back to square one:</p>
<pre class=\"brush: cpp;\">
constexpr int oneOrTwo( bool one ) {
    if ( one )     // error: constexpr function body must be a single return statement!
        return 1;
    else
        return 2;
}
constexpr int oneOrThree( bool one ) {
    return one ? 1 : 3 ; // OK
}
</pre>
<p>In other words:</p>
<h3>Makes non-trivial C++0x <code>constexpr</code> functions possible in the first place</h3>
<p>For <code>const</code>-aficionados like yours truly, <code>constexpr</code> is a heaven-sent. For the first time, we don&#8217;t have to choose between a &#8220;proper&#8221; class&#8217; convenience (including constructors) and a <a href=\"http://en.wikipedia.org/wiki/Plain_old_data_structure\">POD</a>&#8216;s efficiency.</p>
<p>Take your normal <code>Rect</code> class as an example:</p>
<pre class=\"brush: cpp;\">
struct RectC { int x1, y1, x2, y2; };
class Rect03 {
    int m_x1, m_y1, m_x2, m_y2;
public:
    Rect03( int x1, int y1, int x2, int y2 )
          // normalise coordinates:
        : m_x1( x1 &lt; x2 ? x1 : x2 ), m_y1( y1 &lt; y2 ? y1 : y2 ),
          m_x2( x1 &lt; x2 ? x2 : x1 ), m_y2( y1 &lt; y2 ? y2 : y1 ) {}
// ...
};
class Rect0x {
    int m_x1, m_y1, m_x2, m_y2;
public:
    constexpr Rect0x( int x1, int y1, int x2, int y2 )
          // normalise coordinates:
        : m_x1( x1 &lt; x2 ? x1 : x2 ), m_y1( y1 &lt; y2 ? y1 : y2 ),
          m_x2( x1 &lt; x2 ? x2 : x1 ), m_y2( y1 &lt; y2 ? y2 : y1 ) {}
// ...
};

static const RectC r1[] = {
    { 0, 0, 12, 20 }, { 12, 20, 34, 39 },
}; // ok, really compile-time constant
static const Rect03 r2[] = {
    Rect03( 0, 0, 12, 20 ), Rect03( 12, 20, 34, 39 ),
}; // NOT a compile-time constant!
static const Rect0x r3[] = {
    Rect0x( 0, 0, 12, 20 ), Rect0x( 12, 20, 34, 39 ),
}; // ok, compile-time constant!
</pre>
<p>The memory layout of all the classes being <em>identical</em>, the <code>Rect03</code> (C++-03-style) suffers a performance penalty because the constructors cannot be run at compile time, so they must be run at runtime. There&#8217;s no reason a class with a constructor should suffer such a severe performance hit over one that doesn&#8217;t include a constructor, and <code>constexpr</code> fixes this.</p>
<p>But <code>constexpr</code> functions are severely restricted in what they can do. A <code>constexpr</code> constructor, e.g., must have an empty body (<code>{}</code>); other <code>constexpr</code> functions may only contain a single return statement. All expressions in <code>constexpr</code> functions must be <code>constexpr</code>s themselves, after argument substitution.</p>
<p>The ternary operator is your only chance of ever evaluating a condition in such a function.</p>
<p>Incidentally, <code>constexpr</code> non-constructor functions are <em>pure functions</em>: they only depend on their arguments and constant global state. They therefore have a lot in common with functional languages, and the ternary operator helps bring even more functional programming style to C++:</p>
<h3>Fosters functional-language-style code</h3>
<p>You might not agree with me, but I find functional code a lot easier to read in many cases than procedural code. The ternary operator allows you to write code whose structure mimics functional&#8217;s. Compare this Erlang code: </p>
<pre class=\"brush: erlang;\">
fac(0) -&gt; 1;
fac(1) -&gt; 1;
fac(N) -&gt; N * fac(N-1).
</pre>
<p>with this C++ code:</p>
<pre class=\"brush: cpp;\">
int fac( int N ) {
    return N == 0   ? 1 :
           N == 1   ? 1 :
           /* else */ N * fac(N-1) ;
}
</pre>
<p>and this procedural C++ code:</p>
<pre class=\"brush: cpp;\">
int fac( int N ) {
    if ( N == 0 )
        return 1;
    else if ( N == 1 )
        return 1;
    else
        return N * fac(N-1);
}
</pre>
<h3>Can contain <code>throw</code> expressions</h3>
<p>On thing you might not believe possible is this: The ternary operator can contain throw expressions. Either of the two legs of the ternary may contain a throw expression (but not both); the respective other leg then determines the type of the whole ternary expression.</p>
<p>Here&#8217;s an example from Kleopatra:</p>
<pre class=\"brush: cpp;\">
static QString make_top_label_conflict_text( bool sign, bool enc ) {
    return
        sign &amp;&amp; enc ? i18n(&quot;Kleopatra cannot unambiguously determine matching certificates &quot;
                           &quot;for all recipients/senders of the message.\\n&quot;
                           &quot;Please select the correct certificates for each recipient:&quot;) :
        sign        ? i18n(&quot;Kleopatra cannot unambiguously determine matching certificates &quot;
                           &quot;for the sender of the message.\\n&quot;
                           &quot;Please select the correct certificates for the sender:&quot;) :
        enc         ? i18n(&quot;Kleopatra cannot unambiguously determine matching certificates &quot;
                           &quot;for all recipients of the message.\\n&quot;
                           &quot;Please select the correct certificates for each recipient:&quot; ) :
        /* else */    kleo_assert_fail( sign || enc ) ;
}
</pre>
<p>(where <code>kleo_assert_fail(x)</code> is a macro which expands to <code>throw&nbsp;Kleo::Exception(&nbsp;...,&nbsp;#x&nbsp;)</code>).</p>
<p>So, to summarise: the ternary operator is C++&#8217;s way of producing a conditional <em>expression</em> (in other programming languages, <code>if</code>/<code>else</code> itself is an expression, but in C++, it&#8217;s &#8220;only&#8221; a statement). There are many places in C++ where statements are not allowed, only expressions, and that&#8217;s why the ternary operator is not just syntactic sugar, and choosing <code>?:</code> over <code>if</code>/<code>else</code> is <em>not</em> just a matter of personal style. The ternary operator is to conditionals what C++0x lambda expressions are to functions.</p>
<br />Filed under: <a href=\"http://marcmutz.wordpress.com/category/programming-languages/c/\">C++</a>, <a href=\"http://marcmutz.wordpress.com/category/programming-languages/c/c0x/\">C++0x</a>, <a href=\"http://marcmutz.wordpress.com/category/english/\">English</a>  <a href=\"http://feeds.wordpress.com/1.0/gocomments/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/marcmutz.wordpress.com/113/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/marcmutz.wordpress.com/113/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/marcmutz.wordpress.com/113/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/marcmutz.wordpress.com/113/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/marcmutz.wordpress.com/113/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/marcmutz.wordpress.com/113/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/marcmutz.wordpress.com/113/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/marcmutz.wordpress.com/113/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=marcmutz.wordpress.com&amp;blog=14776649&amp;post=113&amp;subd=marcmutz&amp;ref=&amp;feed=1\" width=\"1\" />"))) ("Stuart Jarvis: Fourteen Reasons to be KDE" "<p>In case you’re sleeping under a rock today, KDE is celebrating its 14th birthday. I still see myself as a newbie round these parts, but I can already think of fourteen things I’ve experienced that made me and make me part of KDE.</p>
<ol>
<li>To be free to try</li>
<li>To be free to fail</li>
<li>To be given the support to succeed</li>
<li>To be welcomed</li>
<li>To be treated as an equal</li>
<li>To learn from the best</li>
<li>To be thanked</li>
<li>To help people beyond KDE, working for the same goals</li>
<li>To use old skills and gain new ones</li>
<li>To meet your neighbours from the other side of the world</li>
<li>To become a pragmatist</li>
<li>To remain an idealist</li>
<li>To get it done</li>
<li>To <em>Join</em> the Game, not only watch it</li>
</ol>
<p>Or, in short, to <strong>be Free</strong>. Whether that is a means, an end or an effect, for me it describes everything we do.</p>" "http://www.asinen.org/2010/10/fourteen-reasons-to-be-kde/" (19639 10392) new 18 nil nil ((guid ((isPermaLink . "false")) "http://www.asinen.org/?p=1156") (title nil "Stuart Jarvis: Fourteen Reasons to be KDE") (pubDate nil "Thu, 14 Oct 2010 15:58:16 GMT") (link nil "http://www.asinen.org/2010/10/fourteen-reasons-to-be-kde/") (description nil "<p>In case you&#8217;re sleeping under a rock today, KDE is celebrating its 14th birthday. I still see myself as a newbie round these parts, but I can already think of fourteen things I&#8217;ve experienced that made me and make me part of KDE.</p>
<ol>
<li>To be free to try</li>
<li>To be free to fail</li>
<li>To be given the support to succeed</li>
<li>To be welcomed</li>
<li>To be treated as an equal</li>
<li>To learn from the best</li>
<li>To be thanked</li>
<li>To help people beyond KDE, working for the same goals</li>
<li>To use old skills and gain new ones</li>
<li>To meet your neighbours from the other side of the world</li>
<li>To become a pragmatist</li>
<li>To remain an idealist</li>
<li>To get it done</li>
<li>To <em>Join</em> the Game, not only watch it</li>
</ol>
<p>Or, in short, to <strong>be Free</strong>. Whether that is a means, an end or an effect, for me it describes everything we do.</p>"))) ("Anne Wilson (annew): How easily can you read UserBase?" "<p>If you speak Ukranian or Danish, excellently.  If you speak Chinese or Italian, quite a lot of pages.  Brazilian Portuguese, German and Spanish are beginning to make real progress.  If none of those are your language, there are very few pages translated.  To see how your language is faring, go to the <a href=\"http://lydgate.org/blogs/?????http://userbase.kde.org/Special:LanguageStats\" title=\"Language Statistics\">Language Statistics page</a> and enter your <a href=\"http://www.loc.gov/standards/iso639-2/php/code_list.php\">ISO_639-2 code</a></p>
<p>We now have 79 members registered to translate on UserBase, though only a fraction of that number is working regularly on translations.  For the top group, though, the figures are staggering.  In the last week for instance:</p>
<ul>
<li>Yurchor has touched 788 pages, making 1455 changes</li>
<li>MarcusGama has touched 768 pages, with 1416 changes</li>
<li>Claus_chr has touched 764 pages with 1454 pages!</li>
</ul>
<p>Not everyone can manage so much time and speed, but that doesn’t stop some people.  These people have also been very active</p>
<ul>
<li>Qiii2006 made 402 changes</li>
<li>Caig made 425</li>
<li>Sordon made 123 and</li>
<li>Nilli made 132.</li>
</ul>
<p>while others have made fewer but equally valued contributions.  This is the translation activity for the last 21 days:<br />
<img alt=\"Active Translators, 21 days\" class=\"alignnone\" height=\"200\" src=\"http://userbase.kde.org/index.php?title=Special:TranslationStats&amp;graphit=1&amp;preview=&amp;count=users&amp;scale=days&amp;days=21&amp;width=550&amp;height=200\" title=\"Active Translators\" width=\"550\" /></p>
<p>Maybe you have an hour or two with nothing pressing to do?  You can easily get started.  There’s plenty of help available in our <a href=\"http://userbase.kde.org/Tasks_and_Tools\" title=\"Tasks and Tools\">Tasks and Tools</a> page.</p>
<p>By now we have completed the transfer of most existing translated pages to the new system, but there are a few glitches.  Where we don’t have a registered translator for a language, the only options are to lose the translation or to copy and paste it into the new sections.  For some languages that’s a feasible option – you only need to know enough to recognise whether a paragraph is matching the English one in content, but what if the language is a non-latin-character one?  I met one such this week.  One page has only a single translation in the old system, but that translation is Arabic.  I know by the structure that it matches most of what’s on the English page, but I’m sure that some bits are missing.  I really need help from someone who can sort that out for me.  It’s not a long page and I’d guess that someone with the right skills could do the whole thing in less than half an hour.</p>
<p>Other skills are needed too – php, css, database-query to name a few.  We have people with all these skills, but too small a team puts too much pressure on a few people.  What is really needed is a group for each task, maybe three or four, so that no-one is being pressured when he has other things to do.  If you can help, please come to Freenode’s #kde-www and talk to us.  You’ll get a warm welcome, I guarantee<a href=\"http://lydgate.org/blogs/wp-content/uploads/2010/10/Face-smile.png\"><img alt=\"Smile\" class=\"size-full wp-image-221\" height=\"22\" src=\"http://lydgate.org/blogs/wp-content/uploads/2010/10/Face-smile.png\" title=\"Face-smile\" width=\"22\" /></a></p>" "http://lydgate.org/blogs/?p=220" (19639 7225) new 19 nil nil ((guid ((isPermaLink . "false")) "http://lydgate.org/blogs/?p=220") (title nil "Anne Wilson (annew): How easily can you read UserBase?") (pubDate nil "Thu, 14 Oct 2010 15:05:29 GMT") (link nil "http://lydgate.org/blogs/?p=220") (description nil "<p>If you speak Ukranian or Danish, excellently. &#160;If you speak Chinese or Italian, quite a lot of pages. &#160;Brazilian Portuguese, German and Spanish are beginning to make real progress. &#160;If none of those are your language, there are very few pages translated. &#160;To see how your language is faring, go to the&#160;<a href=\"http://lydgate.org/blogs/?????http://userbase.kde.org/Special:LanguageStats\" title=\"Language Statistics\">Language Statistics page</a> and enter your <a href=\"http://www.loc.gov/standards/iso639-2/php/code_list.php\">ISO_639-2 code</a></p>
<p>We now have 79 members registered to translate on UserBase, though only a fraction of that number is working regularly on translations. &#160;For the top group, though, the figures are staggering. &#160;In the last week for instance:</p>
<ul>
<li>Yurchor has touched 788 pages, making 1455 changes</li>
<li>MarcusGama has touched 768 pages, with 1416 changes</li>
<li>Claus_chr has touched 764 pages with 1454 pages!</li>
</ul>
<p>Not everyone can manage so much time and speed, but that doesn&#8217;t stop some people. &#160;These people have also been very active</p>
<ul>
<li>Qiii2006 made 402 changes</li>
<li>Caig made 425</li>
<li>Sordon made 123 and</li>
<li>Nilli made 132.</li>
</ul>
<p>while others have made fewer but equally valued contributions.  This is the translation activity for the last 21 days:<br />
<img alt=\"Active Translators, 21 days\" class=\"alignnone\" height=\"200\" src=\"http://userbase.kde.org/index.php?title=Special:TranslationStats&amp;graphit=1&amp;preview=&amp;count=users&amp;scale=days&amp;days=21&amp;width=550&amp;height=200\" title=\"Active Translators\" width=\"550\" /></p>
<p>Maybe you have an hour or two with nothing pressing to do? &#160;You can easily get started. &#160;There&#8217;s plenty of help available in our <a href=\"http://userbase.kde.org/Tasks_and_Tools\" title=\"Tasks and Tools\">Tasks and Tools</a> page.</p>
<p>By now we have completed the transfer of most existing translated pages to the new system, but there are a few glitches. &#160;Where we don&#8217;t have a registered translator for a language, the only options are to lose the translation or to copy and paste it into the new sections. &#160;For some languages that&#8217;s a feasible option &#8211; you only need to know enough to recognise whether a paragraph is matching the English one in content, but what if the language is a non-latin-character one? &#160;I met one such this week. &#160;One page has only a single translation in the old system, but that translation is Arabic. &#160;I know by the structure that it matches most of what&#8217;s on the English page, but I&#8217;m sure that some bits are missing. &#160;I really need help from someone who can sort that out for me. &#160;It&#8217;s not a long page and I&#8217;d guess that someone with the right skills could do the whole thing in less than half an hour.</p>
<p>Other skills are needed too &#8211; php, css, database-query to name a few. &#160;We have people with all these skills, but too small a team puts too much pressure on a few people. &#160;What is really needed is a group for each task, maybe three or four, so that no-one is being pressured when he has other things to do. &#160;If you can help, please come to Freenode&#8217;s #kde-www and talk to us. &#160;You&#8217;ll get a warm welcome, I guarantee<a href=\"http://lydgate.org/blogs/wp-content/uploads/2010/10/Face-smile.png\"><img alt=\"Smile\" class=\"size-full wp-image-221\" height=\"22\" src=\"http://lydgate.org/blogs/wp-content/uploads/2010/10/Face-smile.png\" title=\"Face-smile\" width=\"22\" /></a></p>"))) ("Valorie Zimmerman (valorie): GRUB2 and chroots, dammit!" "<p>Worst outcome from an install so far. Upon automatic reboot, when all is reported success:<br /><br />error: the symbol `grub_xputs` not found<br />grub rescue:><br /><br />Terror struck my heart, and hopelessness, and googling. I found that not only was I not alone, but it is a result from a long-standing bug, which bothered me greatly as I was installing: <a href=\"https://bugs.launchpad.net/ubuntu/+source/grub2/+bug/496435/comments/20\">https://bugs.launchpad.net/ubuntu/+source/grub2/+bug/496435/comments/20</a>, specifically: \"Grub doesn't identify SATA drives in the same order as the BIOS.\" Not only was this extremely confusing to me as I was trying to decide what to do during the install, even though I thought I had prepared very well, but also, \"I had to boot from the live image and chroot\" as the bug commenter did. <br /><br />On the other hand,that worked well. See the process here: <a href=\"http://www.webupd8.org/2010/05/fix-symbol-grubputs-not-found-when.html\">http://www.webupd8.org/2010/05/fix-symbol-grubputs-not-found-when.html</a>. Guess what the post is called? <b>Fix Symbol 'grub_puts' Not Found When Migrating From Ubuntu Karmic To Lucid</b>.Imagine that. BUG IS STILL THERE. And it bit me, and that hurt. A side issue is that my /home isn't found, but I think I know the fix for that, and I'm sure it is partially my ignorance and inexperience at fault.<br /><br />There were other possible solutions suggested, which I didn't try. For starters, I could only have one computer plugged into the Internet at a time, which meant I was looking for solutions in one screen, and typing them in on the other. The less to type, the fewer chances of typing errors making the problem even worse. But here they are, if you are in terror as I was, and my solution didn't work, or has disappeared:<br /><br /><a href=\"http://www.linux.com/community/forums?func=view&amp;amp%3Bcatid=18&amp;amp%3Bid=4219\">http://www.linux.com/community/forums?func=view&amp;%3Bcatid=18&amp;%3Bid=4219</a> and <a href=\"http://ubuntuforums.org/showthread.php?t=1580752\">http://ubuntuforums.org/showthread.php?t=1580752</a><br /><br />====================<br /><br />Comment I got by email from Holger Herzog:<br /> <br />Hi Valorie,<br /><br />I read your blog entry - thanks much for that! - and I ran into further troubles caused by something that was not mentioned on _any_ of the web sites regarding this grub problem:<br /><br />I have boot fs and root fs on different partitions!<br /><br />Then I had to mount the _root_ fs partition as described in the tutorials and _additionally_, I had to mount the boot fs under \"boot\" under the mounted root fs:<br /><pre>mount /sdROOT /mnt/temp<br />mount -B /dev /mnt/temp/dev<br />mount -B /dev/pts /mnt/temp/dev/pts<br />mount -B /proc /mnt/temp/proc<br />mount -B /sys /mnt/temp/sys</pre><br />AND, additionally:<br /><pre>mount /sdBOOT /mnt/temp/boot</pre><br />Otherwise I got an empty \"grub>\" prompt with no kernels found by grub.<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/5432566687488141671-3947170935338528467?l=linuxgrandma.blogspot.com\" width=\"1\" /></div>" "http://linuxgrandma.blogspot.com/2010/10/grub2-and-chroots-dammit.html" (19638 54001) new 21 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-5432566687488141671.post-3947170935338528467") (title nil "Valorie Zimmerman (valorie): GRUB2 and chroots, dammit!") (pubDate nil "Thu, 14 Oct 2010 09:52:49 GMT") (link nil "http://linuxgrandma.blogspot.com/2010/10/grub2-and-chroots-dammit.html") (description nil "<p>Worst outcome from an install so far. Upon automatic reboot, when all is reported success:<br /><br />error: the symbol `grub_xputs` not found<br />grub rescue:><br /><br />Terror struck my heart, and hopelessness, and googling. I found that not only was I not alone, but it is a result from a long-standing bug, which bothered me greatly as I was installing: <a href=\"https://bugs.launchpad.net/ubuntu/+source/grub2/+bug/496435/comments/20\">https://bugs.launchpad.net/ubuntu/+source/grub2/+bug/496435/comments/20</a>, specifically: \"Grub doesn't identify SATA drives in the same order as the BIOS.\" Not only was this extremely confusing to me as I was trying to decide what to do during the install, even though I thought I had prepared very well, but also, \"I had to boot from the live image and chroot\" as the bug commenter did. <br /><br />On the other hand,that worked well. See the process here: <a href=\"http://www.webupd8.org/2010/05/fix-symbol-grubputs-not-found-when.html\">http://www.webupd8.org/2010/05/fix-symbol-grubputs-not-found-when.html</a>. Guess what the post is called? <b>Fix Symbol 'grub_puts' Not Found When Migrating From Ubuntu Karmic To Lucid</b>.Imagine that. BUG IS STILL THERE. And it bit me, and that hurt. A side issue is that my /home isn't found, but I think I know the fix for that, and I'm sure it is partially my ignorance and inexperience at fault.<br /><br />There were other possible solutions suggested, which I didn't try. For starters, I could only have one computer plugged into the Internet at a time, which meant I was looking for solutions in one screen, and typing them in on the other. The less to type, the fewer chances of typing errors making the problem even worse. But here they are, if you are in terror as I was, and my solution didn't work, or has disappeared:<br /><br /><a href=\"http://www.linux.com/community/forums?func=view&amp;amp%3Bcatid=18&amp;amp%3Bid=4219\">http://www.linux.com/community/forums?func=view&amp;%3Bcatid=18&amp;%3Bid=4219</a> and <a href=\"http://ubuntuforums.org/showthread.php?t=1580752\">http://ubuntuforums.org/showthread.php?t=1580752</a><br /><br />====================<br /><br />Comment I got by email from Holger Herzog:<br /> <br />Hi Valorie,<br /><br />I read your blog entry - thanks much for that! - and I ran into further troubles caused by something that was not mentioned on _any_ of the web sites regarding this grub problem:<br /><br />I have boot fs and root fs on different partitions!<br /><br />Then I had to mount the _root_ fs partition as described in the tutorials and _additionally_, I had to mount the boot fs under \"boot\" under the mounted root fs:<br /><pre>mount /sdROOT /mnt/temp<br />mount -B /dev /mnt/temp/dev<br />mount -B /dev/pts /mnt/temp/dev/pts<br />mount -B /proc /mnt/temp/proc<br />mount -B /sys /mnt/temp/sys</pre><br />AND, additionally:<br /><pre>mount /sdBOOT /mnt/temp/boot</pre><br />Otherwise I got an empty \"grub>\" prompt with no kernels found by grub.<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/5432566687488141671-3947170935338528467?l=linuxgrandma.blogspot.com\" width=\"1\" /></div>"))) ("Jos Poortvliet: marketing and talking points" "<p>Hi all!<br /><br />Next week - <a href=\"http://en.opensuse.org/Portal:Conference\">conference</a> :D<br />Looking forward to meeting many of you...<br /><br />But I blog about something else - I've spend a significant proportion of Monday on making screenshots... I saw an email on the GNOME marketing list mentioning how impressed they were by a <a href=\"http://dl.dropbox.com/u/312414/Presentation.tgz\">slideshow</a> used by the KDE team at the Utah Open Source Conference. This turned my mind back to an earlier discussion about screenshots. KDE.org has nice screenshots on pages like <a href=\"http://kde.org/workspaces/plasmadesktop/\">this one</a>, GNOME does not. So while creating <a href=\"http://en.opensuse.org/openSUSE:Slideshow\">screenshots for an openSUSE slideshow</a> I made a few with the stock GNOME artwork and send them their way...<br /><br /><b>Questions and answers</b><br /><br />Another thing I have worked on is our page with \"Talking Points\" for our ambassadors. The goal of these pages is to provide our ambassadors, who go to tradeshows and fairs to talk about openSUSE, with arguments and answers to questions. Of course I don't have the knowledge to answer all these questions, nor do I know what questions our ambassadors get asked.<br /><br />Yesterday I have re-arranged all the questions that have been added over the last weeks into a few neath pages where they can be answered. I also worked on some answers - but I need your help! Go through it, see if you can (help) answer them, or of course if you know more good questions. The wiki page is <a href=\"http://en.opensuse.org/openSUSE:Talking_points\">here</a>. Yes, some of these questions can be hard to answer but there are surely answers that are much simpler - so even if you think you don't know that much, go in, see if you can help our ambassadors out a bit!<br /><br />hugs,<br />Jos<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/12366865-7750561927919984857?l=nowwhatthe.blogspot.com\" width=\"1\" /></div>" "http://nowwhatthe.blogspot.com/2010/10/marketing-and-talking-points.html" (19638 52298) new 22 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-12366865.post-7750561927919984857") (title nil "Jos Poortvliet: marketing and talking points") (pubDate nil "Thu, 14 Oct 2010 09:24:26 GMT") (link nil "http://nowwhatthe.blogspot.com/2010/10/marketing-and-talking-points.html") (description nil "<p>Hi all!<br /><br />Next week - <a href=\"http://en.opensuse.org/Portal:Conference\">conference</a> :D<br />Looking forward to meeting many of you...<br /><br />But I blog about something else - I've spend a significant proportion of Monday on making screenshots... I saw an email on the GNOME marketing list mentioning how impressed they were by a <a href=\"http://dl.dropbox.com/u/312414/Presentation.tgz\">slideshow</a> used by the KDE team at the Utah Open Source Conference. This turned my mind back to an earlier discussion about screenshots. KDE.org has nice screenshots on pages like <a href=\"http://kde.org/workspaces/plasmadesktop/\">this one</a>, GNOME does not. So while creating <a href=\"http://en.opensuse.org/openSUSE:Slideshow\">screenshots for an openSUSE slideshow</a> I made a few with the stock GNOME artwork and send them their way...<br /><br /><b>Questions and answers</b><br /><br />Another thing I have worked on is our page with \"Talking Points\" for our ambassadors. The goal of these pages is to provide our ambassadors, who go to tradeshows and fairs to talk about openSUSE, with arguments and answers to questions. Of course I don't have the knowledge to answer all these questions, nor do I know what questions our ambassadors get asked.<br /><br />Yesterday I have re-arranged all the questions that have been added over the last weeks into a few neath pages where they can be answered. I also worked on some answers - but I need your help! Go through it, see if you can (help) answer them, or of course if you know more good questions. The wiki page is <a href=\"http://en.opensuse.org/openSUSE:Talking_points\">here</a>. Yes, some of these questions can be hard to answer but there are surely answers that are much simpler - so even if you think you don't know that much, go in, see if you can help our ambassadors out a bit!<br /><br />hugs,<br />Jos<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/12366865-7750561927919984857?l=nowwhatthe.blogspot.com\" width=\"1\" /></div>"))) ("Bastian Holst (bholst): OpenCycleMap server changed - don't forget to update" "<p><a><img src=\"http://www.kdedevelopers.org/files/images/marble_opencyclemap_update1.preview.png\" /></a><br />
As you probably know, you can download a lot of additional Marble maps with the “Get hot new stuff” framework. The reason for this entry is that OpenCycleMap is now using a different server for their map storage. For all users of the OpenCycleMap in Marble it means that they will have to update their map configuration if they want to see updated maps.</p>
<p>Fortunately updating maps is pretty easy in Marble thanks to the “Get hot new stuff” framework. Just click on “File-&gt;Download Maps...” and look for OpenCycleMap. It should have a little button “Update” next to it. A click on it updates your files automatically.</p>
<p>If you want to update your files manually or if you use the Qt-only version of Marble, just download the new file from <a href=\"http://edu.kde.org/marble/maps.php\" target=\"_BLANK\">the map download page</a>.</p>" "http://www.kdedevelopers.org/node/4339" (19638 52237) new 23 nil nil ((guid ((isPermaLink . "false")) "http://www.kdedevelopers.org/4339 at http://www.kdedevelopers.org") (title nil "Bastian Holst (bholst): OpenCycleMap server changed - don't forget to update") (pubDate nil "Thu, 14 Oct 2010 09:23:25 GMT") (link nil "http://www.kdedevelopers.org/node/4339") (description nil "<p><a><img src=\"http://www.kdedevelopers.org/files/images/marble_opencyclemap_update1.preview.png\" /></a><br />
As you probably know, you can download a lot of additional Marble maps with the &#8220;Get hot new stuff&#8221; framework. The reason for this entry is that OpenCycleMap is now using a different server for their map storage. For all users of the OpenCycleMap in Marble it means that they will have to update their map configuration if they want to see updated maps.</p>
<p>Fortunately updating maps is pretty easy in Marble thanks to the &#8220;Get hot new stuff&#8221; framework. Just click on &#8220;File-&gt;Download Maps...&#8221; and look for OpenCycleMap. It should have a little button &#8220;Update&#8221; next to it. A click on it updates your files automatically.</p>
<p>If you want to update your files manually or if you use the Qt-only version of Marble, just download the new file from <a href=\"http://edu.kde.org/marble/maps.php\" target=\"_BLANK\">the map download page</a>.</p>"))) ("Ariya Hidayat: yet another command-line JavaScript beautifier (based on V8)" "<p>While we're still on <a href=\"http://ariya.blogspot.com/2010/10/on-javascript-engines.html\">the topic of JavaScript</a>, I took the afternoon break to create a command-line runner for <a href=\"http://jsbeautifier.org/\">jsbeautifier.org</a> . In case you miss it, I did the similar thing <a href=\"http://ariya.blogspot.com/2010/09/offline-command-line-beautifier-for.html\">using Qt Script module</a>. This time however, the command-line tool uses and exploits <a href=\"http://v8.googlecode.com\">Google V8</a> instead.</p>
<p>If you update your clone of <a href=\"http://github.com/einars/js-beautify\">js-beautify repository</a>, check out the fresh v8 subdirectory. I also mirror the code in the usual <a href=\"http://gitorious.org/ofi-labs/X2\">X2 repository</a>, under the <a href=\"http://gitorious.org/ofi-labs/x2/trees/master/javascript/jsbeautify8\">javascript/jsbeautify8</a> subdirectory. Also, grok the included README.txt first.</p>
<p>This is probably the last thing the world needs now, but hey, it was a fun break.</p><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/17722541-4254995443414662187?l=ariya.blogspot.com\" width=\"1\" /></div>" "http://ariya.blogspot.com/2010/10/yet-another-command-line-javascript.html" (19638 39449) new 24 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-17722541.post-4254995443414662187") (title nil "Ariya Hidayat: yet another command-line JavaScript beautifier (based on V8)") (pubDate nil "Thu, 14 Oct 2010 05:50:17 GMT") (link nil "http://ariya.blogspot.com/2010/10/yet-another-command-line-javascript.html") (description nil "<p>While we're still on <a href=\"http://ariya.blogspot.com/2010/10/on-javascript-engines.html\">the topic of JavaScript</a>, I took the afternoon break to create a command-line runner for <a href=\"http://jsbeautifier.org/\">jsbeautifier.org</a> . In case you miss it, I did the similar thing <a href=\"http://ariya.blogspot.com/2010/09/offline-command-line-beautifier-for.html\">using Qt Script module</a>. This time however, the command-line tool uses and exploits <a href=\"http://v8.googlecode.com\">Google V8</a> instead.</p>

<p>If you update your clone of <a href=\"http://github.com/einars/js-beautify\">js-beautify repository</a>, check out the fresh v8 subdirectory. I also mirror the code in the usual <a href=\"http://gitorious.org/ofi-labs/X2\">X2 repository</a>, under the <a href=\"http://gitorious.org/ofi-labs/x2/trees/master/javascript/jsbeautify8\">javascript/jsbeautify8</a> subdirectory. Also, grok the included README.txt first.</p>

<p>This is probably the last thing the world needs now, but hey, it was a fun break.</p><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/17722541-4254995443414662187?l=ariya.blogspot.com\" width=\"1\" /></div>"))) ("Stephen Kelly (steveire): Grantlee version 0.1.7 now available" "<p>The <a href=\"http://www.grantlee.org\">Grantlee</a> community is pleased to announce the release of <a href=\"http://downloads.grantlee.org\">Grantlee version 0.1.7</a> (<a href=\"http://www.loegria.net/grantlee/\">Mirror</a>). I had intended to make this release a few days ago, but the last few days have not gone 100% according to plan.</p>
<p>This release introduces the significant feature of <a href=\"http://steveire.wordpress.com/2010/09/29/grantlee-pairs-up-with-the-other-template-system/\">generic types</a>, but it also has many other smaller improvements. Even that was not quite right, and needed some compile fixes for STL includes on FreeBSD contributed by Raphael Kubo da Costa. Thanks for the patch! Incidentally, I had just pushed a tag and put tarballs on the download server when I noticed Raphaels contribution (apparently gitorious doesn’t email you about it. How SMRT).  That means that every Grantlee release has had a contribution from someone who had not contributed before. Not bad.</p>
<p>The ever helpful <a href=\"http://blogs.fsfe.org/adridg/\">[ade]</a> notified me that the license text in source code header files is not exactly consistent with the COPYING file. The header text used the text ‘Library General Public License’ instead of ‘Lesser General Public License’. Additionally, the license version in the headers was identified as LGPL v2 (or later) instead of LGPL v2.1 (or later), which is what COPYING claims. In practice, nobody ever distributed Grantlee under the terms of the LGPL v2. Because of the license of Qt (LGPL 2.1), the ‘or later’ clause always kicked in, and it was distributed under a license compatible with the bundle it was distributed in (LGPL 2.1). At any rate, both issues with the license text are now fixed.</p>
<p>Several small issues with the documentation have now also been fixed. RenderContext was missing a doxygen command <tt>@headerfile</tt> to show the correct include path in the generated documentation (#include&nbsp;&lt;grantlee/rendercontext.h&gt; instead of just &lt;rendercontext.h&gt;). The RenderContext class itself now has fully documented public API, as does CachingLoaderDecorator. A slight lie in the documentation was also fixed in that it claimed dynamic properties of QObject were supported in Templates, but that didn’t work. The fix of course was to add a implementation and test for that feature.</p>
<p>I’ve also now made documentation generation fully automatic and part of the same release script that creates source tarballs. Now after running the unit tests the script creates Qt Assistant documentation and a web friendly documentation tarball with a link to the Qt Assistant file. The Grantlee documentation now has local links to stl documentation too so that if you have it <a href=\"http://steveire.wordpress.com/2010/10/08/stl-documentation-for-qt-assistant/\">loaded in your assistant</a>, the links will open directly in assistant. The web version opens links to the GNU generated stl documentation on the web using <a href=\"http://steveire.wordpress.com/2010/04/12/grantlee-gems-creating-documentation-for-qt-assistant/\">familiar scripts</a>.</p>
<div class=\"wp-caption aligncenter\" id=\"attachment_851\" style=\"width: 460px;\"><a href=\"http://steveire.files.wordpress.com/2010/10/granltee-docs-stl.png\"><img alt=\"\" class=\"size-full wp-image-851\" height=\"362\" src=\"http://steveire.files.wordpress.com/2010/10/granltee-docs-stl.png?w=450&h=362\" title=\"granltee-docs-stl\" width=\"450\" /></a><p class=\"wp-caption-text\">Opening STL documentation in assistant linked from Grantlee</p></div>
<p>The next big challenge in Grantlee is i18n, and it is definitely a tricky issue.</p>
<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/steveire.wordpress.com/843/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/steveire.wordpress.com/843/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/steveire.wordpress.com/843/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/steveire.wordpress.com/843/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/steveire.wordpress.com/843/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/steveire.wordpress.com/843/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/steveire.wordpress.com/843/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=steveire.wordpress.com&amp;blog=7316192&amp;post=843&amp;subd=steveire&amp;ref=&amp;feed=1\" width=\"1\" />" "http://steveire.wordpress.com/2010/10/13/grantlee-version-0-1-7-now-available/" (19638 12000) new 25 nil nil ((guid ((isPermaLink . "false")) "http://steveire.wordpress.com/?p=843") (title nil "Stephen Kelly (steveire): Grantlee version 0.1.7 now available") (pubDate nil "Wed, 13 Oct 2010 22:12:48 GMT") (link nil "http://steveire.wordpress.com/2010/10/13/grantlee-version-0-1-7-now-available/") (description nil "<p>The <a href=\"http://www.grantlee.org\">Grantlee</a> community is pleased to announce the release of <a href=\"http://downloads.grantlee.org\">Grantlee version 0.1.7</a> (<a href=\"http://www.loegria.net/grantlee/\">Mirror</a>). I had intended to make this release a few days ago, but the last few days have not gone 100% according to plan.</p>
<p>This release introduces the significant feature of <a href=\"http://steveire.wordpress.com/2010/09/29/grantlee-pairs-up-with-the-other-template-system/\">generic types</a>, but it also has many other smaller improvements. Even that was not quite right, and needed some compile fixes for STL includes on FreeBSD contributed by Raphael Kubo da Costa. Thanks for the patch! Incidentally, I had just pushed a tag and put tarballs on the download server when I noticed Raphaels contribution (apparently gitorious doesn&#8217;t email you about it. How SMRT).  That means that every Grantlee release has had a contribution from someone who had not contributed before. Not bad.</p>
<p>The ever helpful <a href=\"http://blogs.fsfe.org/adridg/\">[ade]</a> notified me that the license text in source code header files is not exactly consistent with the COPYING file. The header text used the text &#8216;Library General Public License&#8217; instead of &#8216;Lesser General Public License&#8217;. Additionally, the license version in the headers was identified as LGPL v2 (or later) instead of LGPL v2.1 (or later), which is what COPYING claims. In practice, nobody ever distributed Grantlee under the terms of the LGPL v2. Because of the license of Qt (LGPL 2.1), the &#8216;or later&#8217; clause always kicked in, and it was distributed under a license compatible with the bundle it was distributed in (LGPL 2.1). At any rate, both issues with the license text are now fixed.</p>
<p>Several small issues with the documentation have now also been fixed. RenderContext was missing a doxygen command <tt>@headerfile</tt> to show the correct include path in the generated documentation (#include&nbsp;&lt;grantlee/rendercontext.h&gt; instead of just &lt;rendercontext.h&gt;). The RenderContext class itself now has fully documented public API, as does CachingLoaderDecorator. A slight lie in the documentation was also fixed in that it claimed dynamic properties of QObject were supported in Templates, but that didn&#8217;t work. The fix of course was to add a implementation and test for that feature.</p>
<p>I&#8217;ve also now made documentation generation fully automatic and part of the same release script that creates source tarballs. Now after running the unit tests the script creates Qt Assistant documentation and a web friendly documentation tarball with a link to the Qt Assistant file. The Grantlee documentation now has local links to stl documentation too so that if you have it <a href=\"http://steveire.wordpress.com/2010/10/08/stl-documentation-for-qt-assistant/\">loaded in your assistant</a>, the links will open directly in assistant. The web version opens links to the GNU generated stl documentation on the web using <a href=\"http://steveire.wordpress.com/2010/04/12/grantlee-gems-creating-documentation-for-qt-assistant/\">familiar scripts</a>.</p>
<div class=\"wp-caption aligncenter\" id=\"attachment_851\" style=\"width: 460px;\"><a href=\"http://steveire.files.wordpress.com/2010/10/granltee-docs-stl.png\"><img alt=\"\" class=\"size-full wp-image-851\" height=\"362\" src=\"http://steveire.files.wordpress.com/2010/10/granltee-docs-stl.png?w=450&#038;h=362\" title=\"granltee-docs-stl\" width=\"450\" /></a><p class=\"wp-caption-text\">Opening STL documentation in assistant linked from Grantlee</p></div>
<p>The next big challenge in Grantlee is i18n, and it is definitely a tricky issue.</p>
<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/steveire.wordpress.com/843/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/steveire.wordpress.com/843/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/steveire.wordpress.com/843/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/steveire.wordpress.com/843/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/steveire.wordpress.com/843/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/steveire.wordpress.com/843/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/steveire.wordpress.com/843/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/steveire.wordpress.com/843/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=steveire.wordpress.com&amp;blog=7316192&amp;post=843&amp;subd=steveire&amp;ref=&amp;feed=1\" width=\"1\" />"))) ("Albert Astals Cid (TSDgeos): Interviewed in KDEBlog" "<p><a href=\"http://www.kdeblog.com/\">KDE Blog</a> has published a <a href=\"http://www.kdeblog.com/entrevistas-albert-astals-cid-i.html\">long interview</a> <a href=\"http://www.kdeblog.com/entrevistas-albert-astals-cid-ii.html\">in three</a> <a href=\"http://www.kdeblog.com/entrevistas-albert-astals-cid-y-iii.html\">pages</a> about my involvement in KDE, KDE España et al. The interview is in Spanish, so bad luck if you don't understand it (though you might want to try some translation service :D)<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/7523589-804997409271166023?l=tsdgeos.blogspot.com\" width=\"1\" /></div>" "http://tsdgeos.blogspot.com/2010/10/interviewed-in-kdeblog.html" (19638 4234) new 27 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-7523589.post-804997409271166023") (title nil "Albert Astals Cid (TSDgeos): Interviewed in KDEBlog") (pubDate nil "Wed, 13 Oct 2010 20:03:22 GMT") (link nil "http://tsdgeos.blogspot.com/2010/10/interviewed-in-kdeblog.html") (description nil "<p><a href=\"http://www.kdeblog.com/\">KDE Blog</a> has published a <a href=\"http://www.kdeblog.com/entrevistas-albert-astals-cid-i.html\">long interview</a> <a href=\"http://www.kdeblog.com/entrevistas-albert-astals-cid-ii.html\">in three</a> <a href=\"http://www.kdeblog.com/entrevistas-albert-astals-cid-y-iii.html\">pages</a> about my involvement in KDE, KDE Espa&#241;a et al. The interview is in Spanish, so bad luck if you don't understand it (though you might want to try some translation service :D)<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/7523589-804997409271166023?l=tsdgeos.blogspot.com\" width=\"1\" /></div>"))) ("Ariya Hidayat: on JavaScript engines" "<p>If you are using a modern browser, likely you already have the (arguably) most widely deployed scripting environment: <a href=\"http://en.wikipedia.org/wiki/JavaScript_engine\">JavaScript engine</a> (or ECMAScript, if you insist). There are many things you can do with it (just look at tons of cool web apps out there). However, since it is contained in the browser, there are also things the embedded JavaScript engine can not do for you.</p>
<p>If you are using KDE, you also have two excellent JavaScript engines: <a href=\"http://api.kde.org/4.x-api/kdelibs-apidocs/kjs/html/\">KJS</a> and <a href=\"http://doc.qt.nokia.com/4.7/qtscript.html\">Qt Script</a>. You can embed either of them (i.e. <a href=\"http://api.kde.org/4.x-api/kdelibs-apidocs/kjsembed/html/\">KJSEmbed</a>) and make your application scriptable. In a not-so-strange twist, they both relate (distantly) to each other via JavaScriptCore, WebKit's default JavaScript engine, because
long time ago Apple <a href=\"http://web.archive.org/web/20070310215550/www.opendarwin.org/pipermail/kde-darwin/2002-June/000034.html\">forked KJS</a> and used it as the base for JavaScriptCore, and Qt Script (for version 4.6 and 4.7) also <a href=\"http://labs.qt.nokia.com/2009/06/16/using-javascriptcore-as-the-qtscript-back-end/\">uses JavaScriptCore</a> as the back-end.</p>
<p>If you are interested in learning, using, and/or dissecting other open-source JavaScript engines, have a look at <a href=\"http://www.sencha.com/blog/2010/10/12/javascript-engines-how-to-compile-them/\">JavaScript Engines: How to Compile Them</a> I wrote for our Sencha blog, which covers Mozilla's SpiderMonkey, WebKit's JavaScriptCore, and Google V8. The instructions should work on the supported platforms, including ARM, in case (just like me) you want to have and carry around every JavaScript engines in this planet on your Maemo-powered Nokia N900. That is fun.<p>
<p>As the closing, just remember, &quot;Ask not what the JavaScript engine can do for you — ask what you can do for the JavaScript engine&quot;.</p><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/17722541-8964181569060936191?l=ariya.blogspot.com\" width=\"1\" /></div>" "http://ariya.blogspot.com/2010/10/on-javascript-engines.html" (19637 57513) new 29 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-17722541.post-8964181569060936191") (title nil "Ariya Hidayat: on JavaScript engines") (pubDate nil "Wed, 13 Oct 2010 16:39:05 GMT") (link nil "http://ariya.blogspot.com/2010/10/on-javascript-engines.html") (description nil "<p>If you are using a modern browser, likely you already have the (arguably) most widely deployed scripting environment: <a href=\"http://en.wikipedia.org/wiki/JavaScript_engine\">JavaScript engine</a> (or ECMAScript, if you insist). There are many things you can do with it (just look at tons of cool web apps out there). However, since it is contained in the browser, there are also things the embedded JavaScript engine can not do for you.</p>

<p>If you are using KDE, you also have two excellent JavaScript engines: <a href=\"http://api.kde.org/4.x-api/kdelibs-apidocs/kjs/html/\">KJS</a> and <a href=\"http://doc.qt.nokia.com/4.7/qtscript.html\">Qt Script</a>. You can embed either of them (i.e. <a href=\"http://api.kde.org/4.x-api/kdelibs-apidocs/kjsembed/html/\">KJSEmbed</a>) and make your application scriptable. In a not-so-strange twist, they both relate (distantly) to each other via JavaScriptCore, WebKit's default JavaScript engine, because 
long time ago Apple <a href=\"http://web.archive.org/web/20070310215550/www.opendarwin.org/pipermail/kde-darwin/2002-June/000034.html\">forked KJS</a> and used it as the base for JavaScriptCore, and Qt Script (for version 4.6 and 4.7) also <a href=\"http://labs.qt.nokia.com/2009/06/16/using-javascriptcore-as-the-qtscript-back-end/\">uses JavaScriptCore</a> as the back-end.</p>

<p>If you are interested in learning, using, and/or dissecting other open-source JavaScript engines, have a look at <a href=\"http://www.sencha.com/blog/2010/10/12/javascript-engines-how-to-compile-them/\">JavaScript Engines: How to Compile Them</a> I wrote for our Sencha blog, which covers Mozilla's SpiderMonkey, WebKit's JavaScriptCore, and Google V8. The instructions should work on the supported platforms, including ARM, in case (just like me) you want to have and carry around every JavaScript engines in this planet on your Maemo-powered Nokia N900. That is fun.<p>

<p>As the closing, just remember, &quot;Ask not what the JavaScript engine can do for you &#8212; ask what you can do for the JavaScript engine&quot;.</p><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/17722541-8964181569060936191?l=ariya.blogspot.com\" width=\"1\" /></div>"))))